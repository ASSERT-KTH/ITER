bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {	  if(type!=    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
2	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isAssignableFrom(type))  {	  if(type!=    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	137	None	replace
3	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type!=    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
4	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(type))  {	  if(type!=    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	137	None	replace
5	[BUG]  [BUGGY]  if(type!=  null  &&  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  &&  type.isAssignableFrom(rawType))  {	  if(type!=    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
6	[BUG]  [BUGGY]  if(rawType!=  null  ||  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  elementType.isAssignableFrom(rawType))  {	  if(type!=    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	137	None	replace
7	[BUG]  [BUGGY]  if(type!=  null  ||  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  elementType.isAssignableFrom(rawType))  {	  if(type!=    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	137	None	replace
8	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  elementType.getReturnType();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  elementType.getReturnType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  elementType.getReturnType();	  Class    <?    super    T>    rawType    =    type.getReturnType();    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
9	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getReturnType();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getReturnType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Class  <?  super  T>  rawType  =  type.getReturnType();	  Class    <?    super    T>    rawType    =    type.getReturnType();    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
10	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawType();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  type.getRawType();	  Class    <?    super    T>    rawType    =    type.getReturnType();    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
11	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  type.getQualifiedName();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  type.getQualifiedName();	  Class    <?    super    T>    rawType    =    type.getReturnType();    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
12	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	144	2	replace
13	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	144	2	replace
14	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	144	2	replace
15	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	144	2	replace
16	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
17	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	66	18	replace
18	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	66	18	replace
19	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
20	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
21	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  elementType.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
22	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  types.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  types  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  types.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  types.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  types	66	None	replace
23	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
24	[BUG]  [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
25	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
26	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
27	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
28	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
29	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
30	[BUG]  [BUGGY]  if(rawType!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
31	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(type))  {	  if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	16	None	replace
32	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(relativeType.isPrimitive()    ||    rawType.isPrimitive())    {    	compilable	  [FE]  ClassCastException  	121	2	replace
33	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  [FE]  ClassCastException  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(relativeType.isPrimitive()    ||    rawType.isPrimitive())    {    	compilable	  [FE]  ClassCastException  	121	2	replace
34	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  rawType.isPrimitive())  {	  if(relativeType.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
35	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  elementType.isPrimitive())  {  [CE]  cannot  find  symbol  elementType  [FE]                                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  elementType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  elementType.isPrimitive())  {	  if(relativeType.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	121	None	replace
36	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
37	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
38	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	123	18	replace
39	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	123	18	replace
40	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	123	None	replace
41	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	191	2	replace
42	[BUG]  [BUGGY]  if(rawType  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	191	2	replace
43	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  rawType  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	191	2	replace
44	[BUG]  [BUGGY]  if(type  ==  rawType  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  rawType  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	191	2	replace
45	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  type  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  type  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	191	18	replace
46	[BUG]  [BUGGY]  if(rawType!=  type  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  type  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  type  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	191	18	replace
47	[BUG]  [BUGGY]  if(type  ==  elementType  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  elementType  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  elementType  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	191	None	replace
48	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  rawType  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  rawType  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	191	18	replace
49	[BUG]  [BUGGY]  if(type!=  rawType  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  rawType  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  rawType  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	191	18	replace
50	[BUG]  [BUGGY]  if(rawType  ==  type  ||  Collection.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  type  ||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  type  ||  Collection.class.isAssignableFrom(type))  {	  if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	191	None	replace
51	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	18	replace
52	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	18	replace
53	[BUG]  [BUGGY]  if(rawType  ==  null  ||  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  elementType.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	159	None	replace
54	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	18	replace
55	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	18	replace
56	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null  ||  rawType.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	18	replace
57	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	18	replace
58	[BUG]  [BUGGY]  if(Type.Class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.Class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.Class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	124	None	replace
59	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.Class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.Class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.Class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
60	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	43	None	replace
61	[BUG]  [BUGGY]  if(elementType.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	43	None	replace
62	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(EnumSet.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	43	2	replace
63	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	43	2	replace
64	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Collection.class.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Collection.class.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
65	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  List.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  List.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  List.class.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(type)||    List.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	175	None	replace
66	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  ListSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  ListSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  ListSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    List.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	175	None	replace
67	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  rawType.getRawClass();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  rawType.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  rawType.getRawClass();	  Class    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
68	[BUG]  [BUGGY]  Category  <?  super  T>  rawType  =  type.getRawClass();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Category  <?  super  T>  rawType  =  type.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Category  <?  super  T>  rawType  =  type.getRawClass();	  Class    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
69	[BUG]  [BUGGY]  if(type.isAssignableFrom(Type.class))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(Type.class))  {	  if(rawType.isAssignableFrom(Type.class))    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
70	[BUG]  [BUGGY]  if(Type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Type.class))    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
71	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  rawType.isAssignableFrom(Type.class))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isAssignableFrom(Type.class))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	54	None	replace
72	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
73	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
74	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  Type  rawType  =  type.getRawClass();  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  Type  rawType  =  type.getRawClass();  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    Type  rawType  =  type.getRawClass();  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
75	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
76	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	152	None	add
77	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
78	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
79	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
80	[BUG]  [BUGGY]  Type  elementType  =  rawType.getElementType();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  elementType  =  rawType.getElementType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  elementType  =  rawType.getElementType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
81	[BUG]  [BUGGY]  final  Type  elementType  =  type.getElementType();  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Type  elementType  =  type.getElementType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Type  elementType  =  type.getElementType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
82	[BUG]  [BUGGY]  Type  elementType  =  type.getDeclaredType();  [CE]  illegal  start  of  type  [FE]                                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  elementType  =  type.getDeclaredType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  elementType  =  type.getDeclaredType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
83	[BUG]  [BUGGY]  Type  elementType  =  type.getRawType();  [CE]  illegal  start  of  type  [FE]                                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  elementType  =  type.getRawType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  elementType  =  type.getRawType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
84	[BUG]  [BUGGY]  Type  elementType  =  type.getConstructor();  [CE]  illegal  start  of  type  [FE]                                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  elementType  =  type.getConstructor();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  elementType  =  type.getConstructor();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
85	[BUG]  [BUGGY]  Type  elementType  =  type.getReturnType();  [CE]  illegal  start  of  type  [FE]                                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  elementType  =  type.getReturnType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  elementType  =  type.getReturnType();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
86	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  elementType.getRawClass();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  elementType.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Class  <?  super  T>  rawType  =  elementType.getRawClass();	  final    Class    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
87	[BUG]  [BUGGY]  static  final  Class  <?  super  T>  rawType  =  type.getRawClass();  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  static  final  Class  <?  super  T>  rawType  =  type.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	static  final  Class  <?  super  T>  rawType  =  type.getRawClass();	  final    Class    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
88	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(type))  {	  if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	136	None	replace
89	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  elementType.getSuperclass();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  elementType.getSuperclass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  elementType.getSuperclass();	  Class    <?    super    T>    rawType    =    type.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
90	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getSupertype();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  type.getSupertype();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  type.getSupertype();	  Class    <?    super    T>    rawType    =    type.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
91	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
92	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(SortedSet.class))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(SortedSet.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(SortedSet.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
93	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Object.class))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Object.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Object.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
94	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Set.class))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Set.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Set.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
95	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignedFrom(Collection.class))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignedFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    if(rawType.isPrimitive()  ||  rawType.isAssignedFrom(Collection.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
96	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Array.class))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Array.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Array.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
97	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  If(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  ';'  expected  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  If(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    If(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  	non-compiled	[CE]  ';'  expected	69	None	add
98	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Reference.class))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Reference.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Reference.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
99	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
100	[BUG]  [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
101	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
102	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypeUtils.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypeUtils.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  TypeUtils.class.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(type)||    TypeUtils.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	27	None	replace
103	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypeUtils.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypeUtils.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  TypeUtils.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypeUtils.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	27	None	replace
104	[BUG]  [BUGGY]  if(type.isAssignableFrom(type)||  TypeUtils.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(type)||  TypeUtils.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(type)||  TypeUtils.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypeUtils.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
105	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  TypeUtils.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  TypeUtils.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)&&  TypeUtils.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypeUtils.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	27	None	replace
106	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  type.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypeUtils.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	27	None	replace
107	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
108	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
109	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
110	[BUG]  [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
111	[BUG]  [BUGGY]  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
112	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	172	None	replace
113	[BUG]  [BUGGY]  if(type.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	172	None	replace
114	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type,  rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type,  rawType))  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	172	None	replace
115	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypeUtils.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypeUtils.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  TypeUtils.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	172	None	replace
116	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  TypeUtils.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	172	None	replace
117	[BUG]  [BUGGY]  if(GradientUtils.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  GradientUtils  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(GradientUtils.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(GradientUtils.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  GradientUtils	172	None	replace
118	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isArray())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isArray())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isArray())  {	  if(rawType.isPrimitive()    ||    type.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
119	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  type.isArray())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  type.isArray())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  type.isArray())  {	  if(rawType.isPrimitive()    ||    type.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
120	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  elementType.isArray())  {  [CE]  cannot  find  symbol  elementType  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  elementType.isArray())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  elementType.isArray())  {	  if(rawType.isPrimitive()    ||    type.isArray())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	183	None	replace
121	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  type.isArray())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  type.isArray())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  type.isArray())  {	  if(rawType.isPrimitive()    ||    type.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
122	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isArray())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  rawType.isArray())  {	  if(rawType.isPrimitive()    ||    type.isArray())    {    	compilable	  [FE]  ClassCastException  	183	2	replace
123	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isArray())  {  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isArray())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isArray())  {	  if(rawType.isPrimitive()    ||    type.isArray())    {    	compilable	  [FE]  ClassCastException  	183	2	replace
124	[BUG]  [BUGGY]  if(elementType.isPrimitive()  ||  type.isArray())  {  [CE]  cannot  find  symbol  elementType  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isPrimitive()  ||  type.isArray())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isPrimitive()  ||  type.isArray())  {	  if(rawType.isPrimitive()    ||    type.isArray())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	183	None	replace
125	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getConstructor();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getConstructor();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Class  <?  super  T>  rawType  =  type.getConstructor();	  final    Class    <?    super    T>    rawType    =    type.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
126	[BUG]  [BUGGY]  static  final  Class  <?  super  T>  rawType  =  type.getSuperclass();  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  static  final  Class  <?  super  T>  rawType  =  type.getSuperclass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	static  final  Class  <?  super  T>  rawType  =  type.getSuperclass();	  final    Class    <?    super    T>    rawType    =    type.getSuperclass();    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
127	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
128	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
129	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
130	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	195	None	replace
131	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type,  rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type,  rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type,  rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(type)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	8	None	replace
132	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType,  rawType))  {	  if(Type.class.isAssignableFrom(type)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	8	None	replace
133	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType,  type))  {	  if(Type.class.isAssignableFrom(type)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	8	None	replace
134	[BUG]  [BUGGY]  if(type.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(type)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
135	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType),  rawType)  {  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType),  rawType)  {	  if(Type.class.isAssignableFrom(type)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	8	None	replace
136	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(type)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
137	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  type.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  type.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	10	None	replace
138	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  rawType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  rawType.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	10	None	replace
139	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  elementType.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  elementType.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	10	None	replace
140	[BUG]  [BUGGY]  if(elementType.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	10	None	replace
141	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
142	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
143	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
144	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
145	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
146	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
147	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type!=  null  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type!=  null  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    if(type!=  null  ||  rawType.isAssignableFrom(Collection.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
148	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  If(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  If(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    If(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {	  	non-compiled	[CE]  ';'  expected	35	None	add
149	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.equals(Collection.class))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.equals(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    if(type  ==  null  ||  rawType.equals(Collection.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
150	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    if(rawType  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
151	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.isAssignableFrom(Set.class))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.isAssignableFrom(Set.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    if(type  ==  null  ||  rawType.isAssignableFrom(Set.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
152	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.isAssignableFrom(Array.class))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.isAssignableFrom(Array.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    if(type  ==  null  ||  rawType.isAssignableFrom(Array.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
153	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  Type  type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  ';'  expected  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  Type  type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    Type  type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {	  	non-compiled	[CE]  ';'  expected	35	None	add
154	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	169	None	add
155	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	169	None	add
156	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type  >=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type  >=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    if(type  >=  null  &&  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	169	None	add
157	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  &&  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  &&  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    if(type!=  null  &&  Collection.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	169	None	add
158	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    If(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	169	None	add
159	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  &&  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  &&  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    if(type!=  null  &&  collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	169	None	add
160	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  Type  type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  Type  type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    Type  type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	169	None	add
161	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  &&  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  &&  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    if(type!=  null  &&  Collection.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	169	None	add
162	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(type))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    Collection    <    Class    <?>.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
163	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Collection    <    Class    <?>.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
164	[BUG]  [BUGGY]  if(elementType.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Collection    <    Class    <?>.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
165	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection  <  Class  <?>.class))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection  <  Class  <?>.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection  <  Class  <?>.class))  {	  if(type.isPrimitive()    ||    Collection    <    Class    <?>.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
166	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	186	None	replace
167	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  Class.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  Class.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	186	None	replace
168	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType)&&  Class.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	186	2	replace
169	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Class.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&  Class.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	186	2	replace
170	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	139	None	replace
171	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(type))  {	  if(rawType.isPrimitive()    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	64	None	replace
172	[BUG]  [BUGGY]  if(rawType.isPrimitive()  &&  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  &&  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  &&  type.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
173	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  parentSet.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  parentSet  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  parentSet.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  parentSet.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  parentSet	64	None	replace
174	[BUG]  [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
175	[BUG]  [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
176	[BUG]  [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  SortSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
177	[BUG]  [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  TreeSet.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  TreeSet.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  TreeSet.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
178	[BUG]  [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
179	[BUG]  [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  CharacterSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  CharacterSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  CharacterSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
180	[BUG]  [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    If(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	157	None	add
181	[BUG]  [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  TreeSet.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  TreeSet.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  TreeSet.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	157	None	add
182	[BUG]  [BUGGY]  if(sortedSet  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  sortedSet  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sortedSet  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sortedSet  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  sortedSet	24	None	replace
183	[BUG]  [BUGGY]  if(sortedSet  ==  null  ||  rawType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  sortedSet  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sortedSet  ==  null  ||  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sortedSet  ==  null  ||  rawType.isAssignableFrom(type))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  sortedSet	24	None	replace
184	[BUG]  [BUGGY]  if(sort.class  ==  null  ||  sortedSet.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sort.class  ==  null  ||  sortedSet.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sort.class  ==  null  ||  sortedSet.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
185	[BUG]  [BUGGY]  if(sortedSet  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  sortedSet  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sortedSet  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sortedSet  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  sortedSet	24	None	replace
186	[BUG]  [BUGGY]  if(rawType  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
187	[BUG]  [BUGGY]  if(sortedSet!=  null  ||  rawType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  sortedSet  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sortedSet!=  null  ||  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sortedSet!=  null  ||  rawType.isAssignableFrom(type))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  sortedSet	24	None	replace
188	[BUG]  [BUGGY]  if(rawType!=  null  ||  type.isPrimitive()  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  type.isPrimitive()  ||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  type.isPrimitive()  ||  type.isPrimitive())  {	  if(type!=    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
189	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isPrimitive()  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isPrimitive()  ||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isPrimitive()  ||  type.isPrimitive())  {	  if(type!=    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
190	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isPrimitive()  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive()  ||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isPrimitive()  ||  type.isPrimitive())  {	  if(type!=    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
191	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive()  ||  type.isPrimitive())  {	  if(type!=    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
192	[BUG]  [BUGGY]  if(rawType!=  null  ||  type.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  type.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  type.isPrimitive()  ||  rawType.isPrimitive())  {	  if(type!=    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	165	None	replace
193	[BUG]  [BUGGY]  if(type!=  null  ||  elementType.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  elementType  [FE]                                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  elementType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  elementType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(type!=    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	165	None	replace
194	[BUG]  [BUGGY]  if(rawType.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignmentOp(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
195	[BUG]  [BUGGY]  if(type.isAssignmentOp(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignmentOp(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
196	[BUG]  [BUGGY]  if(TypeUtils.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignmentOp(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	39	None	replace
197	[BUG]  [BUGGY]  if(Type.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isAssignmentOp(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignmentOp(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
198	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
199	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
200	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
201	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	148	None	add
202	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
203	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  >=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
204	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  RawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  RawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  RawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
205	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
206	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
207	[BUG]  [BUGGY]  if(rawType  ==  null  ||  elementType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  elementType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  elementType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	153	None	replace
208	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {	  if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	153	None	replace
209	[BUG]  [BUGGY]  if(rawType!=  null  ||  type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
210	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)&&  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)&&  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)&&  Collection.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	42	None	replace
211	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  type.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  type.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  type.isAssignableFrom(Collection.class))  {	  if(TypeUtil.isAssignmentOp(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	42	None	replace
212	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  Class.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  Class.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  Class.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	42	None	replace
213	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type,  rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	7	None	replace
214	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type),  rawType)  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	7	None	replace
215	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	7	None	replace
216	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type,  type))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	7	None	replace
217	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
218	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
219	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.Class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.Class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
220	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignedFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignedFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
221	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&|  Class.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&|  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&|  Class.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
222	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  Class.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  Class.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||  Class.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
223	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
224	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	185	None	add
225	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
226	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
227	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
228	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
229	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
230	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	20	2	replace
231	[BUG]  [BUGGY]  if(type!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	20	2	replace
232	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  &&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  &&  SortedSet.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	20	2	replace
233	[BUG]  [BUGGY]  if(type  ==  null  &&  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  &&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  &&  SortedSet.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	20	2	replace
234	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
235	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
236	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
237	[BUG]  [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
238	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
239	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(Type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(Type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(Type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
240	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
241	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null  &&  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	34	2	replace
242	[BUG]  [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  &&  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	34	2	replace
243	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isPrimitive()  ||  rawType.isPrimitive())  {	  if(type    ==    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
244	[BUG]  [BUGGY]  if(type  ==  null  ||  elementType.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  elementType  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  elementType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  elementType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(type    ==    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	164	None	replace
245	[BUG]  [BUGGY]  if(rawType  ==  null  ||  elementType.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  elementType  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  elementType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  elementType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(type    ==    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	164	None	replace
246	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	114	None	replace
247	[BUG]  [BUGGY]  if(type.isAssignmentOp(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
248	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	114	None	replace
249	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
250	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
251	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
252	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
253	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(collection  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(collection  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(collection  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
254	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	1	None	replace
255	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	1	None	replace
256	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypedSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypedSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  TypedSet.class.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	1	None	replace
257	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type,  rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type,  rawType))  {	  if(TypeUtils.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	1	None	replace
258	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	147	None	replace
259	[BUG]  [BUGGY]  if(type.isAssignmentOp(type)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(type)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(type)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	147	None	replace
260	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  SortedMap.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  SortedMap.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  SortedMap.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	147	None	replace
261	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	147	None	replace
262	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  SortedSortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  SortedSortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  SortedSortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	147	None	replace
263	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  type.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  type.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  type.isAssignableFrom(Collection.class))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
264	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type,  rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	57	None	replace
265	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type,  type))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	57	None	replace
266	[BUG]  [BUGGY]  if(collection.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  collection  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  collection	57	None	replace
267	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||  type.isPrimitive())  {	  if(Type.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
268	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(rawType)||  type.isPrimitive())  {	  if(Type.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
269	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  elementType.isPrimitive())  {  [CE]  cannot  find  symbol  elementType  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  elementType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  elementType.isPrimitive())  {	  if(Type.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	55	None	replace
270	[BUG]  [BUGGY]  if(rawType.class.isAssignableFrom(Type.class)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.class.isAssignableFrom(Type.class)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.class.isAssignableFrom(Type.class)||  type.isPrimitive())  {	  if(Type.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
271	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {	  if(Type.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	compilable	  [FE]  ClassCastException  	55	2	replace
272	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {	  if(Type.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	compilable	  [FE]  ClassCastException  	55	2	replace
273	[BUG]  [BUGGY]  if(TypeUtil.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.class.isAssignableFrom(rawType)||  type.isPrimitive())  {	  if(Type.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
274	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
275	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
276	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
277	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	30	None	add
278	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Collection.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
279	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  >=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
280	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Collection.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
281	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  List.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  List.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
282	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
283	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
284	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type!=  null  ||  Collection.class.equals(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
285	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	125	None	replace
286	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	125	None	replace
287	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
288	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(rawType)||  type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(rawType)||  type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(rawType)||  type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
289	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  sourceType.isPrimitive())  {  [CE]  cannot  find  symbol  sourceType  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  sourceType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  sourceType.isPrimitive())  {	  if(elementType.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  sourceType	118	None	replace
290	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  elementsToSuppressWarnings(rawType.isPrimitive()))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  elementsToSuppressWarnings(rawType.isPrimitive()))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  elementsToSuppressWarnings(rawType.isPrimitive()))  {	  if(elementType.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
291	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	103	None	replace
292	[BUG]  [BUGGY]  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	103	None	replace
293	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EnumSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    if(EnumSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
294	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    if(SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
295	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EllipsisSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EllipsisSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    if(EllipsisSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
296	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EllipseSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EllipseSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    if(EllipseSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
297	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
298	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    if(Set.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
299	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EnumSet.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EnumSet.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    if(EnumSet.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
300	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.equals(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
301	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
302	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)&&  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	115	None	replace
303	[BUG]  [BUGGY]  if(type.isAssignmentOp(type)||  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(type)||  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(type)||  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
304	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  TypedSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  TypedSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  TypedSet.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	115	None	replace
305	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
306	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.Class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.Class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
307	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&  type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
308	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignedFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignedFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
309	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&  Type.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
310	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	11	None	add
311	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Category.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Category.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&  Category.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
312	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	6	None	replace
313	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  ClassUtils.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  ClassUtils.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  ClassUtils.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	6	None	replace
314	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  ClassUtils.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  ClassUtils.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  ClassUtils.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	6	None	replace
315	[BUG]  [BUGGY]  if(type.isAssignableFrom(type)||  Class.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(type)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(type)||  Class.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
316	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Class  <?>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Class  <?>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  Class  <?>.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
317	[BUG]  [BUGGY]  if(type.isAssignableFrom(type)||  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(type)||  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(type)||  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
318	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)&&  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	5	None	replace
319	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	5	None	replace
320	[BUG]  [BUGGY]  if(type.isAssignableFrom(type)&&  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(type)&&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(type)&&  SortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)&&    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
321	[BUG]  [BUGGY]  if(GradientSet.class.isAssignableFrom(type)&&  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(GradientSet.class.isAssignableFrom(type)&&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(GradientSet.class.isAssignableFrom(type)&&  SortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)&&    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
322	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  Class.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)&&  Class.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)&&    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	3	None	replace
323	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isAssignableFrom(rawType))  {	  if(elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	109	18	replace
324	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType))  {	  if(elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	109	18	replace
325	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(rawType))  {	  if(elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	109	None	replace
326	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(elementType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(elementType))  {	  if(elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	109	None	replace
327	[BUG]  [BUGGY]  if(TypeUtilities.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtilities  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtilities.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtilities.isAssignableFrom(rawType))  {	  if(elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtilities	109	None	replace
328	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  type.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  type.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType)&&  type.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)&&    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
329	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)&&  type.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)&&  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)&&  type.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)&&    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	179	None	replace
330	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  elementType  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)&&    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	179	None	replace
331	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)&&  rawType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)&&  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)&&  rawType.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)&&    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	179	None	replace
332	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)&&    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	179	None	replace
333	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)&&    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
334	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)&&  elementType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)&&  elementType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)&&  elementType.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)&&    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	179	None	replace
335	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	2	None	replace
336	[BUG]  [BUGGY]  if(Type.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
337	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	2	None	replace
338	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	2	None	replace
339	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type))  {	  if(type.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
340	[BUG]  [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
341	[BUG]  [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
342	[BUG]  [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  >=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  >=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type  >=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
343	[BUG]  [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
344	[BUG]  [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
345	[BUG]  [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  >>  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  >>  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type  >>  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
346	[BUG]  [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	19	None	add
347	[BUG]  [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
348	[BUG]  [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
349	[BUG]  [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  Type.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
350	[BUG]  [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  >=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  >=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type  >=  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
351	[BUG]  [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
352	[BUG]  [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	135	None	add
353	[BUG]  [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  Sort.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
354	[BUG]  [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    Type  type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	135	None	add
355	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(type,  rawType))  {	  if(rawType!=    null    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	38	None	replace
356	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  rawType))  {	  if(rawType!=    null    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	38	None	replace
357	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(type,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(type,  type))  {	  if(rawType!=    null    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	38	None	replace
358	[BUG]  [BUGGY]  if(type  >=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  >=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  >=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	38	None	replace
359	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  type))  {	  if(rawType!=    null    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	38	None	replace
360	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType))  {  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType))  {  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType))  {  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	168	None	replace
361	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class))  {  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	168	None	replace
362	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  Type.class.setAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  Type.class.setAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType))  {  Type.class.setAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	168	None	replace
363	[BUG]  [BUGGY]  Class.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	168	None	replace
364	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	9	None	replace
365	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(EnumSet.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	9	2	replace
366	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	9	2	replace
367	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  TypeUtil.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  TypeUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  TypeUtil.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	9	None	replace
368	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	9	None	replace
369	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	26	None	replace
370	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	26	None	replace
371	[BUG]  [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
372	[BUG]  [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  Type  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  Type  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  Type  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
373	[BUG]  [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  type  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  type  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  type  ||  collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
374	[BUG]  [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  type  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  type  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=  type  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
375	[BUG]  [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  type  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  type  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  type  ||  Collection.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
376	[BUG]  [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  >=  type  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  >=  type  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  >=  type  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
377	[BUG]  [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    If(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	190	None	add
378	[BUG]  [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  type  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  type  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    type    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  type  ||  Collection.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	190	None	add
379	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  type.isPrimitive())  {	  if(primeType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
380	[BUG]  [BUGGY]  if(elementType.isPrimitive()  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  elementType  [FE]                                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isPrimitive()  ||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isPrimitive()  ||  type.isPrimitive())  {	  if(primeType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	122	None	replace
381	[BUG]  [BUGGY]  if(primeType.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  primeType  [FE]                                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(primeType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(primeType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(primeType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  primeType	122	None	replace
382	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  elementType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  elementType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  elementType.isPrimitive())  {	  if(primeType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
383	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  type.isPrimitive())  {	  if(primeType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
384	[BUG]  [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
385	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
386	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
387	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
388	[BUG]  [BUGGY]  static  final  Class  <?  super  T>  rawType  =  type.getSuperClass();  [CE]  illegal  start  of  expression  [FE]                                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  static  final  Class  <?  super  T>  rawType  =  type.getSuperClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	static  final  Class  <?  super  T>  rawType  =  type.getSuperClass();	  final    Class    <?    super    T>    rawType    =    type.getSuperClass();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
389	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  elementType.getSuperClass();  [CE]  illegal  start  of  type  [FE]                                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  elementType.getSuperClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Class  <?  super  T>  rawType  =  elementType.getSuperClass();	  final    Class    <?    super    T>    rawType    =    type.getSuperClass();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
390	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	167	None	replace
391	[BUG]  [BUGGY]  if(type.isAssignableFrom(type)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(type)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(type)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
392	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)&&  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	167	None	replace
393	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(SortedSet.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(SortedSet.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	167	3	replace
394	[BUG]  [BUGGY]  if(SortedSet.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(SortedSet.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(SortedSet.class.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	167	3	replace
395	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  SortedSortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  SortedSortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  SortedSortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	167	None	replace
396	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  elementType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  elementType))  {	  if(rawType    ==    null    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	32	None	replace
397	[BUG]  [BUGGY]  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
398	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	156	2	replace
399	[BUG]  [BUGGY]  if(rawType  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	156	2	replace
400	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	156	2	replace
401	[BUG]  [BUGGY]  if(rawType  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	156	2	replace
402	[BUG]  [BUGGY]  if(rawType  ==  SortedSet.class  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  SortedSet.class  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  SortedSet.class  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	156	None	replace
403	[BUG]  [BUGGY]  if(rawType  ==  elementType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  elementType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  elementType  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	156	None	replace
404	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	156	2	replace
405	[BUG]  [BUGGY]  if(rawType  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	156	2	replace
406	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
407	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
408	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  >=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
409	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
410	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	33	None	add
411	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
412	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >>  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >>  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  >>  null  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
413	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Collection.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
414	[BUG]  [BUGGY]  if(rawType.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type.isAssignmentOp(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
415	[BUG]  [BUGGY]  if(Type.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type.isAssignmentOp(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
416	[BUG]  [BUGGY]  if(TypeUtils.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignmentOp(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type.isAssignmentOp(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	113	None	replace
417	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
418	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
419	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType  >=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
420	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
421	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	17	None	add
422	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  >>  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  >>  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType  >>  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
423	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
424	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
425	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
426	[BUG]  [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
427	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
428	[BUG]  [BUGGY]  if(resultType.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  resultType  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(resultType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(resultType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(resultType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  resultType	119	None	replace
429	[BUG]  [BUGGY]  if(TypeUtil.isEnumType(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isEnumType(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isEnumType(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isEnumType(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	187	None	replace
430	[BUG]  [BUGGY]  if(TypeUtil.isEnumType(rawType)||  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isEnumType(rawType)||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isEnumType(rawType)||  Collection.class.isAssignableFrom(type))  {	  if(TypeUtil.isEnumType(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	187	None	replace
431	[BUG]  [BUGGY]  if(type.isEnumType(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isEnumType(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isEnumType(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isEnumType(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
432	[BUG]  [BUGGY]  if(TypeUtil.isEnumType(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isEnumType(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isEnumType(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isEnumType(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	187	None	replace
433	[BUG]  [BUGGY]  if(TypeUtil.isExpressionType(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isExpressionType(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isExpressionType(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isEnumType(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	187	None	replace
434	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  type.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  type.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  type.isAssignableFrom(Collection.class))  {	  if(Type.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
435	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type,  rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	58	None	replace
436	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  elementType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  elementType  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  elementType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  elementType.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	58	None	replace
437	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	58	None	replace
438	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
439	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
440	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
441	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
442	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
443	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
444	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    SortedSet.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
445	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    SortedSet.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
446	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    SortedSet.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
447	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    SortedSet.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
448	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  elementType.getSuperClass();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  elementType.getSuperClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  elementType.getSuperClass();	  Class    <?    super    T>    rawType    =    type.getSuperClass();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
449	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getConstructor();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  type.getConstructor();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  type.getConstructor();	  Class    <?    super    T>    rawType    =    type.getSuperClass();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
450	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
451	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
452	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  >=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
453	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
454	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	150	None	add
455	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
456	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >>  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  >>  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  >>  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
457	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
458	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {	  if(Type.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
459	[BUG]  [BUGGY]  if(TypeUtil.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	65	None	replace
460	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	18	replace
461	[BUG]  [BUGGY]  if(rawType!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	18	replace
462	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	2	replace
463	[BUG]  [BUGGY]  if(rawType  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	2	replace
464	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(EnumSet.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isAssignableFrom(EnumSet.class))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	2	replace
465	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(EnumSet.class))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(EnumSet.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(EnumSet.class))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	2	replace
466	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    List.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
467	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    List.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	143	None	replace
468	[BUG]  [BUGGY]  if(collection.isPrimitive()  ||  type.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  collection  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.isPrimitive()  ||  type.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.isPrimitive()  ||  type.isAssignableFrom(Collection.class))  {	  if(type.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol  collection	59	None	replace
469	[BUG]  [BUGGY]  if(elementType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  elementType  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(type.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	59	None	replace
470	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  elementType.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  elementType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  elementType.isAssignableFrom(Collection.class))  {	  if(type.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
471	[BUG]  [BUGGY]  if(rafType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  rafType  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rafType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rafType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(type.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol  rafType	59	None	replace
472	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(type.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
473	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
474	[BUG]  [BUGGY]  if(type  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
475	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  type  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	18	replace
476	[BUG]  [BUGGY]  if(type  ==  type  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  type  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	18	replace
477	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
478	[BUG]  [BUGGY]  if(rawType  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
479	[BUG]  [BUGGY]  if(type  ==  RawType.class  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  RawType.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  RawType.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	193	None	replace
480	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
481	[BUG]  [BUGGY]  if(type  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  Type.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
482	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
483	[BUG]  [BUGGY]  if(Type.class  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class  ==  rawType  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
484	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.isAssignableFrom(Type.class))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class))    {    if(rawType.isAssignableFrom(Type.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
485	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.isAssignedFrom(Type.class))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.isAssignedFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class))    {    if(rawType.isAssignedFrom(Type.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
486	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  If(rawType.isAssignableFrom(Type.class))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  If(rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class))    {    If(rawType.isAssignableFrom(Type.class))  {	  	non-compiled	[CE]  ';'  expected	53	None	add
487	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.isAssignableFrom(Type.Class))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.isAssignableFrom(Type.Class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class))    {    if(rawType.isAssignableFrom(Type.Class))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
488	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.equals(Type.class))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.equals(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class))    {    if(rawType.equals(Type.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
489	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.getAssignableFrom(Type.class))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.getAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class))    {    if(rawType.getAssignableFrom(Type.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
490	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Type.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Type.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Type.class.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	188	None	replace
491	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  TypeUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  TypeUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  TypeUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
492	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  TypeUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  TypeUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  TypeUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
493	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	23	None	replace
494	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	23	2	replace
495	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	23	2	replace
496	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
497	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  TypedSet.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
498	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
499	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.Class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.Class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(Type.Class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
500	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.class.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.class.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(Type.class.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
501	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.class.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.class.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(Type.class.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
502	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	62	None	add
503	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.class.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.class.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(Type.class.isPrimitive()  ||  Collection.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
504	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(type,  rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(type,  rawType))  {	  if(TypeUtil.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	171	None	replace
505	[BUG]  [BUGGY]  if(type.isAssignableFrom(TypeUtil.class))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(TypeUtil.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(TypeUtil.class))  {	  if(TypeUtil.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	171	None	replace
506	[BUG]  [BUGGY]  if(GradientUtil.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  GradientUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(GradientUtil.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(GradientUtil.isAssignableFrom(type))  {	  if(TypeUtil.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  GradientUtil	171	None	replace
507	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
508	[BUG]  [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
509	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
510	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
511	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  SortedSet.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
512	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	15	None	add
513	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
514	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType  >=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
515	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  TreeSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  TreeSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  TreeSet.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	146	None	replace
516	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  TreeSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)&&  TreeSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	146	None	replace
517	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  TypeSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  TypeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  TypeSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	146	None	replace
518	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  ClassSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  ClassSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  ClassSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	146	None	replace
519	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  List.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  List.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	146	None	replace
520	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.equals(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  Collection.class.equals(type))  {	  if(type.isPrimitive()    ||    Collection.class.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	163	2	replace
521	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.equals(type))  {  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.equals(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Collection.class.equals(type))  {	  if(type.isPrimitive()    ||    Collection.class.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	163	2	replace
522	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.equals(Collection.class))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.equals(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.equals(Collection.class))  {	  if(type.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
523	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  elementType.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  elementType.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  elementType.equals(rawType))  {	  if(type.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
524	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  collection.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  collection.class.equals(rawType))  {	  if(type.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
525	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  RawType.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  RawType.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  RawType.class.equals(rawType))  {	  if(type.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
526	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
527	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
528	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
529	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
530	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
531	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(type,  rawType))  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	132	None	replace
532	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(type,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(type,  type))  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	132	None	replace
533	[BUG]  [BUGGY]  if(type  ==  null  ||  Sort.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Sort.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Sort.class.isAssignableFrom(type))  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	132	None	replace
534	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  elementType.getRawClass();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  <?  super  T>  rawType  =  elementType.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  <?  super  T>  rawType  =  elementType.getRawClass();	  Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
535	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  type.getReturnType();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  <?  super  T>  rawType  =  type.getReturnType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  <?  super  T>  rawType  =  type.getReturnType();	  Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
536	[BUG]  [BUGGY]  SortedSet  <?  super  T>  rawType  =  type.getRawClass();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  SortedSet  <?  super  T>  rawType  =  type.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	SortedSet  <?  super  T>  rawType  =  type.getRawClass();	  Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
537	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)&&  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)&&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)&&  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	40	None	replace
538	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  type.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	40	None	replace
539	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  rawType))  {	  if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	21	None	replace
540	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  type))  {	  if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	21	None	replace
541	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  elementType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  elementType))  {	  if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	21	None	replace
542	[BUG]  [BUGGY]  if(collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.class.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
543	[BUG]  [BUGGY]  if(collection.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  collection  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.isPrimitive()  ||  type.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  collection	61	None	replace
544	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(type)||  type.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Collection.class.isAssignableFrom(type)||  type.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Collection.class.isAssignableFrom(type)||  type.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	61	None	replace
545	[BUG]  [BUGGY]  if(collectionType.isPrimitive()  ||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  collectionType  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collectionType.isPrimitive()  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collectionType.isPrimitive()  ||  type.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  collectionType	61	None	replace
546	[BUG]  [BUGGY]  if(collection.class.isAssignableFrom(type)||  type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.class.isAssignableFrom(type)||  type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.class.isAssignableFrom(type)||  type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
547	[BUG]  [BUGGY]  if(collectionType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  collectionType  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collectionType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collectionType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  collectionType	61	None	replace
548	[BUG]  [BUGGY]  if(collection.class.isAssignableFrom(type)||  type.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.class.isAssignableFrom(type)||  type.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.class.isAssignableFrom(type)||  type.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
549	[BUG]  [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
550	[BUG]  [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  rawType  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  rawType  ||  SortedSet.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type  ==  rawType  ||  SortedSet.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
551	[BUG]  [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
552	[BUG]  [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  >=  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  >=  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type  >=  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
553	[BUG]  [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  RawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  RawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type  ==  RawType  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
554	[BUG]  [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	155	None	add
555	[BUG]  [BUGGY]  Category  <?  super  T>  rawType  =  elementType.getRawClass();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Category  <?  super  T>  rawType  =  elementType.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Category  <?  super  T>  rawType  =  elementType.getRawClass();	  Class    <?    super    T>    rawType    =    elementType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
556	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
557	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
558	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  >=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  >=  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
559	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Type.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
560	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  type.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
561	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  If(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  If(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    If(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	133	None	add
562	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Sort.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
563	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Category.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Category.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Category.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
564	[BUG]  [BUGGY]  if(type.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
565	[BUG]  [BUGGY]  if(rawType.isArray()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()  ||  type.isAssignableFrom(rawType))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
566	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()  ||  Collection.class.isAssignableFrom(type))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	68	None	replace
567	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isInterface()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isInterface()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	68	18	replace
568	[BUG]  [BUGGY]  if(rawType.isInterface()  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isInterface()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isInterface()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	68	18	replace
569	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isArray()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	68	2	replace
570	[BUG]  [BUGGY]  if(rawType.isArray()  ||  rawType.isAssignableFrom(Collection.class))  {  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	68	2	replace
571	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isAssignableFrom(Type.class)||  rawType.isAssignableFrom(Type.class))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	87	2	replace
572	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  rawType.isAssignableFrom(Type.class))  {  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||  rawType.isAssignableFrom(Type.class))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	87	2	replace
573	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type,  rawType))  {	  if(rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	105	None	replace
574	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type,  type))  {	  if(rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	105	None	replace
575	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
576	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
577	[BUG]  [BUGGY]  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
578	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
579	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
580	[BUG]  [BUGGY]  if(rawType  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
581	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	18	replace
582	[BUG]  [BUGGY]  if(type  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  type  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	18	replace
583	[BUG]  [BUGGY]  if(type  ==  RawType.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  RawType.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  RawType.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	178	None	replace
584	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
585	[BUG]  [BUGGY]  if(type  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  SortedSet.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
586	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
587	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
588	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(Collection.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
589	[BUG]  [BUGGY]  if(rawType  ==  null  ||  elementType.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  elementType  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  elementType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  elementType.isAssignableFrom(Collection.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	36	None	replace
590	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(Class.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  null  ||  rawType.isAssignableFrom(Class.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
591	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(Class.class))  {  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(Class.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(Class.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
592	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(Object.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  null  ||  rawType.isAssignableFrom(Object.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
593	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(Object.class))  {  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(Object.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(Object.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
594	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(RawClass.class))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(RawClass.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(RawClass.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
595	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
596	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type))  {	  if(type.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
597	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	28	None	replace
598	[BUG]  [BUGGY]  if(Type.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
599	[BUG]  [BUGGY]  if(elementType.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	28	None	replace
600	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  ClassUtil.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  ClassUtil.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  ClassUtil.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	116	None	replace
601	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  Class  <?>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  Class  <?>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  Class  <?>.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
602	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  ClassUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  ClassUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  ClassUtil.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	116	None	replace
603	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  TypeUtil.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  TypeUtil.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  TypeUtil.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	116	None	replace
604	[BUG]  [BUGGY]  if(type.isAssignmentOp(type)||  Class.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(type)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(type)||  Class.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
605	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
606	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
607	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignedFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    if(rawType.isAssignedFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
608	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Type.class)||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Type.class)||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Type.class)||  Type.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
609	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Type.Class)||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Type.Class)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Type.Class)||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
610	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Type.class)||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  if(rawType.isAssignableFrom(Type.class)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    if(rawType.isAssignableFrom(Type.class)||  type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
611	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
612	[BUG]  [BUGGY]  if(type.isAssignmentOp(type)&&  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(type)&&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(type)&&  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)&&    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
613	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  Class.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)&&  Class.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)&&    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	41	None	replace
614	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
615	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
616	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
617	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
618	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
619	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
620	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
621	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
622	[BUG]  [BUGGY]  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
623	[BUG]  [BUGGY]  if(rawType  ==  null)  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
624	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(type))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(type))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(type))  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
625	[BUG]  [BUGGY]  if(rawType!=  null)  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
626	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||  type.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
627	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  elementType.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	56	None	replace
628	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
629	[BUG]  [BUGGY]  if(rawType.class.isAssignableFrom(Type.class)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.class.isAssignableFrom(Type.class)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.class.isAssignableFrom(Type.class)||  type.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
630	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  rawType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  rawType.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	56	None	replace
631	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||  elementType.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	56	None	replace
632	[BUG]  [BUGGY]  final  Type  <?  super  T>  rawType  =  elementType.getRawClass();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Type  <?  super  T>  rawType  =  elementType.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Type  <?  super  T>  rawType  =  elementType.getRawClass();	  final    Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
633	[BUG]  [BUGGY]  final  Type  <?  super  T>  rawType  =  type.getReturnType();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Type  <?  super  T>  rawType  =  type.getReturnType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Type  <?  super  T>  rawType  =  type.getReturnType();	  final    Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
634	[BUG]  [BUGGY]  final  Type  <?  super  T>  rawType  =  type.getSuperClass();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Type  <?  super  T>  rawType  =  type.getSuperClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Type  <?  super  T>  rawType  =  type.getSuperClass();	  final    Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
635	[BUG]  [BUGGY]  static  final  Type  <?  super  T>  rawType  =  type.getRawClass();  [CE]  illegal  start  of  expression  [FE]                                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  static  final  Type  <?  super  T>  rawType  =  type.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	static  final  Type  <?  super  T>  rawType  =  type.getRawClass();	  final    Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
636	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	18	2	replace
637	[BUG]  [BUGGY]  if(rawType!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  &&  SortedSet.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	18	2	replace
638	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)&&  SortedSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)&&  SortedSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)&&  SortedSet.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(rawType)||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	112	None	replace
639	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  TypeSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  TypeSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  TypeSet.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(rawType)||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	112	None	replace
640	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	88	None	replace
641	[BUG]  [BUGGY]  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
642	[BUG]  [BUGGY]  Constructor.class.isAssignableFrom(rawType)  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Constructor.class.isAssignableFrom(rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Constructor.class.isAssignableFrom(rawType)  {	  if(Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	88	None	replace
643	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
644	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
645	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
646	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
647	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
648	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  If(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  If(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	130	None	add
649	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
650	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Category.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Category.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Category.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
651	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  rawType.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  rawType.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	106	None	replace
652	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType)||  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType)||  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType)||  elementType.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	106	None	replace
653	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  elements.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  elements.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  elements.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	106	None	replace
654	[BUG]  [BUGGY]  if(elementType.isAssignableFrom(rawType)||  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isAssignableFrom(rawType)||  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isAssignableFrom(rawType)||  elementType.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	106	None	replace
655	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)&&  elementType.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)&&  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)&&  elementType.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)&&    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	180	None	replace
656	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType)&&  type.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)&&    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
657	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)&&    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	180	None	replace
658	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)&&  elementType.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)&&    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
659	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
660	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	194	None	replace
661	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
662	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
663	[BUG]  [BUGGY]  if(rawType.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
664	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type,  rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type,  rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type,  rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	161	None	replace
665	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType,  type))  {	  if(Type.class.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	161	None	replace
666	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType,  rawType))  {	  if(Type.class.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	161	None	replace
667	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	161	None	replace
668	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType),  rawType)  {  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType),  rawType)  {	  if(Type.class.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	161	None	replace
669	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  rawType.isAssignableFrom(Collection.class))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  rawType.isAssignableFrom(Collection.class))  {	  if(Type.class.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	161	None	replace
670	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  type.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  type.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  type.isAssignableFrom(Collection.class))  {	  if(TypeUtils.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	25	None	replace
671	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TreeSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)||  TreeSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)||  TreeSet.class.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	166	None	replace
672	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  TypeSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	166	None	replace
673	[BUG]  [BUGGY]  if(type.isAssignableFrom(type)||  TreeSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(type)||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(type)||  TreeSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	166	None	replace
674	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  TreeSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)&&  TreeSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	166	None	replace
675	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  ClassSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  ClassSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  ClassSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	166	None	replace
676	[BUG]  [BUGGY]  if(type.isAssignmentOp(type)&&  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(type)&&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(type)&&  SortedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)&&    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
677	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  List.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)&&  List.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)&&    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	111	None	replace
678	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(type))  {	  if(TypeUtils.isAssignableFrom(type)&&    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	29	None	replace
679	[BUG]  [BUGGY]  if(type.isAssignableFrom(type)&&  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(type)&&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(type)&&  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)&&    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
680	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
681	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
682	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
683	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?>)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
684	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
685	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
686	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	2	replace
687	[BUG]  [BUGGY]  if(Type.class.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	2	replace
688	[BUG]  [BUGGY]  if(type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
689	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()  ||  type.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
690	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
691	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
692	[BUG]  [BUGGY]  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
693	[BUG]  [BUGGY]  if(rawType  ==  null)  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
694	[BUG]  [BUGGY]  if(rawType!=  null)  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
695	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
696	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
697	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
698	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isObject()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isObject()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isObject()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
699	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isArray()  ||  collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
700	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isArray()  ||  Collection.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
701	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isString()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isString()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isString()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
702	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	67	None	add
703	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isArray()  ||  Collection.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
704	[BUG]  [BUGGY]  if(primaryType.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  primaryType  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(primaryType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(primaryType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(primaryType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  primaryType	189	None	replace
705	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignedFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignedFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignedFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
706	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Character.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType)||  Character.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	90	2	replace
707	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Character.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Character.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Character.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	90	2	replace
708	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	101	None	replace
709	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	101	None	replace
710	[BUG]  [BUGGY]  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	101	None	replace
711	[BUG]  [BUGGY]  if(rawType  ==  null)  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	101	None	replace
712	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	101	None	replace
713	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	101	None	replace
714	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Collections.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Collections.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Collections.class.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    Collections.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
715	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Collections.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Collections.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Collections.class.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    Collections.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
716	[BUG]  [BUGGY]  if(elementType.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Collections.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	160	None	replace
717	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collections.class))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collections.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collections.class))  {	  if(type.isPrimitive()    ||    Collections.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
718	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Collections.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
719	[BUG]  [BUGGY]  if(rowType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  rowType  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rowType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rowType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(elementType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  rowType	60	None	replace
720	[BUG]  [BUGGY]  if(TypeUtils.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(elementType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	60	None	replace
721	[BUG]  [BUGGY]  if(type.isAssignableFrom(Type.class)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(Type.class)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(Type.class)||  type.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
722	[BUG]  [BUGGY]  if(Type.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
723	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	14	None	replace
724	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	2	replace
725	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Type.class))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	2	replace
726	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	18	replace
727	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	18	replace
728	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	2	replace
729	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	2	replace
730	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Class.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Class.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	2	replace
731	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Class.class))  {  [FE]  ClassCastException  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Class.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Class.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	2	replace
732	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
733	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
734	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
735	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	158	2	replace
736	[BUG]  [BUGGY]  if(rawType  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	158	2	replace
737	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	158	18	replace
738	[BUG]  [BUGGY]  if(rawType!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	158	18	replace
739	[BUG]  [BUGGY]  if(rawType  ==  null  ||  TreeSet.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  TreeSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  TreeSet.class.isAssignableFrom(type))  {	  if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	158	None	replace
740	[BUG]  [BUGGY]  if(type  ==  null  ||  TypeSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TypeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  TypeSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	158	None	replace
741	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	compilable	  [FE]  ClassCastException  	192	2	replace
742	[BUG]  [BUGGY]  if(type  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	compilable	  [FE]  ClassCastException  	192	2	replace
743	[BUG]  [BUGGY]  if(type!=  Collection.class  &&  rawType!=  null  &&  Collection.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  Collection.class  &&  rawType!=  null  &&  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  Collection.class  &&  rawType!=  null  &&  Collection.class.isAssignableFrom(type))  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	192	None	replace
744	[BUG]  [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  rawType))  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	192	None	replace
745	[BUG]  [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  type))  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	192	None	replace
746	[BUG]  [BUGGY]  if(type  >=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  >=  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  >=  null  &&  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	192	None	replace
747	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type,  rawType))  {	  if(Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	52	None	replace
748	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType,  type))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType,  type))  {	  if(Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	52	None	replace
749	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(Type.class))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(Type.class))  {	  if(Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
750	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  type.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  type.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  type.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
751	[BUG]  [BUGGY]  if(rafType.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  rafType  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rafType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rafType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(rafType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  rafType	120	None	replace
752	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	75	None	replace
753	[BUG]  [BUGGY]  if(rawType!=  null)  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	75	None	replace
754	[BUG]  [BUGGY]  if(rawType!=  null)  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	75	None	replace
755	[BUG]  [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	75	None	replace
756	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.class.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	89	2	replace
757	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(rawType))  {  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.class.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	89	2	replace
758	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(type))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.class.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	89	2	replace
759	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(type))  {  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.equals(type))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.class.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	89	2	replace
760	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
761	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
762	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
763	[BUG]  [BUGGY]  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
764	[BUG]  [BUGGY]  if(Type.class.isAssignedFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignedFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignedFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
765	[BUG]  [BUGGY]  if(type.isAssignedFrom(rawType)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignedFrom(rawType)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignedFrom(rawType)||  type.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
766	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
767	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)&&  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	12	None	replace
768	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(rawType)&&  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(rawType)&&  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(rawType)&&  type.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
769	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
770	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
771	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
772	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    CollectionSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
773	[BUG]  [BUGGY]  if(elementType.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	162	None	replace
774	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
775	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  CollectionSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  CollectionSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  CollectionSet.class.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    CollectionSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
776	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  collectionSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  collectionSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  collectionSet.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
777	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
778	[BUG]  [BUGGY]  if(elementType.isAssignableFrom(rawType)||  rawType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  elementType  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isAssignableFrom(rawType)||  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isAssignableFrom(rawType)||  rawType.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)||    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	110	None	replace
779	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  elementType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  elementType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  elementType.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)||    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	110	None	replace
780	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {	  if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	149	None	replace
781	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
782	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive()  ||  collection.class.isAssignableFrom(type))  {	  if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	149	None	replace
783	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
784	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.Class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.Class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
785	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
786	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  SortedSet.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)||  SortedSet.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||  SortedSet.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
787	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignedFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignedFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	22	None	add
788	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	22	None	add
789	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
790	[BUG]  [BUGGY]  if(elementType.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(elementType.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(elementType.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	182	None	replace
791	[BUG]  [BUGGY]  if(TypeUtil.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	182	None	replace
792	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(CollectionUtil.class))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(CollectionUtil.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isAssignableFrom(CollectionUtil.class))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
793	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
794	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
795	[BUG]  [BUGGY]  if(rawType.class.isAssignableFrom(Type.class)||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.class.isAssignableFrom(Type.class)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.class.isAssignableFrom(Type.class)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
796	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  elementType.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  elementType.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  elementType.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
797	[BUG]  [BUGGY]  if(TypeUtil.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
798	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
799	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Sort.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
800	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Sort.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
801	[BUG]  [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  type.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Sort.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
802	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Sort.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
803	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Sort.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
804	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	154	None	replace
805	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	154	None	replace
806	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	154	None	replace
807	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	154	None	replace
808	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	154	None	replace
809	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
810	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType))  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
811	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type)||  type.isPrimitive())  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type)||  type.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	184	None	replace
812	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	compilable	  [FE]  ClassCastException  	184	2	replace
813	[BUG]  [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	compilable	  [FE]  ClassCastException  	184	2	replace
814	[BUG]  [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)||  elementType.isPrimitive())  {  [CE]  cannot  find  symbol  elementType  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)||  elementType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)||  elementType.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  elementType	184	None	replace
815	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(type)||  type.isPrimitive())  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(type)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(type)||  type.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	184	None	replace
816	[BUG]  [BUGGY]  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  collection.class.isAssignableFrom(rawType)||  type.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
817	[BUG]  [BUGGY]  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  Collection.class.isAssignableFrom(rawType)||  type.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
818	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	170	2	replace
819	[BUG]  [BUGGY]  if(rawType  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  &&  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	170	2	replace
820	[BUG]  [BUGGY]  if(SortedSet.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(SortedSet.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(SortedSet.class.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(type))  {	  if(SortedSet.class.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	4	None	replace
821	[BUG]  [BUGGY]  if(type.isAssignableFrom(SortedSet.class)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(SortedSet.class)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(SortedSet.class)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(SortedSet.class.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
822	[BUG]  [BUGGY]  if(TypeSortedSet.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeSortedSet.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeSortedSet.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(SortedSet.class.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
823	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  rawType.isPrimitive()  ||  type.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	151	None	replace
824	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
825	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
826	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
827	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
828	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  type.getSuperclass();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  <?  super  T>  rawType  =  type.getSuperclass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  <?  super  T>  rawType  =  type.getSuperclass();	  Class    <?    super    T>    rawType    =    type.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
829	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
830	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	148	None	add
831	[BUG]  [BUGGY]  final  Type  <?  super  T>  rawType  =  type.getConstructor();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Type  <?  super  T>  rawType  =  type.getConstructor();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Type  <?  super  T>  rawType  =  type.getConstructor();	  final    Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
832	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type,  rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type,  rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type,  rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	167	None	replace
833	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  SortedList.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  SortedList.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  SortedList.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	167	None	replace
834	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TypeUtil.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TypeUtil.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  TypeUtil.class.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
835	[BUG]  [BUGGY]  if(TypeUtils.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	176	None	replace
836	[BUG]  [BUGGY]  if(sort.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  sort  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sort.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sort.isPrimitive()  ||  rawType.isPrimitive())  {	  if(relativeType.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  sort	121	None	replace
837	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type,  rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type,  rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type,  rawType)||  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	5	None	replace
838	[BUG]  [BUGGY]  if(rawType.equals(type)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.equals(type)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.equals(type)||  type.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
839	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  not  a  statement  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  not  a  statement	62	None	add
840	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Sort.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
841	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Sort.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
842	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Sort.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Sort.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
843	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Set.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
844	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive()  ||  type.isPrimitive())  {	  if(type    ==    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
845	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(Type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
846	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
847	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(type  ==  null  ||  rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	152	None	add
848	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  sourceType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  sourceType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  sourceType.isPrimitive())  {	  if(primaryType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
849	[BUG]  [BUGGY]  if(type  ==  null  ||  primitiveType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  primitiveType  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  primitiveType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  primitiveType.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  primitiveType	159	None	replace
850	[BUG]  [BUGGY]  if(type  ==  null  ||  TypeUtil.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TypeUtil.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  TypeUtil.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	159	None	replace
851	[BUG]  [BUGGY]  if(type  ==  null  ||  types.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  types  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  types.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  types.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  types	159	None	replace
852	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
853	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
854	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
855	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
856	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(Type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(Type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	145	None	replace
857	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)&&  rawType.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)&&  rawType.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)&&    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	180	None	replace
858	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)&&    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	180	None	replace
859	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&  type.isPrimitive())  {	  if(Type.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
860	[BUG]  [BUGGY]  if(resultType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  resultType  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(resultType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(resultType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(type.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol  resultType	59	None	replace
861	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type,  elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type,  elementType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type,  elementType))  {	  if(rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	105	None	replace
862	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getClass();  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.getClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Class  <?  super  T>  rawType  =  type.getClass();	  final    Class    <?    super    T>    rawType    =    type.getSuperClass();    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
863	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
864	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type!=  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
865	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(collection  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(collection  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(collection  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
866	[BUG]  [BUGGY]  if(type  ==  null  ||  Collections.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Collections.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Collections.class.isAssignableFrom(rawType)||  type.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
867	[BUG]  [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)&&  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)&&  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType)&&  type.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
868	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
869	[BUG]  [BUGGY]  if(type  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  Class.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
870	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
871	[BUG]  [BUGGY]  if(type  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  Type.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
872	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Enum.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  Enum.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
873	[BUG]  [BUGGY]  if(type  ==  Enum.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Enum.class  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  Enum.class  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	178	2	replace
874	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
875	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
876	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
877	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null  ||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isAssignableFrom(Type.class))    {    	compilable	  [FE]  ClassCastException  	54	18	replace
878	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isAssignableFrom(Type.class))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isAssignableFrom(Type.class))    {    	compilable	  [FE]  ClassCastException  	54	18	replace
879	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isAssignableFrom(Type.class))    {    	compilable	  [FE]  ClassCastException  	54	2	replace
880	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Type.class))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isAssignableFrom(Type.class))    {    	compilable	  [FE]  ClassCastException  	54	2	replace
881	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null  ||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isAssignableFrom(Type.class))    {    	compilable	  [FE]  ClassCastException  	54	18	replace
882	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isAssignableFrom(Type.class))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isAssignableFrom(Type.class))    {    	compilable	  [FE]  ClassCastException  	54	18	replace
883	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
884	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  }  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  }	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	72	18	replace
885	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  }  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  }  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  }	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	72	18	replace
886	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  Collection.class  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  Collection.class  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  Collection.class  ||  type.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
887	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.equals(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
888	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
889	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
890	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
891	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	158	18	replace
892	[BUG]  [BUGGY]  if(type!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	158	18	replace
893	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getElementType();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  type.getElementType();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  type.getElementType();	  Class    <?    super    T>    rawType    =    type.getReturnType();    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
894	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null)  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    >=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	73	18	replace
895	[BUG]  [BUGGY]  if(rawType!=  null)  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    >=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	73	18	replace
896	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  elementType.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  elementType.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  elementType.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
897	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
898	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
899	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
900	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
901	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
902	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(Type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(Type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(Type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
903	[BUG]  [BUGGY]  if(collection.isPrimitive()  ||  type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  collection  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.isPrimitive()  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.isPrimitive()  ||  type.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  collection	61	None	replace
904	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Collection.class.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	61	None	replace
905	[BUG]  [BUGGY]  if(collector.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  collector  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collector.isPrimitive()  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collector.isPrimitive()  ||  type.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  collector	61	None	replace
906	[BUG]  [BUGGY]  if(collection.isPrimitive()  ||  type.equals(collection.class))  {  [CE]  cannot  find  symbol  collection  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.isPrimitive()  ||  type.equals(collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.isPrimitive()  ||  type.equals(collection.class))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  collection	61	None	replace
907	[BUG]  [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    TreeSet.class.isAssignableFrom(rawType))    {    Type  type  ==  null  ||  TreeSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	157	None	add
908	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
909	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
910	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  Collection.class.equals(rawType))  {	  if(type.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
911	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  Collections.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  Collections.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  Collections.class.equals(rawType))  {	  if(type.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	163	None	replace
912	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(type))    {    	compilable	  [FE]  ClassCastException  	132	2	replace
913	[BUG]  [BUGGY]  if(Type.class  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(type))    {    	compilable	  [FE]  ClassCastException  	132	2	replace
914	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
915	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Type.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Type.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Type.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	130	None	add
916	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
917	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
918	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
919	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
920	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
921	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  type.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  type.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  type.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
922	[BUG]  [BUGGY]  if(type.isAssignmentOp(type)||  TreeSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(type)||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(type)||  TreeSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TreeSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	146	None	replace
923	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	2	replace
924	[BUG]  [BUGGY]  if(type  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	2	replace
925	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	18	replace
926	[BUG]  [BUGGY]  if(type!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	18	replace
927	[BUG]  [BUGGY]  if(type  ==  null  ||  TypeUtil.isStatic(type)||  EnumSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TypeUtil.isStatic(type)||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  TypeUtil.isStatic(type)||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	108	None	replace
928	[BUG]  [BUGGY]  if(type  ==  null  ||  TypeUtil.isAssignableFrom(type)||  EnumSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]          ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TypeUtil.isAssignableFrom(type)||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  TypeUtil.isAssignableFrom(type)||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	108	None	replace
929	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null)  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	18	replace
930	[BUG]  [BUGGY]  if(type!=  null)  {  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null)  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	108	18	replace
931	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive())  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
932	[BUG]  [BUGGY]  if(type  ==  null  ||  TypeUtil.isAssignmentOp(type)||  EnumSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  TypeUtil.isAssignmentOp(type)||  EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  TypeUtil.isAssignmentOp(type)||  EnumSet.class.isAssignableFrom(rawType))  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	108	None	replace
933	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	68	2	replace
934	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	68	2	replace
935	[BUG]  [BUGGY]  if(Type.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
936	[BUG]  [BUGGY]  if(TypeUtil.isFunction(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isFunction(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isFunction(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	40	None	replace
937	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null  &&  Type.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	136	2	replace
938	[BUG]  [BUGGY]  if(type!=  null  &&  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  &&  Type.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	136	2	replace
939	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.equals(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
940	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.class.equals(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
941	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.equals(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
942	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
943	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
944	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type))  {  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
945	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	151	18	replace
946	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	151	18	replace
947	[BUG]  [BUGGY]  if(type  ==  null  ||  elementType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  elementType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  elementType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	153	None	replace
948	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	153	None	replace
949	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type,  rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type,  rawType)||  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type,  rawType)||  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	115	None	replace
950	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
951	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
952	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
953	[BUG]  [BUGGY]  if(type!=  null  ||  type.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  type.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  type.isPrimitive()  ||  CollectionUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
954	[BUG]  [BUGGY]  if(type.isPrimitive()  &&  CollectionUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  &&  CollectionUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  &&  CollectionUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
955	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  type.getSuperClass();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  <?  super  T>  rawType  =  type.getSuperClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  <?  super  T>  rawType  =  type.getSuperClass();	  Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
956	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  type.getConstructor();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  <?  super  T>  rawType  =  type.getConstructor();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  <?  super  T>  rawType  =  type.getConstructor();	  Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
957	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  TypeUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  TypeUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  TypeUtil.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
958	[BUG]  [BUGGY]  if(sort.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  sort  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sort.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sort.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(elementType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  sort	60	None	replace
959	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
960	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
961	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
962	[BUG]  [BUGGY]  if(rawType  ==  elementType)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  elementType)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  elementType)  {  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
963	[BUG]  [BUGGY]  if(TypeUtil.class.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.class.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.class.isAssignableFrom(rawType)||  type.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
964	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TypeUtil.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TypeUtil.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  TypeUtil.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	56	None	replace
965	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)&&  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)&&  type.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
966	[BUG]  [BUGGY]  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	154	None	replace
967	[BUG]  [BUGGY]  if(rawType  ==  elementType  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  elementType  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  elementType  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	154	None	replace
968	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    SortedSet.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
969	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
970	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
971	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
972	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
973	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
974	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.class.isAssignedFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	194	None	replace
975	[BUG]  [BUGGY]  if(rawType  ==  null)  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	75	None	replace
976	[BUG]  [BUGGY]  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	75	None	replace
977	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	12	2	replace
978	[BUG]  [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	12	2	replace
979	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  List.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)&&  List.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)&&    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	3	None	replace
980	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.hasAssignableFrom(Type.class))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.hasAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class))    {    if(rawType.hasAssignableFrom(Type.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
981	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isAssignableFrom(rawType)||  TreeSet.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	23	2	replace
982	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TreeSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TreeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  TreeSet.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	23	2	replace
983	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type),  rawType)  {	  if(rawType    ==    null    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	32	None	replace
984	[BUG]  [BUGGY]  if(type  ==  null  ||  elementType.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  elementType.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  elementType.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
985	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(collectionType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(collectionType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(collectionType))  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
986	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.CLASS.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  SortedSet.CLASS.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  SortedSet.CLASS.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
987	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class!=  null  ||  Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class!=  null  ||  Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	18	replace
988	[BUG]  [BUGGY]  if(Type.class!=  null  ||  Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class!=  null  ||  Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class!=  null  ||  Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	18	replace
989	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	2	replace
990	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	2	replace
991	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isArray()  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class.isArray()  ||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	2	replace
992	[BUG]  [BUGGY]  if(Type.class.isArray()  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isArray()  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isArray()  ||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	2	replace
993	[BUG]  [BUGGY]  if(SortedSet.class.isAssignableFrom(type,  rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(SortedSet.class.isAssignableFrom(type,  rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(SortedSet.class.isAssignableFrom(type,  rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(SortedSet.class.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	4	None	replace
994	[BUG]  [BUGGY]  if(GradientSet.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(GradientSet.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(GradientSet.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(SortedSet.class.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
995	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
996	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
997	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  elements.isPrimitive())  {  [CE]  cannot  find  symbol  elements  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  elements.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  elements.isPrimitive())  {	  if(elementType.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  elements	118	None	replace
998	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  If(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    If(rawType.isAssignableFrom(Type.class)||  Type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	13	None	add
999	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1000	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1001	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1002	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	150	None	add
1003	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isArray()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isArray()  ||  Set.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
1004	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.isFunction(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.isFunction(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  TypeUtils.isFunction(rawType))  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	172	None	replace
1005	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  rawType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)&&  rawType.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	172	None	replace
1006	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.equals(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1007	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1008	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1009	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1010	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  SortedSet.class.isAssignableFrom(type,  rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  SortedSet.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  SortedSet.class.isAssignableFrom(type,  rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	112	None	replace
1011	[BUG]  [BUGGY]  if(type.isAssignmentOp(rawType)||  SortedSet.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(rawType)||  SortedSet.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(rawType)||  SortedSet.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(rawType)||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
1012	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  Class  <?  super  T>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  Class  <?  super  T>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  Class  <?  super  T>.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1013	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  TypeUtil.isFunction(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)||  TypeUtil.isFunction(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)||  TypeUtil.isFunction(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	116	None	replace
1014	[BUG]  [BUGGY]  if(Type.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {	  if(rawType.isAssignableFrom(Type.class)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
1015	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  Collections.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  Collections.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  Collections.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Collections.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	160	None	replace
1016	[BUG]  [BUGGY]  if(type!=  null  ||  type.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  type.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  type.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Collections.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
1017	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)&&  Collection.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)&&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)&&  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	161	None	replace
1018	[BUG]  [BUGGY]  if(Type.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
1019	[BUG]  [BUGGY]  if(sortedSet!=  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  sortedSet  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sortedSet!=  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sortedSet!=  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  sortedSet	24	None	replace
1020	[BUG]  [BUGGY]  if(sortSet  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  sortSet  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sortSet  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sortSet  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  sortSet	24	None	replace
1021	[BUG]  [BUGGY]  if(sortedSet  ==  null  ||  sortSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  sortedSet  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sortedSet  ==  null  ||  sortSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sortedSet  ==  null  ||  sortSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  sortedSet	24	None	replace
1022	[BUG]  [BUGGY]  Type  elementType  =  type.getElementType(rawType);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  elementType  =  type.getElementType(rawType);  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  elementType  =  type.getElementType(rawType);	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1023	[BUG]  [BUGGY]  Type  elementType  =  type.getElementType(0);  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  elementType  =  type.getElementType(0);  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  elementType  =  type.getElementType(0);	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1024	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type,  rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type,  rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type,  rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	147	None	replace
1025	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1026	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1027	[BUG]  [BUGGY]  if(rawType!=  null)  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
1028	[BUG]  [BUGGY]  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
1029	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1030	[BUG]  [BUGGY]  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Sort.class.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
1031	[BUG]  [BUGGY]  if(TypeUtil.isPrimitive(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isPrimitive(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isPrimitive(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	57	None	replace
1032	[BUG]  [BUGGY]  if(TypeUtil.isPrimitive(rawType)||  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isPrimitive(rawType)||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isPrimitive(rawType)||  Collection.class.isAssignableFrom(type))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	57	None	replace
1033	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  CollectionSet.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  CollectionSet.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  CollectionSet.class.equals(rawType))  {	  if(type.isPrimitive()    ||    CollectionSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1034	[BUG]  [BUGGY]  if(TypeUtil.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isPrimitive()  ||  CollectionSet.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	162	None	replace
1035	[BUG]  [BUGGY]  if(type.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.class.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
1036	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1037	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1038	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  type.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type!=  null  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type!=  null  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1039	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1040	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  SortSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(type)&&  SortSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(type)&&  SortSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)&&    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	41	None	replace
1041	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignedFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignedFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(Type.class.isAssignedFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1042	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1043	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1044	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1045	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  if(type  ==  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1046	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1047	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	26	None	replace
1048	[BUG]  [BUGGY]  if(TypeUtils.isFunction(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isFunction(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isFunction(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	26	None	replace
1049	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  type.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
1050	[BUG]  [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1051	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type),  rawType)  {	  if(Type.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	58	None	replace
1052	[BUG]  [BUGGY]  if(Type.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isAssignableFrom(rawType)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
1053	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    List.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1054	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    List.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1055	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    List.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1056	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  List.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    List.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1057	[BUG]  [BUGGY]  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	168	None	replace
1058	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  TypeSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  TypeSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  TypeSet.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
1059	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  TypeFactory.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  TypeFactory.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  TypeFactory.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
1060	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1061	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type),  rawType)  {	  if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	21	None	replace
1062	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(type,  rawType))  {	  if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	21	None	replace
1063	[BUG]  [BUGGY]  if(TypeUtil.isPrimitive(rawType)||  type.isArray())  {  [CE]  cannot  find  symbol  TypeUtil  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isPrimitive(rawType)||  type.isArray())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isPrimitive(rawType)||  type.isArray())  {	  if(rawType.isPrimitive()    ||    type.isArray())    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	183	None	replace
1064	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	43	None	replace
1065	[BUG]  [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  elementType))  {  [CE]  cannot  find  symbol  elementType  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  elementType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  elementType))  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	192	None	replace
1066	[BUG]  [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1067	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1068	[BUG]  [BUGGY]  if(rawType  ==  elementType)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  elementType)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  elementType)  {  if(type  ==  null  ||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1069	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  TypeUtil.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  TypeUtil.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(type)||  TypeUtil.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	171	None	replace
1070	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  TypeUtil.isFunction(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  TypeUtil.isFunction(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(type)||  TypeUtil.isFunction(rawType))  {	  if(TypeUtil.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	171	None	replace
1071	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1072	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  type.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1073	[BUG]  [BUGGY]  if(type.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(type)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
1074	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  SortedSet.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  SortedSet.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
1075	[BUG]  [BUGGY]  if(type  ==  SortedSet.class  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  SortedSet.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  SortedSet.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
1076	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Class.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  Class.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
1077	[BUG]  [BUGGY]  if(type  ==  Class.class  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Class.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  Class.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	193	2	replace
1078	[BUG]  [BUGGY]  if(type  ==  Sort.class  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Sort.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  Sort.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	193	None	replace
1079	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	101	None	replace
1080	[BUG]  [BUGGY]  if(TypeUtil.isEnumType(type)&&  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isEnumType(type)&&  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isEnumType(type)&&  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isEnumType(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	187	None	replace
1081	[BUG]  [BUGGY]  if(TypeUtil.isEnumType(type)||  Class.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isEnumType(type)||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isEnumType(type)||  Class.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isEnumType(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	187	None	replace
1082	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(Ellipsis.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(Ellipsis.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    if(Ellipsis.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
1083	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EnumSet.Class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  if(EnumSet.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    if(EnumSet.Class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	107	None	add
1084	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  elementType.getSuperclass();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  elementType.getSuperclass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Class  <?  super  T>  rawType  =  elementType.getSuperclass();	  final    Class    <?    super    T>    rawType    =    type.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
1085	[BUG]  [BUGGY]  if(type  ==  null  ||  elementType.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  elementType  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  elementType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  elementType.isAssignableFrom(Collection.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	36	None	replace
1086	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Class.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  rawType.isAssignableFrom(Class.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
1087	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Class.class))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Class.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(Class.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
1088	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Object.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  rawType.isAssignableFrom(Object.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
1089	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Object.class))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Object.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(Object.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	2	replace
1090	[BUG]  [BUGGY]  if(TypeUtil.isPrimitive(rawType)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isPrimitive(rawType)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isPrimitive(rawType)||  type.isPrimitive())  {	  if(rawType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	117	None	replace
1091	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(List.class))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(List.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(List.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
1092	[BUG]  [BUGGY]  if(type.isAssignmentOp(rawType)||  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignmentOp(rawType)||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignmentOp(rawType)||  Collection.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
1093	[BUG]  [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  Collection.class.isAssignableFrom(type,  rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignmentOp(rawType)||  Collection.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignmentOp(rawType)||  Collection.class.isAssignableFrom(type,  rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	42	None	replace
1094	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(Type.Class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  if(Type.Class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  if(Type.Class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1095	[BUG]  [BUGGY]  if(Type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	87	None	replace
1096	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1097	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive())  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1098	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isPrimitive())  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1099	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1100	[BUG]  [BUGGY]  if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	144	None	replace
1101	[BUG]  [BUGGY]  if(rawType  ==  elementType)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  elementType)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  elementType)  {  if(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1102	[BUG]  [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  Type  type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    Type  type!=  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
1103	[BUG]  [BUGGY]  if(type!=  null  ||  type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Collection    <    Class    <?>.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1104	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Collection    <    Class    <?>.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1105	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {	  if(type.isPrimitive()    ||    Collection    <    Class    <?>.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1106	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type,  rawType)||  TypeUtils.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type,  rawType)||  TypeUtils.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type,  rawType)||  TypeUtils.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypeUtils.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	27	None	replace
1107	[BUG]  [BUGGY]  if(type!=  null  ||  TypeUtils.isAssignableFrom(type)||  TypeUtils.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  TypeUtils.isAssignableFrom(type)||  TypeUtils.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  ||  TypeUtils.isAssignableFrom(type)||  TypeUtils.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypeUtils.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	27	None	replace
1108	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
1109	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
1110	[BUG]  [BUGGY]  if(type  ==  null  ||  elementType.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  elementType.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  elementType.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
1111	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Object.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Object.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	2	replace
1112	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Object.class))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Object.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(Object.class))  {	  if(rawType.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	70	2	replace
1113	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  [CE]  illegal  generic  type  for  instanceof  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  generic  type  for  instanceof	92	None	replace
1114	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  Collection  <  Class  <?>.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  Collection  <  Class  <?>.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  Collection  <  Class  <?>.class.equals(rawType))  {	  if(type.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1115	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
1116	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  Type  type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  Type  type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  &&  Collection.class.isAssignableFrom(rawType))  {  Type  type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	77	None	replace
1117	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	104	2	replace
1118	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	104	2	replace
1119	[BUG]  [BUGGY]  if(Collection.class.isAssignableFrom(type)||  collection.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Collection.class.isAssignableFrom(type)||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Collection.class.isAssignableFrom(type)||  collection.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	61	None	replace
1120	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type!=  null  &&  rawType.isAssignableFrom(rawType))  {	  if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	170	18	replace
1121	[BUG]  [BUGGY]  if(type!=  null  &&  rawType.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  &&  rawType.isAssignableFrom(rawType))  {	  if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	170	18	replace
1122	[BUG]  [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  Collection.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  &&  Collection.class.isAssignableFrom(rawType)||  type.isPrimitive())  {	  if(type!=    null    &&    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	170	None	replace
1123	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
1124	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();	  final    Class    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
1125	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();	  Class    <?    super    T>    rawType    =    type.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
1126	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawParameterType(0);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  type.getRawParameterType(0);  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  type.getRawParameterType(0);	  Class    <?    super    T>    rawType    =    type.getSuperclass();    	non-compiled	[CE]  illegal  start  of  type	173	None	replace
1127	[BUG]  [BUGGY]  if(sort.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  sort  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sort.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sort.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  sort	2	None	replace
1128	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null  &&  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	151	2	replace
1129	[BUG]  [BUGGY]  if(rawType!=  null  &&  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  &&  rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	151	2	replace
1130	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  Class.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    List.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	143	2	replace
1131	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Class.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Class.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    List.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	143	2	replace
1132	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
1133	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive())  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive())  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isPrimitive())  {  If(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	129	None	replace
1134	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null  &&  Type.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	134	2	replace
1135	[BUG]  [BUGGY]  if(rawType!=  null  &&  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  &&  Type.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	134	2	replace
1136	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  type  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  type  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	134	18	replace
1137	[BUG]  [BUGGY]  if(rawType!=  type  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  type  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  type  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	134	18	replace
1138	[BUG]  [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  rawType  ||  SortedSet.CLASS.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  SortedSet.class.isAssignableFrom(rawType))  {  if(type  ==  rawType  ||  SortedSet.CLASS.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type  ==  rawType  ||  SortedSet.CLASS.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	155	None	add
1139	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  type.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	47	None	replace
1140	[BUG]  [BUGGY]  if(type  ==  Type.NONE  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  NONE  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  Type.NONE  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  Type.NONE  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  NONE	178	None	replace
1141	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Type.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Type.class.isAssignableFrom(type),  rawType)  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	132	None	replace
1142	[BUG]  [BUGGY]  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Type.Class.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  Class	132	None	replace
1143	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  type.isPrimitive())  {	  if(Type.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
1144	[BUG]  [BUGGY]  if(type.isAssignedFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignedFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignedFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
1145	[BUG]  [BUGGY]  if(rawType.equals(type)&&  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.equals(type)&&  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.equals(type)&&  type.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)&&    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	179	None	replace
1146	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  sortedSet.class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  sortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  sortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	96	None	replace
1147	[BUG]  [BUGGY]  if(sortedSet.class  ==  null  ||  sortedSet.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(sortedSet.class  ==  null  ||  sortedSet.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(sortedSet.class  ==  null  ||  sortedSet.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    sortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
1148	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)&&  Collection.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(type)&&    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
1149	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  TypeUtils.Class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypeUtils.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	27	None	replace
1150	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.CLASS.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.CLASS.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  TypeUtils.CLASS.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    TypeUtils.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	27	None	replace
1151	[BUG]  [BUGGY]  if(TypeUtil.isStatic(type)||  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isStatic(type)||  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isStatic(type)||  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	115	None	replace
1152	[BUG]  [BUGGY]  if(TypeUtil.isFunction(type)||  TypedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isFunction(type)||  TypedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isFunction(type)||  TypedSet.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(type)||    TypedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	115	None	replace
1153	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  SortedMap.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    SortedMap.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	167	None	replace
1154	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  instanceof  Class  <?  super  T>)  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  instanceof  Class  <?  super  T>)  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
1155	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  If(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	48	None	replace
1156	[BUG]  [BUGGY]  if(rawType  ==  null  &&  Collection.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  &&  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  &&  Collection.class.isAssignableFrom(type))  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	192	None	replace
1157	[BUG]  [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  sourceType))  {  [CE]  cannot  find  symbol  sourceType  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  sourceType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  &&  Collection.class.isAssignableFrom(type,  sourceType))  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  sourceType	192	None	replace
1158	[BUG]  [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  &&  Collection.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  &&  Collection.class.isAssignableFrom(type),  rawType)  {	  if(rawType!=    null    &&    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	192	None	replace
1159	[BUG]  [BUGGY]  if(type  ==  null  ||  elements.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  elements  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  elements.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  elements.isPrimitive()  ||  rawType.isPrimitive())  {	  if(type    ==    null    ||    type.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  elements	164	None	replace
1160	[BUG]  [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Type.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(rawType!=  null  ||  Type.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(rawType!=  null  ||  Type.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	133	None	add
1161	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(type)&&  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(type)&&  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(type)&&  rawType.isPrimitive())  {	  if(TypeUtil.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	171	None	replace
1162	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  TypeUtil.isStatic(type))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  TypeUtil.isStatic(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(type)||  TypeUtil.isStatic(type))  {	  if(TypeUtil.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	171	None	replace
1163	[BUG]  [BUGGY]  if(TypeUtils.isStatic(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isStatic(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isStatic(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	26	None	replace
1164	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  elementType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  elementType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  elementType.isPrimitive())  {  If(rawType.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    If(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	141	None	replace
1165	[BUG]  [BUGGY]  if(rawType  ==  Type.NONE  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  NONE  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  Type.NONE  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  Type.NONE  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    rawType    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  NONE	156	None	replace
1166	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Type.class))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isAssignableFrom(Type.class))  {	  if(rawType.isAssignableFrom(Type.class))    {    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
1167	[BUG]  [BUGGY]  if(TypeUtil.isPrimitive(type)||  CollectionUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isPrimitive(type)||  CollectionUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isPrimitive(type)||  CollectionUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	182	None	replace
1168	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  CollectionUtil.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  CollectionUtil.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  CollectionUtil.Class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
1169	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  collectionUtil.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  collectionUtil.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  collectionUtil.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionUtil.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	182	None	replace
1170	[BUG]  [BUGGY]  final  Type  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  final  Type  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	final  Type  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();	  final    Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
1171	[BUG]  [BUGGY]  if(type  ==  rawType  ||  type.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  rawType  ||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  rawType  ||  type.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
1172	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.equals(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  rawType.equals(type))  {	  if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	37	2	replace
1173	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.equals(type))  {  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.equals(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.equals(type))  {	  if(type    ==    null    ||    type.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	37	2	replace
1174	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  types.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  types.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  types.isPrimitive())  {	  if(rafType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
1175	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(type)||  Collection.class.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(type)||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(type)||  Collection.class.isAssignableFrom(type))  {	  if(type.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	28	None	replace
1176	[BUG]  [BUGGY]  if(collection.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  collection  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.isAssignableFrom(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  collection	28	None	replace
1177	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Type.class!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	18	replace
1178	[BUG]  [BUGGY]  if(Type.class!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	63	18	replace
1179	[BUG]  [BUGGY]  if(relativeType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  relativeType  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(relativeType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(relativeType.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class))  {	  if(type.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol  relativeType	59	None	replace
1180	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class,  type))  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class,  type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class,  type))  {	  if(type.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
1181	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class,  rawType))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isAssignableFrom(Collection.class,  rawType))  {	  if(type.isPrimitive()    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
1182	[BUG]  [BUGGY]  if(SortedSet.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType),  rawType)  {  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(SortedSet.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(SortedSet.class.isAssignableFrom(type)||  SortedSet.class.isAssignableFrom(rawType),  rawType)  {	  if(SortedSet.class.isAssignableFrom(type)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ')'  expected	4	None	replace
1183	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(Type.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1184	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  collection.class.isAssignableFrom(rawType))  {	  if(Type.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
1185	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(type  ==  null  ||  type.equals(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	2	replace
1186	[BUG]  [BUGGY]  if(type  ==  null  ||  type.equals(rawType))  {  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.equals(rawType))  {	  if(type    ==    null    ||    elementType.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	159	2	replace
1187	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
1188	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  TypeUtils.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  TypeUtils.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  TypeUtils.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
1189	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  Type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  Type.Class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	188	None	replace
1190	[BUG]  [BUGGY]  if(rawType!=  null)  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null)  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null)  {  Type  type  =  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	154	None	replace
1191	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type),  rawType)  {  [CE]  ')'  expected  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type),  rawType)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type),  rawType)  {	  if(Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  ')'  expected	52	None	replace
1192	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  type.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  type.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  type.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	52	None	replace
1193	[BUG]  [BUGGY]  if(Type.Class.isAssignableFrom(type,  rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.Class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.Class.isAssignableFrom(type,  rawType))  {	  if(Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  Class	52	None	replace
1194	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  Collection  <  Class  <?>,  Class  <?>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  Collection  <  Class  <?>,  Class  <?>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  Collection  <  Class  <?>,  Class  <?>.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    Collection    <    Class    <?>.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1195	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  Collection  <  Class  <?>.class.isAssignableFrom(rawType)||  type.isPrimitive())  {	  if(type.isPrimitive()    ||    Collection    <    Class    <?>.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1196	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  If(type!=  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	75	None	replace
1197	[BUG]  [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
1198	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
1199	[BUG]  [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Type.class.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	50	None	replace
1200	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  null)  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    >=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	73	2	replace
1201	[BUG]  [BUGGY]  if(rawType  ==  null)  {  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null)  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    >=    null    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	73	2	replace
1202	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  primaryType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  primaryType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  primaryType.isPrimitive())  {	  if(primaryType.isPrimitive()    ||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	189	None	replace
1203	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
1204	[BUG]  [BUGGY]  if(Type.Class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.Class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.Class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	87	None	replace
1205	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
1206	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type,  sourceType))  {  [CE]  cannot  find  symbol  sourceType  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type,  sourceType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(type,  sourceType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  sourceType	7	None	replace
1207	[BUG]  [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  if(Type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(Type.isPrimitive()  ||  Collection.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
1208	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type!=    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
1209	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.isAssignableFrom(type.class))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignableFrom(Type.class))  {  if(rawType.isAssignableFrom(type.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignableFrom(Type.class))    {    if(rawType.isAssignableFrom(type.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
1210	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  <?  super  T>  rawType  =  type.restrictByNotNullOrUndefined();	  Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
1211	[BUG]  [BUGGY]  Type  <?  super  T>  rawType  =  type.getRawSuperClass();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  <?  super  T>  rawType  =  type.getRawSuperClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  <?  super  T>  rawType  =  type.getRawSuperClass();	  Type    <?    super    T>    rawType    =    type.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	196	None	replace
1212	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isPrimitive()  ||  Collection.class.equals(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.class.equals(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	142	None	replace
1213	[BUG]  [BUGGY]  if(type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive())  {	  if(EnumSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
1214	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isPrimitive())  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1215	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isArray())  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isArray())  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isArray())  {  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
1216	[BUG]  [BUGGY]  if(collection.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  collection  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(collection.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(collection.isAssignableFrom(rawType)||  Collection.class.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  collection	43	None	replace
1217	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  Class  <?  super  T>  rawType  =  type.getRawClass();  if(rawType!=  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType))  {  Class  <?  super  T>  rawType  =  type.getRawClass();  if(rawType!=  null)  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType))  {  Class  <?  super  T>  rawType  =  type.getRawClass();  if(rawType!=  null)  {	  if(Type.class.isAssignableFrom(rawType))    {    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1218	[BUG]  [BUGGY]  if(type.isPrimitive())  {  Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive())  {  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive())  {  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	168	None	replace
1219	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1220	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  type.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  type.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  type.isPrimitive()  ||  Collection.Class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Collection.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	140	None	replace
1221	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(Class.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&|    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	128	2	replace
1222	[BUG]  [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Class.class.isAssignableFrom(rawType)||  Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&|    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	128	2	replace
1223	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
1224	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  If(type  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	94	None	replace
1225	[BUG]  [BUGGY]  Type  elementType  =  type.getImplicitPrototype();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Type  elementType  =  type.getImplicitPrototype();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Type  elementType  =  type.getImplicitPrototype();	  Type    elementType    =    type.getElementType();    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
1226	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignedFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  if(rawType  ==  null  ||  Collection.class.isAssignedFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType  ==  null  ||  Collection.class.isAssignedFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	30	None	add
1227	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  CollectionSortedSet.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  CollectionSortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  CollectionSortedSet.class.isAssignableFrom(rawType))  {	  if(type.isPrimitive()    ||    CollectionSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	162	None	replace
1228	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  type  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType  ==  type  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	131	2	replace
1229	[BUG]  [BUGGY]  if(rawType  ==  type  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  type  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  type  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType    ==    null    ||    Type.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	131	2	replace
1230	[BUG]  [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  If(EnumSet.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(EnumSet.class.isAssignableFrom(rawType))  {  If(EnumSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(EnumSet.class.isAssignableFrom(rawType))    {    If(EnumSet.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  ';'  expected	107	None	add
1231	[BUG]  [BUGGY]  if(type!=  null  &&  rawType.isAssignableFrom(type))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  &&  rawType.isAssignableFrom(type))  {	  if(type!=    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	137	None	replace
1232	[BUG]  [BUGGY]  if(type!=  null  &&  elementType.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  elementType  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  &&  elementType.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=  null  &&  elementType.isAssignableFrom(rawType))  {	  if(type!=    null    ||    type.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  elementType	137	None	replace
1233	[BUG]  [BUGGY]  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  collection.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  collection.class.isAssignableFrom(rawType)||  rawType.isPrimitive())  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType)||    type.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	184	None	replace
1234	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  elementType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  elementType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  elementType.isAssignableFrom(type))  {	  if(type.isAssignableFrom(rawType)||    rawType.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
1235	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  type.isPrimitive())  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  type.isPrimitive())  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  type.isPrimitive())  {  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1236	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  Collections.class.isAssignableFrom(rawType)&&  rawType.isAssignableFrom(type))  {	  if(type.isPrimitive()    ||    Collections.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	160	None	replace
1237	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  type  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  type  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	18	18	replace
1238	[BUG]  [BUGGY]  if(rawType!=  type  ||  SortedSet.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  type  ||  SortedSet.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  type  ||  SortedSet.class.isAssignableFrom(rawType))  {	  if(rawType!=    null    ||    SortedSet.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	18	18	replace
1239	[BUG]  [BUGGY]  if(type.isEnumType()  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isEnumType()  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isEnumType()  ||  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isEnumType(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	187	None	replace
1240	[BUG]  [BUGGY]  if(rowType.isPrimitive()  ||  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  rowType  [FE]                        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rowType.isPrimitive()  ||  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rowType.isPrimitive()  ||  rawType.isPrimitive())  {	  if(elementType.isPrimitive()    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol  rowType	118	None	replace
1241	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.isAssignedFrom(Collection.class))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(Collection.class))  {  if(type  ==  null  ||  rawType.isAssignedFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    if(type  ==  null  ||  rawType.isAssignedFrom(Collection.class))  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
1242	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type))  {	  if(TypeUtil.isAssignmentOp(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
1243	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type,  rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type,  rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(type,  rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T#2>  cannot  be  applied  to  given  types;	58	None	replace
1244	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.isStatic(type))  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  TypeUtils.isStatic(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  TypeUtils.isStatic(type))  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	172	None	replace
1245	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  rawType.isPrimitive())  {  [CE]  cannot  find  symbol  TypeUtils  [FE]                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)&&  rawType.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)&&  rawType.isPrimitive())  {	  if(TypeUtils.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtils	172	None	replace
1246	[BUG]  [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isAssignableFrom(type)||  Type.class.isAssignableFrom(rawType))  {	  if(type.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	9	None	replace
1247	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType!=  null  ||  rawType.isAssignableFrom(Collection.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	18	replace
1248	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isAssignableFrom(Collection.class))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType!=  null  ||  rawType.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType!=  null  ||  rawType.isAssignableFrom(Collection.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	compilable	  [FE]  ClassCastException  	36	18	replace
1249	[BUG]  [BUGGY]  if(type  ==  null  ||  type.isAssignableFrom(Collection.class))  {  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  type.isAssignableFrom(Collection.class))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  type.isAssignableFrom(Collection.class))  {	  if(type    ==    null    ||    rawType.isAssignableFrom(Collection.class))    {    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
1250	[BUG]  [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  Class  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Class.class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Class.class.isAssignableFrom(rawType)||  Type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  Class	125	None	replace
1251	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(type)||  Type.Class.isAssignableFrom(rawType))  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(type)||  Type.Class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(type)||  Type.Class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)||    Type.Class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	125	None	replace
1252	[BUG]  [BUGGY]  if(rawType.isAssignmentOp(type)||  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isAssignmentOp(type)||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isAssignmentOp(type)||  Collection.class.isAssignableFrom(type))  {	  if(type.isAssignmentOp(type)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
1253	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  parent.getRawClass();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  parent.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  parent.getRawClass();	  Class    <?    super    T>    rawType    =    elementType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
1254	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  objectType.getRawClass();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  objectType.getRawClass();  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  objectType.getRawClass();	  Class    <?    super    T>    rawType    =    elementType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
1255	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  elementType.getRawParameterType(0);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  Class  <?  super  T>  rawType  =  elementType.getRawParameterType(0);  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	Class  <?  super  T>  rawType  =  elementType.getRawParameterType(0);	  Class    <?    super    T>    rawType    =    elementType.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
1256	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Class  <?  super  T>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Class  <?  super  T>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  Class  <?  super  T>.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1257	[BUG]  [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Class  <?  super>.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtils.isAssignableFrom(type)||  Class  <?  super>.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtils.isAssignableFrom(type)||  Class  <?  super>.class.isAssignableFrom(rawType))  {	  if(TypeUtils.isAssignableFrom(type)||    Class.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
1258	[BUG]  [BUGGY]  if(type  ==  JavaType.class  ||  Type.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  JavaType.class  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  JavaType.class  ||  Type.class.isAssignableFrom(rawType))  {	  if(type    ==    elementType    ||    Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	193	None	replace
1259	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  sourceType))  {  [CE]  cannot  find  symbol  sourceType  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  sourceType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type,  sourceType))  {	  if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  sourceType	21	None	replace
1260	[BUG]  [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type)||  type.isPrimitive())  {  [CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type)||  type.isPrimitive())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  SortedSet.class.isAssignableFrom(type)||  type.isPrimitive())  {	  if(rawType    ==    null    ||    SortedSet.class.isAssignableFrom(type))    {    	non-compiled	[CE]  method  isAssignableFrom  in  class  Class<T>  cannot  be  applied  to  given  types;	21	None	replace
1261	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  If(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    If(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	101	None	replace
1262	[BUG]  [BUGGY]  if(TypeUtil.isStatic(type)||  Collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  TypeUtil  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(TypeUtil.isStatic(type)||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(TypeUtil.isStatic(type)||  Collection.class.isAssignableFrom(rawType))  {	  if(TypeUtil.isAssignmentOp(rawType)||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol  TypeUtil	40	None	replace
1263	[BUG]  [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  rawType.isAssignableFrom(rawType))  {  Type  type  =  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	103	None	replace
1264	[BUG]  [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {  final  Type  type  ==  null  ||  Collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    Type    type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	103	None	replace
1265	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Class.class.isAssignableFrom(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  Class.class.isAssignableFrom(rawType))  {  if(Type.class.isAssignableFrom(rawType)&&  Class.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||    Class.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignableFrom(rawType)&&  Class.class.isAssignableFrom(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	185	None	add
1266	[BUG]  [BUGGY]  if(Type.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.isPrimitive()  ||  Collection.class.isAssignableFrom(type))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
1267	[BUG]  [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TypeUtils.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(Type.class.isAssignableFrom(rawType)||  TypeUtils.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(Type.class.isAssignableFrom(rawType)||  TypeUtils.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType)||    SortedSet.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
1268	[BUG]  [BUGGY]  if(type.isAssignableFrom(rawType)||  Type.class.isAssignedFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isAssignableFrom(rawType)||  Type.class.isAssignedFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isAssignableFrom(rawType)||  Type.class.isAssignedFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    if(Type.class.isAssignedFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
1269	[BUG]  [BUGGY]  if(rawType  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  collection.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  collection.class.isAssignableFrom(rawType))  {	  if(type    ==    null    ||    Collection.class.isAssignableFrom(rawType))    {    if(type    ==    null    ||    collection.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
1270	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	144	2	replace
1271	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	144	2	replace
1272	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  type.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive()  ||  type.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive()  ||  type.isPrimitive()  ||  Set.class.isAssignableFrom(rawType))  {	  if(rawType.isPrimitive()    ||    Collection.class.isAssignableFrom(rawType))    {    if(rawType.isPrimitive()    ||    Set.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  cannot  find  symbol	144	None	replace
1273	[BUG]  [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type!=  null  ||  Type.class.isAssignableFrom(rawType))  {  if(type!=  null  ||  Type.class.equals(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type!=    null    ||    Type.class.isAssignableFrom(rawType))    {    if(type!=  null  ||  Type.class.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	135	None	add
1274	[BUG]  [BUGGY]  if(type.isPrimitive())  {  If(Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]            ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive())  {  If(Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive())  {  If(Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	88	None	replace
1275	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  If(Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]              ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isPrimitive())  {  If(Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isPrimitive())  {  If(Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	88	None	replace
1276	[BUG]  [BUGGY]  if(type.isArray())  {  If(Type.class.isAssignableFrom(rawType))  {  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isArray())  {  If(Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isArray())  {  If(Type.class.isAssignableFrom(rawType))  {	  if(Type.class.isAssignableFrom(rawType))    {    If(Type.class.isAssignableFrom(rawType))    {    	non-compiled	[CE]  ';'  expected	88	None	replace
1277	[BUG]  [BUGGY]  if(type.isPrimitive()  ||  rawType.isObject())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(type.isPrimitive()  ||  rawType.isObject())  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(type.isPrimitive()  ||  rawType.isObject())  {	  if(rawType.isPrimitive()    ||    type.isArray())    {    	non-compiled	[CE]  cannot  find  symbol	183	None	replace
1278	[BUG]  [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  sourceType))  {  [CE]  cannot  find  symbol  sourceType  [FE]          ClassCastException      [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  sourceType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType  ==  null  ||  Collection.class.isAssignableFrom(type,  sourceType))  {	  if(rawType    ==    null    ||    Collection.class.isAssignableFrom(type))    {    	non-compiled	[CE]  cannot  find  symbol  sourceType	32	None	replace
1279	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	add	if(rawType.isArray()  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	68	2	replace
1280	[BUG]  [BUGGY]  if(rawType.isArray()  ||  Type.class.isAssignableFrom(rawType))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      final  Type  type,  Class<?  super  T>  rawType)  {      [BUGGY]  if(rawType.isArray()  ||  Type.class.isAssignableFrom(rawType))  {  [BUGGY]      if  (SortedSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  (T)  new  TreeSet<Object>();  }  };  }  else  if  (EnumSet.class.isAssignableFrom(rawType))  {  return  new  ObjectConstructor<T>()  {  @SuppressWarnings(     "rawtypes     ")  @Override  public  T  construct()  {  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultImplementationConstructor  [RETURN_TYPE]  <T>  Type  type  Class<?  super  T>  rawType  [VARIABLES]  Type  elementType  type  Class  rawType  UnsafeAllocator  unsafeAllocator  boolean  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	130	130	2	replace	if(rawType.isArray()  ||  Type.class.isAssignableFrom(rawType))  {	  if(rawType.isArray()    ||    Collection.class.isAssignableFrom(rawType))    {    	compilable	  [FE]  ClassCastException  	68	2	replace
