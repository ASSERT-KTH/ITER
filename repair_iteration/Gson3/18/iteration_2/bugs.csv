bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.clone();  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.clone();	      	non-compiled	[CE]  clone()  has  protected  access  in  Object	8	None	replace
2	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.clone();  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.clone();	      	non-compiled	[CE]  clone()  has  protected  access  in  Object	8	None	replace
3	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawType();	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
4	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.getRawType();  [CE]  cannot  find  symbol  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.getRawType();  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.getRawType();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
5	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.getRawType();  [CE]  cannot  find  symbol  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.getRawType();  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.getRawType();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
6	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.cloneTree();  [CE]  cannot  find  symbol  [FE]                            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.cloneTree();  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.cloneTree();	      	non-compiled	[CE]  cannot  find  symbol	8	None	replace
7	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.clone();  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.clone();	      	non-compiled	[CE]  clone()  has  protected  access  in  Object	8	None	replace
8	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	10	None	replace
9	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	10	None	replace
10	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [CE]  cannot  find  symbol  types  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  types	10	None	replace
11	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	10	None	replace
12	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	10	None	replace
13	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(type);  [CE]  cannot  find  symbol  types  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  types	6	None	replace
14	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	compilable	  [FE]  ClassCastException  	6	44	replace
15	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [FE]  ClassCastException  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	compilable	  [FE]  ClassCastException  	6	44	replace
16	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(type);  [CE]  cannot  find  symbol  instanceTypes  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceTypes	6	None	replace
17	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(type);  [CE]  cannot  find  symbol  instances  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	6	None	replace
18	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceTypes.get(type);  [CE]  cannot  find  symbol  instanceTypes  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceTypes.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceTypes.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceTypes	6	None	replace
19	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(type);  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
20	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	13	None	replace
21	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	13	None	replace
22	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(type);  [CE]  cannot  find  symbol  types  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  types	13	None	replace
23	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type);  [CE]  incompatible  types  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	9	None	replace
24	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	9	None	replace
25	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators();  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
26	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	9	None	replace
27	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	9	None	replace
28	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	9	None	replace
29	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	4	None	add
30	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	4	None	add
31	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  incompatible  types  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  	non-compiled	[CE]  incompatible  types	4	None	add
32	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  incompatible  types  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  	non-compiled	[CE]  incompatible  types	4	None	add
33	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  inconvertible  types  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  	non-compiled	[CE]  inconvertible  types	4	None	add
34	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	compilable	  [FE]  ClassCastException  	5	2	replace
35	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	compilable	  [FE]  ClassCastException  	5	2	replace
36	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(type);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
37	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	5	None	replace
38	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(type);  [CE]  cannot  find  symbol  instanceCreators  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceCreators	5	None	replace
39	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
40	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);  [CE]  cannot  find  symbol  instance  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  instance	12	None	replace
41	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	compilable	  [FE]  ClassCastException  	12	2	replace
42	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	compilable	  [FE]  ClassCastException  	12	2	replace
43	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	12	None	replace
44	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(typeToken);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	12	None	replace
45	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
46	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
47	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  incompatible  types	1	None	add
48	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  incompatible  types	1	None	add
49	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  incompatible  types	1	None	add
50	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
51	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
52	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  [CE]  ')'  expected  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;	  	non-compiled	[CE]  ')'  expected	1	None	add
53	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	11	None	add
54	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	11	None	add
55	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  	non-compiled	[CE]  incompatible  types	11	None	add
56	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
57	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  	non-compiled	[CE]  incompatible  types	11	None	add
58	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	11	None	add
59	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	7	None	replace
60	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	7	None	replace
61	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(type);  [CE]  cannot  find  symbol  instances  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	7	None	replace
62	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	7	None	replace
63	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	7	None	replace
64	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);  [CE]  incompatible  types  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	7	None	replace
65	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	2	None	replace
66	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	2	None	replace
67	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [CE]  cannot  find  symbol  types  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  types	2	None	replace
68	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObject();  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObject();  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObject();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
69	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	7	None	replace
70	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
71	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
72	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  curTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  curTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final  InstanceCreator  <  T>  curTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
73	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
74	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
75	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreator  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	10	None	replace
76	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	10	None	replace
77	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	13	None	replace
78	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [CE]  cannot  find  symbol  typeCreators  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	13	None	replace
79	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	11	None	add
80	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	11	None	add
81	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [CE]  cannot  find  symbol  typeCreator  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	6	None	replace
82	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(type);  [CE]  cannot  find  symbol  typeTokens  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeTokens	6	None	replace
83	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	9	None	replace
84	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	9	None	replace
85	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	12	None	replace
86	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	12	None	replace
87	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instanceCreators);  [CE]  no  suitable  method  found  for  get(Map<Type,InstanceCreator<?>>)  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instanceCreators);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(Map<Type,InstanceCreator<?>>)	12	None	replace
88	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  	non-compiled	[CE]  illegal  start  of  expression	4	None	add
89	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	4	None	add
90	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
91	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
92	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
93	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
94	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
95	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
96	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
97	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	5	None	replace
98	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	5	None	replace
99	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(this.instanceCreators.get(type);  [CE]  ')'  expected  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  ')'  expected	5	None	replace
100	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	2	None	replace
101	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	2	None	replace
102	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  	non-compiled	[CE]  ';'  expected	11	None	add
103	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	1	None	add
104	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
105	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  type  [FE]                    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
106	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
107	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isInterface())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
108	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
109	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreator  [FE]                            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	      	non-compiled	[CE]  cannot  find  symbol  typeCreator	8	None	replace
110	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  	non-compiled	[CE]  ';'  expected	4	None	add
111	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	5	None	replace
112	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	3	None	replace
113	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	3	None	replace
114	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	3	None	replace
115	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	3	None	replace
116	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rhinoType);  [CE]  cannot  find  symbol  rhinoType  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rhinoType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rhinoType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  rhinoType	7	None	replace
117	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	10	None	replace
118	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	10	None	replace
119	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  modifier  static  not  allowed  here  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	12	None	replace
120	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	6	None	replace
121	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputTypes.get(type);  [CE]  cannot  find  symbol  outputTypes  [FE]                ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputTypes.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputTypes.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  outputTypes	6	None	replace
122	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]    ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	2	None	replace
123	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	2	None	replace
124	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]        ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	9	None	replace
125	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]            ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	13	None	replace
126	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type);  [CE]  incompatible  types  [FE]              ClassCastException    [CONTEXT]    public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type);  [BUGGY]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	13	None	replace
