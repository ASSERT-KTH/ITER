bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(instanceCreators);    	compilable	  [FE]  ClassCastException  	87	44	replace
2	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [FE]  ClassCastException  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(instanceCreators);    	compilable	  [FE]  ClassCastException  	87	44	replace
3	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(instanceCreators);  [CE]  cannot  find  symbol  rawTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(instanceCreators);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	87	None	replace
4	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
5	[BUG]  [BUGGY]  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
6	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  InstanceCreator  is  abstract;  cannot  be  instantiated  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  InstanceCreator  is  abstract;  cannot  be  instantiated	107	None	replace
7	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawType();  if(rawType!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  rawType.getRawType();  if(rawType!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawType  =  rawType.getRawType();  if(rawType!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	107	None	replace
8	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  typeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  typeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  typeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
9	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
10	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceTypes.get(type);  [CE]  cannot  find  symbol  instanceTypes  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceTypes.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceTypes.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceTypes	18	None	replace
11	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceTypes.get(rawType);  [CE]  cannot  find  symbol  instanceTypes  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceTypes.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceTypes.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceTypes	18	None	replace
12	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.instanceTypes.get(type);  [CE]  cannot  find  symbol  instanceTypes  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.instanceTypes.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.instanceTypes.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceTypes	18	None	replace
13	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(rawType);  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.get(type);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
14	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
15	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawType();  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  rawType.getRawType();  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawType  =  rawType.getRawType();  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	105	None	replace
16	[BUG]  [BUGGY]  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
17	[BUG]  [BUGGY]  ||  rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ||  rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	||  rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
18	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawType();  if(rawType  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  rawType.getRawType();  if(rawType  ==  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawType  =  rawType.getRawType();  if(rawType  ==  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	105	None	replace
19	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
20	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);  [CE]  modifier  static  not  allowed  here  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	119	None	replace
21	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);  [CE]  modifier  static  not  allowed  here  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	119	None	replace
22	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instanceCreators);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instanceCreators);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	119	None	replace
23	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	119	None	replace
24	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	41	None	add
25	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	41	None	add
26	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  	non-compiled	[CE]  incompatible  types	41	None	add
27	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Constructor  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Constructor  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    Constructor  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	41	None	add
28	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)super.instanceCreators.get(typeToken);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)super.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)super.instanceCreators.get(typeToken);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	41	None	add
29	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	73	None	replace
30	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	compilable	  [FE]  ClassCastException  	73	2	replace
31	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(0);  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	compilable	  [FE]  ClassCastException  	73	2	replace
32	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instanceType);  [CE]  cannot  find  symbol  instanceType  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instanceType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instanceType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  instanceType	85	None	replace
33	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	74	None	replace
34	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType  -  1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType  -  1);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	74	None	replace
35	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  modifier  static  not  allowed  here	74	None	replace
36	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	74	None	replace
37	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType  -  1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType  -  1);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	74	None	replace
38	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	74	None	replace
39	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getRawType();  [CE]  inconvertible  types  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getRawType();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  inconvertible  types	102	None	replace
40	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(typeToken);  [CE]  cannot  find  symbol  instances  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  instances	102	None	replace
41	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	compilable	  [FE]  ClassCastException  	88	2	replace
42	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(0);  [FE]  ClassCastException  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	compilable	  [FE]  ClassCastException  	88	2	replace
43	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	88	None	replace
44	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(0);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	88	None	replace
45	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  incompatible  types  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	31	None	replace
46	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	31	None	replace
47	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	31	None	replace
48	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  [CE]  cannot  find  symbol  typeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	31	None	replace
49	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	31	None	replace
50	[BUG]  [BUGGY]  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	=(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
51	[BUG]  [BUGGY]  ||(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ||(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	||(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
52	[BUG]  [BUGGY]  ;  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ;  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	;  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
53	[BUG]  [BUGGY]  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	=(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
54	[BUG]  [BUGGY]  =(InstanceCreator  <  T>)instanceCreators.get(0);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  =(InstanceCreator  <  T>)instanceCreators.get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	=(InstanceCreator  <  T>)instanceCreators.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
55	[BUG]  [BUGGY]  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	=(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
56	[BUG]  [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
57	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
58	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
59	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
60	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
61	[BUG]  [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
62	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  [CE]  cannot  find  symbol  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawClass();	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
63	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	60	None	replace
64	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instances.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instances.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	60	None	replace
65	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	34	None	add
66	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	34	None	add
67	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  	non-compiled	[CE]  incompatible  types	34	None	add
68	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]          ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  	non-compiled	[CE]  incompatible  types	34	None	add
69	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]            ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	34	None	add
70	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(rawType);  [CE]  inconvertible  types  [FE]              ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(rawType);	  	non-compiled	[CE]  inconvertible  types	34	None	add
71	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	34	None	add
72	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	33	None	replace
73	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	33	None	replace
74	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	33	None	replace
75	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(rawType);  [CE]  inconvertible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	33	None	replace
76	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	33	None	replace
77	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	33	None	replace
78	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getInstanceCreators().get(rawType);  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getInstanceCreators().get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getInstanceCreators().get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	111	None	replace
79	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(rawType);  [CE]  cannot  find  symbol  instanceCreators  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instanceCreators	111	None	replace
80	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.getObject();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.getObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.getObject();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.getObject();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
81	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.cloneTree();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.cloneTree();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.cloneTree();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.getObject();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
82	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.clone();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.getObject();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	68	None	replace
83	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.getObject();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.getObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.getObject();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.getObject();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
84	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getObject();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getObject();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.getObject();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
85	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType,  typeToken.getObject();  [CE]  ';'  expected  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType,  typeToken.getObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType,  typeToken.getObject();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.getObject();    	non-compiled	[CE]  ';'  expected	68	None	replace
86	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	47	None	replace
87	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	47	None	replace
88	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	47	None	replace
89	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(rawType);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
90	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	47	None	replace
91	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
92	[BUG]  [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
93	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
94	[BUG]  [BUGGY]  ||  rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ||  rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	||  rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
95	[BUG]  [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
96	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	62	None	replace
97	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	62	None	replace
98	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	62	None	replace
99	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type,  false);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type,  false);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	62	None	replace
100	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type,  defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	62	None	replace
101	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  type);  [CE]  cannot  find  symbol  instances  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  instances	62	None	replace
102	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get(type);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(type);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
103	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstances().get(type);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstances().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstances().get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(type);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
104	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstance().get(type);  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstance().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstance().get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(type);    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
105	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  types.get(type);  [CE]  cannot  find  symbol  types  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  types.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  types.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(type);    	non-compiled	[CE]  cannot  find  symbol  types	61	None	replace
106	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)type.clone();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)type.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)type.clone();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.clone();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
107	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.clone();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	1	None	replace
108	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawType.clone();  [CE]  cannot  find  symbol  rawType  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawType.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawType.clone();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.clone();    	non-compiled	[CE]  cannot  find  symbol  rawType	1	None	replace
109	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.clone();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.clone();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.clone();    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
110	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	113	None	replace
111	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	113	None	replace
112	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(typeToken);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(typeToken);	  static    final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	113	None	replace
113	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(type  ==  null)?  null  :  instanceCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(type  ==  null)?  null  :  instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(type  ==  null)?  null  :  instanceCreators.get(type);	  static    final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	113	None	replace
114	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(type);	  static    final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	113	None	replace
115	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	54	None	replace
116	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(typeToken);  [CE]  no  suitable  method  found  for  get(TypeToken<T#1>)  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(TypeToken<T#1>)	54	None	replace
117	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(typeToken);  [CE]  cannot  find  symbol  types  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  types	79	None	replace
118	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(typeToken);  [CE]  cannot  find  symbol  rawTypes  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypes	79	None	replace
119	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get();  [CE]  no  suitable  method  found  for  get()  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get()	79	None	replace
120	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreator  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreator	65	None	replace
121	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	123	None	replace
122	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	123	None	replace
123	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)	123	None	replace
124	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	123	None	replace
125	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	123	None	replace
126	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	123	None	replace
127	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get();  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
128	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.getValue();  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.getValue();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.getValue();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
129	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	101	None	replace
130	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	101	None	replace
131	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	101	None	replace
132	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  instanceCreators);  [CE]  cannot  find  symbol  typeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	101	None	replace
133	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType,  instanceCreators);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	101	None	replace
134	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instances.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	17	None	replace
135	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instances.get(type);  [CE]  cannot  find  symbol  instances  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instances.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instances.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instances.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	17	None	replace
136	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(instance);  [CE]  cannot  find  symbol  instance  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(instance);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(instance);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instances.get(type);    	non-compiled	[CE]  cannot  find  symbol  instance	17	None	replace
137	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(instance);  [CE]  cannot  find  symbol  instance  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(instance);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(instance);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instances.get(type);    	non-compiled	[CE]  cannot  find  symbol  instance	17	None	replace
138	[BUG]  [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Class  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  Class  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
139	[BUG]  [BUGGY]  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
140	[BUG]  [BUGGY]  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Category  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Category  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
141	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperClass();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSuperClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
142	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getSuperType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawType  =  typeToken.getSuperType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
143	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	59	None	replace
144	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    rawType    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	103	None	replace
145	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(this.rawType);  [CE]  cannot  find  symbol  rawType  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(this.rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(this.rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawType	44	None	replace
146	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(typeToken);  [CE]  cannot  find  symbol  typeCreators  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	44	None	replace
147	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getRawTypeCreators().get(typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getRawTypeCreators().get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getRawTypeCreators().get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
148	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)type.cloneTree();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)type.cloneTree();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)type.cloneTree();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
149	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.cloneTree();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.cloneTree();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.cloneTree();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
150	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawType.cloneTree();  [CE]  cannot  find  symbol  rawType  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawType.cloneTree();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawType.cloneTree();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  rawType	6	None	replace
151	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.cloneTreeImpl();  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.cloneTreeImpl();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.cloneTreeImpl();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
152	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	71	None	replace
153	[BUG]  [BUGGY]  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
154	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getDefaultImplementation();  if(rawType!=  null)  {  return  defaultImplementation;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  rawType.getDefaultImplementation();  if(rawType!=  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawType  =  rawType.getDefaultImplementation();  if(rawType!=  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	96	None	replace
155	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  type.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  type.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  type.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
156	[BUG]  [BUGGY]  ||  rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [CE]  illegal  start  of  type  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ||  rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	||  rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
157	[BUG]  [BUGGY]  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation  ==  null)  {  return  defaultImplementation;  }  [CE]  cannot  find  symbol  [FE]                                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation  ==  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation  ==  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
158	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawType  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	96	None	replace
159	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instances.get(rawType);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	126	None	replace
160	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators().get(type);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators().get(type);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
161	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	126	None	replace
162	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	126	None	replace
163	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type,  rawType);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	126	None	replace
164	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(type);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	21	None	replace
165	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getObject();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.getObject();	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
166	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(instanceCreator  <  T>)rawTypeToken.get(type);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(instanceCreator  <  T>)rawTypeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(instanceCreator  <  T>)rawTypeToken.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
167	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(type);  [CE]  cannot  find  symbol  rawTypes  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypes	22	None	replace
168	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(type);  [CE]  cannot  find  symbol  instances  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	22	None	replace
169	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	27	None	replace
170	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	27	None	replace
171	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	27	None	replace
172	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	27	None	replace
173	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	27	None	replace
174	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	27	None	replace
175	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(type);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	11	None	replace
176	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	11	None	replace
177	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	11	None	replace
178	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)type.getRawType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)type.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)type.getRawType();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
179	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeToken.getRawType();  [CE]  inconvertible  types  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeToken.getRawType();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  inconvertible  types	5	None	replace
180	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.cloneTree();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.cloneTree();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.cloneTree();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
181	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)this.rawType.getRawType();  [CE]  cannot  find  symbol  rawType  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)this.rawType.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)this.rawType.getRawType();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol  rawType	5	None	replace
182	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.getReturnType();  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.getReturnType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.getReturnType();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
183	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    type    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	80	None	replace
184	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
185	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
186	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreator.get  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreator.get  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreator.get	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
187	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
188	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
189	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  cannot  find  symbol  typeCreator  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	81	None	replace
190	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)type.get(instanceCreators);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)type.get(instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)type.get(instanceCreators);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
191	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  typeCreator  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	81	None	replace
192	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [CE]  cannot  find  symbol  typeCreators  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	81	None	replace
193	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObject();  [CE]  modifier  static  not  allowed  here  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObject();	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	122	None	replace
194	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	122	None	replace
195	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	122	None	replace
196	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	122	None	replace
197	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType,  typeToken);  [CE]  cannot  find  symbol  instances  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  instances	83	None	replace
198	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  this.defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  this.defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	83	None	replace
199	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  null);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  null);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	83	None	replace
200	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType,  type);  [CE]  cannot  find  symbol  instances  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instances.get(rawType,  type);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  instances	83	None	replace
201	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(type);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)outputTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	121	None	replace
202	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	70	None	replace
203	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType);  [CE]  inconvertible  types  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  inconvertible  types	46	None	replace
204	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	24	None	replace
205	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	24	None	replace
206	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	24	None	replace
207	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  this);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  this);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	24	None	replace
208	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  null);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  null);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	24	None	replace
209	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	24	None	replace
210	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	24	None	replace
211	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	125	None	replace
212	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	125	None	replace
213	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators();	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	125	None	replace
214	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	125	None	replace
215	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	49	None	replace
216	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	49	None	replace
217	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	49	None	replace
218	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	49	None	replace
219	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	49	None	replace
220	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	49	None	replace
221	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObjectConstructor(typeToken);  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObjectConstructor(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObjectConstructor(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
222	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(rawType);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.get(type);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
223	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.get(type);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
224	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObject();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObject();	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.get(type);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
225	[BUG]  [BUGGY]  ||  rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ||  rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	||  rawType.isPrimitive())  {  Class  <?>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
226	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	76	None	replace
227	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);  [CE]  cannot  find  symbol  instance  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  instance	76	None	replace
228	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	76	None	replace
229	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(type);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	66	None	replace
230	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	66	None	replace
231	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	66	None	replace
232	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	57	None	replace
233	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(typeToken);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
234	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  no  suitable  method  found  for  get(TypeToken<T#1>)  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(TypeToken<T#1>)	57	None	replace
235	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(typeToken);  [CE]  cannot  find  symbol  typeCreators  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	57	None	replace
236	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(typeToken);  [CE]  inconvertible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  inconvertible  types	57	None	replace
237	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator;    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
238	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
239	[BUG]  [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
240	[BUG]  [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator;    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
241	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [CE]  incompatible  types  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator;    }    	non-compiled	[CE]  incompatible  types	95	None	replace
242	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [CE]  illegal  start  of  type  [FE]                                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
243	[BUG]  [BUGGY]  Constructor  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [CE]  cannot  find  symbol  [FE]                                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator;    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
244	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.get(instance);  [CE]  cannot  find  symbol  instance  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.get(instance);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.get(instance);	  final    InstanceCreator    <    T>    typeCreator    =    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instance	84	None	replace
245	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.get(rawType);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
246	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.get(type);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.get(type);	  final    InstanceCreator    <    T>    typeCreator    =    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
247	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstances().get(rawType);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstances().get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstances().get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
248	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstance();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstance();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstance();	  final    InstanceCreator    <    T>    typeCreator    =    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
249	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  types.get(rawType);  [CE]  cannot  find  symbol  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  types.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  types.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  types	84	None	replace
250	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstance(rawType);  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstance(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstance(rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
251	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	42	None	replace
252	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	10	None	replace
253	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(rawType);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
254	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(rawType);  [CE]  cannot  find  symbol  instanceTypes  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instanceTypes	10	None	replace
255	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
256	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getRawType();  if(typeCreator  ==  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getRawType();  if(typeCreator  ==  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getRawType();  if(typeCreator  ==  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
257	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(typeToken!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(typeToken!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(typeToken!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
258	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
259	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(rawType!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(rawType!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(rawType!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
260	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(rawType.isPrimitive())  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(rawType.isPrimitive())  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(rawType.isPrimitive())  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
261	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawTypeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawTypeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	112	None	replace
262	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawTypeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawTypeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	112	None	replace
263	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(typeToken);  [CE]  cannot  find  symbol  instances  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  instances	112	None	replace
264	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	32	None	replace
265	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	32	None	replace
266	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	32	None	replace
267	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	32	None	replace
268	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	32	None	replace
269	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)this.instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	32	None	replace
270	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
271	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeToken  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeToken  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    final  InstanceCreator  <  T>  typeToken  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
272	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
273	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]          ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(type);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
274	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  incompatible  types  [FE]            ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  incompatible  types	14	None	add
275	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]              ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  variable  type  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
276	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  Constructor  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  Constructor  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    Constructor  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
277	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [CE]  cannot  find  symbol  typeCreator  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	77	None	replace
278	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get();	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
279	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(rawType);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
280	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(rawType);  [CE]  cannot  find  symbol  rawTypes  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypes	67	None	replace
281	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  }  [CE]  illegal  start  of  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
282	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
283	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
284	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get();  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get();  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get();  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
285	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [CE]  cannot  find  symbol  typeCreator  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	109	None	replace
286	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.get(instanceCreators);  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.get(instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.get(instanceCreators);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
287	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	109	None	replace
288	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [CE]  cannot  find  symbol  types  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)types.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  types	109	None	replace
289	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)type.get(rawType);  [CE]  cannot  find  symbol  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)type.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)type.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
290	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
291	[BUG]  [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
292	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
293	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
294	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
295	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
296	[BUG]  [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
297	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	118	None	replace
298	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	118	None	replace
299	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)	118	None	replace
300	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	118	None	replace
301	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	118	None	replace
302	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	118	None	replace
303	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	118	None	replace
304	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	37	None	replace
305	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	37	None	replace
306	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  this.defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  this.defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	37	None	replace
307	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	37	None	replace
308	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  null);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  null);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	37	None	replace
309	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	37	None	replace
310	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(1);  [CE]  incompatible  types  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(1);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(0);    	non-compiled	[CE]  incompatible  types	64	None	replace
311	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(0);  [CE]  cannot  find  symbol  instances  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(0);    	non-compiled	[CE]  cannot  find  symbol  instances	64	None	replace
312	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(0);  [CE]  incompatible  types  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(0);    	non-compiled	[CE]  incompatible  types	64	None	replace
313	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);  [CE]  modifier  static  not  allowed  here  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(0);    	non-compiled	[CE]  modifier  static  not  allowed  here	64	None	replace
314	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.values().get(0);  [CE]  cannot  find  symbol  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.values().get(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.values().get(0);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(0);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
315	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	108	None	replace
316	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  incompatible  types  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  incompatible  types	108	None	replace
317	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType.isPrimitive())  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType.isPrimitive())  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType.isPrimitive())  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	108	None	replace
318	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	108	None	replace
319	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator  ==  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator  ==  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator  ==  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
320	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType  ==  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType  ==  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType  ==  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	108	None	replace
321	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  typeToken.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  typeToken.getInstanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  typeToken.getInstanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
322	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  type.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  type.getInstanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  type.getInstanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
323	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  typeToken.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  typeToken.getInstanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  typeToken.getInstanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
324	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  type.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  type.getInstanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  type.getInstanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
325	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.getInstanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.getInstanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
326	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  types.getInstanceCreators();  [CE]  cannot  find  symbol  types  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  types.getInstanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  types.getInstanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol  types	25	None	replace
327	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(type);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	98	None	replace
328	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(type);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(type);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	98	None	replace
329	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type,  rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	98	None	replace
330	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(type!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	115	None	replace
331	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(type  ==  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(type!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	115	None	replace
332	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	86	None	replace
333	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken,  instanceCreators);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken,  instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	86	None	replace
334	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	86	None	replace
335	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  null);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  null);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	86	None	replace
336	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  this.defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  this.defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	86	None	replace
337	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	120	None	replace
338	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(type);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)types.get(type);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	120	None	replace
339	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(type);  [CE]  cannot  find  symbol  instanceCreators  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceCreators	20	None	replace
340	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)type.clone();  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)type.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)type.clone();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.clone();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
341	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeToken.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeToken.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)typeToken.clone();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	2	None	replace
342	[BUG]  [BUGGY]  final  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.clone();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	2	None	replace
343	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)this.rawType.clone();  [CE]  cannot  find  symbol  rawType  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)this.rawType.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)this.rawType.clone();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.clone();    	non-compiled	[CE]  cannot  find  symbol  rawType	2	None	replace
344	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.clone();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)instanceCreators.clone();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.clone();    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
345	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	26	None	replace
346	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	26	None	replace
347	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	117	None	replace
348	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	117	None	replace
349	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  instanceCreators);  [CE]  cannot  find  symbol  typeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  instanceCreators);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	117	None	replace
350	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  typeToken);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	117	None	replace
351	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	117	None	replace
352	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeTokens.get(type);  [CE]  cannot  find  symbol  rawTypeTokens  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeTokens.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeTokens.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeTokens.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypeTokens	82	None	replace
353	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(rawType);  [CE]  cannot  find  symbol  typeTokens  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeTokens.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeTokens	82	None	replace
354	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(this.instanceCreators.get(type);  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(this.instanceCreators.get(type);    	non-compiled	[CE]  ')'  expected	99	None	replace
355	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(this.instanceCreators.get(rawType);  [CE]  ')'  expected  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(this.instanceCreators.get(type);    	non-compiled	[CE]  ')'  expected	99	None	replace
356	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(this.instanceCreators.get(type);  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.get(this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(this.instanceCreators.get(type);    	non-compiled	[CE]  ')'  expected	99	None	replace
357	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
358	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
359	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
360	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
361	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
362	[BUG]  [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  cannot  find  symbol  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
363	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(rawType);  [CE]  cannot  find  symbol  typeTokens  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeTokens	12	None	replace
364	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)type.getRawType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)type.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)type.getRawType();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
365	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.getRawType();  [CE]  inconvertible  types  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.getRawType();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  inconvertible  types	4	None	replace
366	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawType.getRawType();  [CE]  cannot  find  symbol  rawType  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawType.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawType.getRawType();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol  rawType	4	None	replace
367	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getInstanceCreators().get(rawType);  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getInstanceCreators().get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getInstanceCreators().get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
368	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	35	None	replace
369	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(rawType);  [CE]  cannot  find  symbol  instanceCreators  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instanceCreators	35	None	replace
370	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get(rawType);  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
371	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstances().get(rawType);  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstances().get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstances().get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
372	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstance();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstance();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstance();	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
373	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get();	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
374	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstance(rawType);  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstance(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstance(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
375	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [CE]  cannot  find  symbol  typeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	75	None	replace
376	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	75	None	replace
377	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [CE]  cannot  find  symbol  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)types.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)types.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  types	75	None	replace
378	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.get(instanceCreators);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.get(instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.get(instanceCreators);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
379	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreator  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	75	None	replace
380	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	58	None	replace
381	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	58	None	replace
382	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	58	None	replace
383	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeTokens.get(typeToken);  [CE]  cannot  find  symbol  rawTypeTokens  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeTokens.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeTokens.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeTokens	58	None	replace
384	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.getRawType();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.getRawType();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	58	None	replace
385	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.typeCreators.get(type);  [CE]  cannot  find  symbol  typeCreators  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.typeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.typeCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	38	None	replace
386	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.instanceCreators.get(rawType);  [CE]  cannot  find  symbol  instanceCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceCreators	38	None	replace
387	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getInstanceCreators().get(type);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getInstanceCreators().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getInstanceCreators().get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
388	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.cloneTree().get(type);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.cloneTree().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.cloneTree().get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
389	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.data.get(type);  [CE]  cannot  find  symbol  data  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.data.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.data.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  data	38	None	replace
390	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.cloneTree().instanceCreators.get(type);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.cloneTree().instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.cloneTree().instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
391	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	56	None	replace
392	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(type);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
393	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(rawType);  [CE]  cannot  find  symbol  instanceTypes  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceTypes	16	None	replace
394	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?    super    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	50	None	replace
395	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?    super    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	50	None	replace
396	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?    super    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	50	None	replace
397	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?    super    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	50	None	replace
398	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instances.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?    super    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	50	None	replace
399	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?    super    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	50	None	replace
400	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeToken.get(type);  [CE]  cannot  find  symbol  typeToken  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeToken.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeToken	15	None	replace
401	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getValue();  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getValue();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getValue();	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
402	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObjectConstructor();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObjectConstructor();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.getObjectConstructor();	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
403	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  typeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	55	None	replace
404	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(typeToken);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
405	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(typeToken);  [CE]  cannot  find  symbol  typeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	55	None	replace
406	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  no  suitable  method  found  for  get(TypeToken<T#1>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(TypeToken<T#1>)	55	None	replace
407	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)sourceCreators.get(typeToken);  [CE]  cannot  find  symbol  sourceCreators  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)sourceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)sourceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  sourceCreators	55	None	replace
408	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	48	None	replace
409	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	48	None	replace
410	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	48	None	replace
411	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	48	None	replace
412	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	48	None	replace
413	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.clone();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.clone();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeToken.clone();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	7	None	replace
414	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.clone();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeToken.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	7	None	replace
415	[BUG]  [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
416	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
417	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
418	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
419	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
420	[BUG]  [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
421	[BUG]  [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(type.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
422	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);	  static    final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	114	None	replace
423	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators().get(type);  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators().get(type);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
424	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(typeToken  ==  null)?  null  :  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(typeToken  ==  null)?  null  :  instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(typeToken  ==  null)?  null  :  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	69	None	replace
425	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	28	None	replace
426	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	28	None	replace
427	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	28	None	replace
428	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  this.defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  this.defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	28	None	replace
429	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  this);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  type,  this);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	28	None	replace
430	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  curTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  curTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  curTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    curTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	72	None	replace
431	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  this.typeToken);  [CE]  cannot  find  symbol  typeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  this.typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  this.typeToken);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  typeToken	124	None	replace
432	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreator.get(typeToken);  [CE]  cannot  find  symbol  instanceCreator  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreator.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreator.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(instance);    	non-compiled	[CE]  cannot  find  symbol  instanceCreator	40	None	replace
433	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instance.get(typeToken);  [CE]  cannot  find  symbol  instance  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instance.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instance.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(instance);    	non-compiled	[CE]  cannot  find  symbol  instance	40	None	replace
434	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceToken.get(typeToken);  [CE]  cannot  find  symbol  instanceToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceToken.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceToken.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(instance);    	non-compiled	[CE]  cannot  find  symbol  instanceToken	40	None	replace
435	[BUG]  [BUGGY]  ObjectConstructor  <?  super  T>  rawType  =  typeToken.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <?  super  T>  rawType  =  typeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <?  super  T>  rawType  =  typeToken.getRawType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
436	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawType  =  typeToken.getPrimitiveType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
437	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  instanceCreators);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	86	None	replace
438	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  factory);  [CE]  cannot  find  symbol  factory  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  factory);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  factory);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  cannot  find  symbol  factory	86	None	replace
439	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken,  typeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	86	None	replace
440	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Class  <?>  typeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Class  <?>  typeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Class  <?>  typeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	33	None	replace
441	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  Class  <?>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	33	None	replace
442	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(rawType);  [CE]  cannot  find  symbol  rawTypes  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypes	10	None	replace
443	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(rawType);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	10	None	replace
444	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)processor.getRawType();  [CE]  cannot  find  symbol  processor  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)processor.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)processor.getRawType();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol  processor	4	None	replace
445	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	23	None	replace
446	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instances.get(typeToken);  [CE]  cannot  find  symbol  instances  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instances.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instances.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	23	None	replace
447	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [CE]  cannot  find  symbol  typeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	77	None	replace
448	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	32	None	replace
449	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  typeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  ObjectConstructor  <  T>  typeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  ObjectConstructor  <  T>  typeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
450	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.clone();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.clone();    	non-compiled	[CE]  clone()  has  protected  access  in  Object	2	None	replace
451	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instancesList.get(type);  [CE]  cannot  find  symbol  instancesList  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instancesList.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instancesList.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instances.get(type);    	non-compiled	[CE]  cannot  find  symbol  instancesList	17	None	replace
452	[BUG]  [BUGGY]  final  AnstanceCreator  <  T>  typeCreator  =(AnnotationCreator  <  T>)this.instanceCreators.get(type);  [CE]  cannot  find  symbol  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  AnstanceCreator  <  T>  typeCreator  =(AnnotationCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  AnstanceCreator  <  T>  typeCreator  =(AnnotationCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
453	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  }  [CE]  illegal  start  of  type  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
454	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreator  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	109	None	replace
455	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outputCreators.get(rawType);  [CE]  cannot  find  symbol  outputCreators  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outputCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outputCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  outputCreators	109	None	replace
456	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	46	None	replace
457	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	46	None	replace
458	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	46	None	replace
459	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	48	None	replace
460	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	117	None	replace
461	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
462	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawTypeCreator  =  rawType.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawTypeCreator  =  rawType.getRawType();	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
463	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
464	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
465	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
466	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
467	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
468	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  rawType.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawType  =  rawType.getRawType();	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	105	None	replace
469	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(typeToken);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.rawTypeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	44	None	replace
470	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getInstanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getInstanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
471	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructors();  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructors();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructors();	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  incompatible  types	25	None	replace
472	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators(typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
473	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.instanceCreators();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.instanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.instanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
474	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators(defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators(defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.getInstanceCreators(defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =    rawType.getInstanceCreators();    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	25	None	replace
475	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(this.instanceCreators.get(type);  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(this.instanceCreators.get(type);    	non-compiled	[CE]  ')'  expected	99	None	replace
476	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeFactor  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeFactor  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    final  InstanceCreator  <  T>  typeFactor  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
477	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeToken  =(InstanceCreator  <  T>)rawTypeToken.get(type);  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  typeToken  =(InstanceCreator  <  T>)rawTypeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    final  InstanceCreator  <  T>  typeToken  =(InstanceCreator  <  T>)rawTypeToken.get(type);	  	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
478	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  InstanceCreator  <  T>  typeToken  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  InstanceCreator  <  T>  typeToken  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    InstanceCreator  <  T>  typeToken  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
479	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	57	None	replace
480	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	57	None	replace
481	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)sourceCreators.get(typeToken);  [CE]  cannot  find  symbol  sourceCreators  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)sourceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)sourceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  sourceCreators	57	None	replace
482	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  typeToken.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  typeToken.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  typeToken.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
483	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation  ==  null)  {  return  defaultImplementation;  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation  ==  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation  ==  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
484	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getDefaultImplementation();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  rawType.getDefaultImplementation();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?>  rawType  =  rawType.getDefaultImplementation();	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	96	None	replace
485	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation  [CE]  illegal  start  of  type  [FE]                                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
486	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(type);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(type);	  static    final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	114	None	replace
487	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.get(instanceCreators);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawType.get(instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawType.get(instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
488	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	84	None	replace
489	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(rawType);  [CE]  cannot  find  symbol  rawTypeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	67	None	replace
490	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	108	None	replace
491	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
492	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getConstructor();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  incompatible  types  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getConstructor();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getConstructor();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  incompatible  types	108	None	replace
493	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
494	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  [CE]  <identifier>  expected  [FE]                                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  rawType.getConstructor();  if(typeCreator!=  null)  {  return  new	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
495	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [CE]  cannot  find  symbol  unsafeAllocator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken,  unsafeAllocator);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	24	None	replace
496	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	24	None	replace
497	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.instanceCreators.get(type);  [CE]  package  rawTypeToken  does  not  exist  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.instanceCreators.get(type);    	non-compiled	[CE]  package  rawTypeToken  does  not  exist	38	None	replace
498	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.clone().get(type);  [CE]  clone()  has  protected  access  in  Object  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.clone().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.clone().get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.instanceCreators.get(type);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	38	None	replace
499	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  instanceCreators  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceCreators	38	None	replace
500	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawTypes.get(type);  [CE]  cannot  find  symbol  rawTypes  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawTypes.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawTypes.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(type);    	non-compiled	[CE]  cannot  find  symbol  rawTypes	61	None	replace
501	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typetoken);  [CE]  cannot  find  symbol  typetoken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typetoken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typetoken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(instanceCreators);    	non-compiled	[CE]  cannot  find  symbol  typetoken	87	None	replace
502	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputTypes.get(rawType);  [CE]  cannot  find  symbol  outputTypes  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputTypes.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputTypes.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)outputTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  outputTypes	121	None	replace
503	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
504	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?    super    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	50	None	replace
505	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Class  <?  super  T>  rawType  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?    super    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	50	None	replace
506	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    rawType    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	103	None	replace
507	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(type);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	120	None	replace
508	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	120	None	replace
509	[BUG]  [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
510	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  typeToken);  [CE]  cannot  find  symbol  instances  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  instances	62	None	replace
511	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	62	None	replace
512	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
513	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
514	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
515	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
516	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
517	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)sourceCreators.get(rawType);  [CE]  cannot  find  symbol  sourceCreators  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)sourceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)sourceCreators.get(rawType);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  sourceCreators	12	None	replace
518	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  	non-compiled	[CE]  illegal  start  of  expression	34	None	add
519	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	39	None	replace
520	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawType.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
521	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeCreator  ==  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawTypeCreator  ==  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
522	[BUG]  [BUGGY]  if(rawTypeCreator!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeCreator!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawTypeCreator!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
523	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeCreator  ==  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawTypeCreator  ==  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
524	[BUG]  [BUGGY]  if(rawTypeCreator!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeCreator!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawTypeCreator!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
525	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
526	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  typeCreator.createInstance(typeToken);  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  typeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  typeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
527	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.cloneTree();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.cloneTree();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.cloneTree();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.cloneTree();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	6	None	replace
528	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.clonePath();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.clonePath();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.clonePath();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.cloneTree();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
529	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [CE]  cannot  find  symbol  unsafeAllocator  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	123	None	replace
530	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	76	None	replace
531	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	125	None	replace
532	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [CE]  cannot  find  symbol  unsafeAllocator  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	118	None	replace
533	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	60	None	replace
534	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	60	None	replace
535	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.getObject();  [CE]  cannot  find  symbol  rawTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.getObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeToken.getObject();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.getObject();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	68	None	replace
536	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawTypeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawTypeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	42	None	replace
537	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	55	None	replace
538	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	55	None	replace
539	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	55	None	replace
540	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(typeToken);  [CE]  modifier  static  not  allowed  here  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(typeToken);	  static    final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	113	None	replace
541	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	59	None	replace
542	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstanceCreators();  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstanceCreators();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.getInstanceCreators();	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
543	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  typeCreator  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	79	None	replace
544	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	37	None	replace
545	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.toObjectConstructor();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.toObjectConstructor();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeToken.clone();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
546	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputCreators.get(type);  [CE]  cannot  find  symbol  outputCreators  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeTokens.get(type);    	non-compiled	[CE]  cannot  find  symbol  outputCreators	82	None	replace
547	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  typeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	75	None	replace
548	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	75	None	replace
549	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outputCreators.get(rawType);  [CE]  cannot  find  symbol  outputCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outputCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outputCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  outputCreators	75	None	replace
550	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.toString());  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.toString());  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.toString());	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	27	None	replace
551	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	27	None	replace
552	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  false);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  false);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	27	None	replace
553	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(this.instanceCreators);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(this.instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(this.instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	35	None	replace
554	[BUG]  [BUGGY]  final  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  repeated  modifier  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  repeated  modifier	56	None	replace
555	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
556	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
557	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
558	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
559	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(  [CE]  illegal  start  of  type  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType;  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
560	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	47	None	replace
561	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
562	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get(typeToken);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawType.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
563	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instances.get(typeToken);  [CE]  cannot  find  symbol  instances  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instances.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instances.get(typeToken);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instances	126	None	replace
564	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	101	None	replace
565	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	101	None	replace
566	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	101	None	replace
567	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [CE]  cannot  find  symbol  typeCreators  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	97	None	replace
568	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.types.get(type);  [CE]  cannot  find  symbol  types  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.types.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.types.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(type);    	non-compiled	[CE]  cannot  find  symbol  types	22	None	replace
569	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.types.get(type);  [CE]  cannot  find  symbol  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.types.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.types.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(type);    	non-compiled	[CE]  cannot  find  symbol  types	13	None	replace
570	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  typeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  typeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  typeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
571	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	49	None	replace
572	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	49	None	replace
573	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instancesCreators.get(rawType,  typeToken);  [CE]  cannot  find  symbol  instancesCreators  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instancesCreators.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instancesCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  instancesCreators	124	None	replace
574	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [CE]  modifier  static  not  allowed  here  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	119	None	replace
575	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(instanceCreators  <  T>)typeToken.get(type);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(instanceCreators  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(instanceCreators  <  T>)typeToken.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
576	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(type);  [CE]  cannot  find  symbol  typeTokens  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeTokens.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeTokens	78	None	replace
577	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)sourceCreators.get(type);  [CE]  cannot  find  symbol  sourceCreators  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)sourceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)sourceCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  sourceCreators	78	None	replace
578	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type  [CE]  ')'  expected  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  ')'  expected	31	None	replace
579	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
580	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeToken.get(typeToken);  [CE]  cannot  find  symbol  typeToken  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeToken.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeToken.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(instance);    	non-compiled	[CE]  cannot  find  symbol  typeToken	40	None	replace
581	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
582	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
583	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
584	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
585	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  rawType  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
586	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
587	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
588	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
589	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isInterface())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
590	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(key);  [CE]  cannot  find  symbol  key  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(key);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(key);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  cannot  find  symbol  key	85	None	replace
591	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.invoke(null,  typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.invoke(null,  typeToken.getRawType());  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.invoke(null,  typeToken.getRawType());	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
592	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.getObject();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.getObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.getObject();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
593	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)curTypeCreator.get(rawType);  [CE]  cannot  find  symbol  curTypeCreator  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)curTypeCreator.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)curTypeCreator.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    curTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  curTypeCreator	72	None	replace
594	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.clone();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    	non-compiled	[CE]  clone()  has  protected  access  in  Object	15	None	replace
595	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	63	None	replace
596	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawTypes.get(rawType);  [CE]  cannot  find  symbol  rawTypes  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawTypes.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  rawTypes.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypes	63	None	replace
597	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType);  [CE]  modifier  static  not  allowed  here  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	122	None	replace
598	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	122	None	replace
599	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type  ==  null)?  null  :  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type  ==  null)?  null  :  instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(type  ==  null)?  null  :  instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(type!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	115	None	replace
600	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  rawType.getInstanceCreators().get(type);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  rawType.getInstanceCreators().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  rawType.getInstanceCreators().get(type);	  final    InstanceCreator    <    T>    typeCreator    =(type!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
601	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  }  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
602	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  }  else  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  type  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  }  else  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  }  else  {  return  new  ObjectConstructor  <  T>();  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
603	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  modifier  static  not  allowed  here  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	98	None	replace
604	[BUG]  [BUGGY]  InstanceCreator  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator;  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator;    }    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
605	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  typeCreator;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  typeCreator;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  typeCreator;  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
606	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  typeCreator  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    type    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  typeCreator	80	None	replace
607	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  ')'  expected	52	None	replace
608	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
609	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
610	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
611	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
612	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  final  AnstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  final  AnstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    final  AnstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  	non-compiled	[CE]  cannot  find  symbol	41	None	add
613	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]        ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	41	None	add
614	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)streamType.get(typeToken);  [CE]  cannot  find  symbol  streamType  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)streamType.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)streamType.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  streamType	39	None	replace
615	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.getRawClass());  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.getRawClass());  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.getRawClass());	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
616	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.name);  [CE]  name  has  private  access  in  Class  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.name);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.name);	  final    InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  name  has  private  access  in  Class	27	None	replace
617	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken  -  1);  [CE]  modifier  static  not  allowed  here  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken  -  1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken  -  1);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	119	None	replace
618	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken  +  1);  [CE]  modifier  static  not  allowed  here  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken  +  1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken  +  1);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	119	None	replace
619	[BUG]  [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawTypeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	33	None	replace
620	[BUG]  [BUGGY]  Class  <?  super  T>  typeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  typeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  typeCreator  =(Class  <?  super  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Class    <?>    rawTypeCreator    =(Class    <?    super    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	33	None	replace
621	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  instanceCreators);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  instanceCreators);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	118	None	replace
622	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.toObject();  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.toObject();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawType.toObject();	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawType.getObject();    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
623	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawType  =  rawType.getRawType();	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	106	None	replace
624	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(randomType);  [CE]  cannot  find  symbol  randomType  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(randomType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(randomType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rhinoType);    	non-compiled	[CE]  cannot  find  symbol  randomType	116	None	replace
625	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
626	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
627	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
628	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawClass();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawClass();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
629	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawParameterType(0);	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
630	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawSuperType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getRawSuperType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawType  =  typeToken.getRawSuperType();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
631	[BUG]  [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Class  <?  super  T>  rawType  =  typeToken.getQualifiedName();	  Class    <?    super    T>    rawType    =    typeToken.getRawType();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	3	None	replace
632	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(type);  [CE]  cannot  find  symbol  typeCreators  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	78	None	replace
633	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputCreators.get(type);  [CE]  cannot  find  symbol  outputCreators  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  outputCreators	78	None	replace
634	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)unknownTypeCreators.get(type);  [CE]  cannot  find  symbol  unknownTypeCreators  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)unknownTypeCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)unknownTypeCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  unknownTypeCreators	78	None	replace
635	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultImplementation);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	125	None	replace
636	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  defaultConstructor);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	125	None	replace
637	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	30	None	replace
638	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceC  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
639	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
640	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instance  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instance  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instance	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
641	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(type);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
642	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
643	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(typeToken);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(typeToken);    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
644	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	55	None	replace
645	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	55	None	replace
646	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	55	None	replace
647	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(typeToken);    Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(typeToken);	  	non-compiled	[CE]  ';'  expected	41	None	add
648	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceTypes.get(typeToken);  [CE]  cannot  find  symbol  instanceTypes  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceTypes.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceTypes.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceTypes	18	None	replace
649	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputCreators.get(typeToken);  [CE]  cannot  find  symbol  outputCreators  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)outputCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)rawTypeCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  outputCreators	43	None	replace
650	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outstanceCreators.get(rawType);  [CE]  cannot  find  symbol  outstanceCreators  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outstanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outstanceCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  outstanceCreators	75	None	replace
651	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceC  [CE]  illegal  start  of  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
652	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =  this.instanceCreators.get(type);  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =  this.instanceCreators.get(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =  this.instanceCreators.get(type);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
653	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instance  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instance  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instance	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
654	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
655	[BUG]  [BUGGY]  AnstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  AnstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	AnstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
656	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	120	None	replace
657	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(type);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	120	None	replace
658	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	101	None	replace
659	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.typeToken);  [CE]  cannot  find  symbol  typeToken  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  cannot  find  symbol  typeToken	101	None	replace
660	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  Class  <?>  rawTypeCreator  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
661	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeTokens.get(type);  [CE]  cannot  find  symbol  typeTokens  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeTokens.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeTokens.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeTokens.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeTokens	82	None	replace
662	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)unknownTypeTokens.get(type);  [CE]  cannot  find  symbol  unknownTypeTokens  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)unknownTypeTokens.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)unknownTypeTokens.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeTokens.get(type);    	non-compiled	[CE]  cannot  find  symbol  unknownTypeTokens	82	None	replace
663	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.outputTypeCreators.get(typeToken);  [CE]  cannot  find  symbol  outputTypeCreators  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.outputTypeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.outputTypeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.rawTypeCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  outputTypeCreators	44	None	replace
664	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(typeToken!=  null)?  null  :  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(typeToken!=  null)?  null  :  instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(typeToken!=  null)?  null  :  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	112	None	replace
665	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.put(type,  rawType);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.put(type,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.put(type,  rawType);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	126	None	replace
666	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.keySet().get(type);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.keySet().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.keySet().get(type);	  InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
667	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  type.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  type.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  type.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
668	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(type);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(type);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
669	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType  -  1);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType  -  1);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	74	None	replace
670	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	49	None	replace
671	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	49	None	replace
672	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Class  <?>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Class    <?>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	49	None	replace
673	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type.toString());  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type.toString());  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type.toString());	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	62	None	replace
674	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type),  defaultImplementation);  [CE]  ';'  expected  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type),  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type),  defaultImplementation);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  ';'  expected	62	None	replace
675	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type),  defaultConstructor);  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type),  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type),  defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    type);    	non-compiled	[CE]  ';'  expected	62	None	replace
676	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  illegal  start  of  expression  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
677	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  ';'  expected  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    Final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  	non-compiled	[CE]  ';'  expected	34	None	add
678	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawTypeToken.getRawType();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawTypeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawTypeToken.getRawType();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	5	None	replace
679	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.construct(typeToken.getRawType());  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.construct(typeToken.getRawType());  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawType.construct(typeToken.getRawType());	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
680	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	47	None	replace
681	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	47	None	replace
682	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceC  [CE]  illegal  start  of  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
683	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
684	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =  this.instanceCreators.get(type);  }  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =  this.instanceCreators.get(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =  this.instanceCreators.get(type);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
685	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instance  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instance  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instance	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
686	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	110	None	replace
687	[BUG]  [BUGGY]  if(rawType.isInterface()  ||  rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface()  ||  rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isInterface()  ||  rawType.isInterface())  {  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
688	[BUG]  [BUGGY]  final  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [CE]  cannot  find  symbol  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  Class  <?>  defaultImplementation  =  rawType.getDefaultImplementation();  if(defaultImplementation!=  null)  {  return  defaultImplementation;  }	  if(rawType.isInterface())    {    Class    <?>    defaultImplementation    =    rawType.getDefaultImplementation();    if(defaultImplementation!=    null)    {    return    defaultImplementation;    }    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
689	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  typeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  typeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  typeCreator  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
690	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(typeCreator!=  null)  {  return  new  ObjectConstructor  <  T>();  }	  if(rawType.isPrimitive())    {    Class    <?>    typeCreator    =    rawType.getRawType();    if(typeCreator!=    null)    {    return    new    ObjectConstructor    <    T>();    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
691	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  typeToken);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	111	None	replace
692	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(typeToken,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(typeToken,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	69	None	replace
693	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	109	None	replace
694	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType.isPrimitive())  {  return  new  InstanceCreator  <  T>();  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType.isPrimitive())  {  return  new  InstanceCreator  <  T>();  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawType  =  rawType.getConstructor();  if(rawType.isPrimitive())  {  return  new  InstanceCreator  <  T>();  }	  if(rawType.isPrimitive())    {    final    InstanceCreator    <    T>    typeCreator    =    rawType.getConstructor();    if(typeCreator!=    null)    {    return    new    InstanceCreator    <    T>();    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	108	None	replace
695	[BUG]  [BUGGY]  if(rawType!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
696	[BUG]  [BUGGY]  if(rawType!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
697	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
698	[BUG]  [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType  instanceof  InstanceCreator  <  T>)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType;  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType;    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
699	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(key);  [CE]  cannot  find  symbol  key  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(key);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(key);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(instance);    	non-compiled	[CE]  cannot  find  symbol  key	40	None	replace
700	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(typeToken);  [CE]  cannot  find  symbol  instanceTypes  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceTypes.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceTypes.get(type);    	non-compiled	[CE]  cannot  find  symbol  instanceTypes	16	None	replace
701	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	81	None	replace
702	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.put(type,  rawType);  [CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.put(type,  rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.put(type,  rawType);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  method  put  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	23	None	replace
703	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.keySet().get(type);  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.keySet().get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.keySet().get(type);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
704	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  defaultImplementation);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  rawType,  defaultImplementation);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	117	None	replace
705	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.typeToken);  [CE]  cannot  find  symbol  typeToken  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.typeToken);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  cannot  find  symbol  typeToken	117	None	replace
706	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
707	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
708	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawType  =  typeToken.getRawType();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawType();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
709	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType,  defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	26	None	replace
710	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawTypeToken);  }  [CE]  illegal  start  of  type  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawTypeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawTypeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
711	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  }  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawTypeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
712	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceC  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawTypeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawTypeToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
713	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rhinoType);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rhinoType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rhinoType);	  static    final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  modifier  static  not  allowed  here	114	None	replace
714	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [CE]  modifier  static  not  allowed  here  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);	  static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	122	None	replace
715	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeToken.get(type);  [CE]  cannot  find  symbol  typeToken  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.typeToken.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeToken	21	None	replace
716	[BUG]  [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken.isPrimitive())  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
717	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
718	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawTypeCreator!=  null)  {  return  rawTypeCreator.createInstance(rawType);  }	  if(rawType.isPrimitive())    {    Class    <?>    rawTypeCreator    =    rawType.getRawClass();    if(rawTypeCreator!=    null)    {    return    rawTypeCreator.createInstance(rawType);    }    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
719	[BUG]  [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawTypeToken.clone();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawTypeToken.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	Constructor  <  T>  rawTypeCreator  =(Constructor  <  T>)rawTypeToken.clone();	  Constructor    <    T>    rawTypeCreator    =(Constructor    <    T>)rawType.clone();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	2	None	replace
720	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  ObjectConstructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    ObjectConstructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	31	None	replace
721	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)constructors.get(type);  [CE]  cannot  find  symbol  constructors  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)constructors.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)constructors.get(type);	  InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)types.get(type);    	non-compiled	[CE]  cannot  find  symbol  constructors	22	None	replace
722	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.getAllUnknownType();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.getAllUnknownType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.getAllUnknownType();	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(0);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
723	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.getAll_types();  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.getAll_types();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.getAll_types();	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(0);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
724	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [CE]  illegal  start  of  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
725	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
726	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
727	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
728	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
729	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	56	None	replace
730	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  type);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type,    rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	37	None	replace
731	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
732	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]      ClassCastException    [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)typeToken.get(type);    final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)typeToken.get(type);	  	non-compiled	[CE]  variable  typeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	add
733	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawTypeToken.clone();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawTypeToken.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.rawTypeToken.clone();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeToken.clone();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	7	None	replace
734	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.typeToken.clone();  [CE]  cannot  find  symbol  typeToken  [FE]                                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.typeToken.clone();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.typeToken.clone();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeToken.clone();    	non-compiled	[CE]  cannot  find  symbol  typeToken	7	None	replace
735	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)type	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
736	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
737	[BUG]  [BUGGY]  if(rawType!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
738	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  illegal  start  of  expression  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
739	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instance  [CE]  illegal  start  of  type  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instance  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  static  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instance	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    static    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
740	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  instanceCreators);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  instanceCreators);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  instanceCreators);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	123	None	replace
741	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
742	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
743	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	57	None	replace
744	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	57	None	replace
745	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  incompatible  types	57	None	replace
746	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.getRawType();  [CE]  cannot  find  symbol  rawTypeToken  [FE]                            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.getRawType();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.getRawType();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	4	None	replace
747	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.toObjectConstructor();  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.toObjectConstructor();  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawType.toObjectConstructor();	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)rawType.getRawType();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
748	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
749	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceC  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
750	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(type  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(type  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get(type	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
751	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  final  InstanceCreator  <  T>  types  =(InstanceCreator  <  T>)this.instanceCreators.get	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
752	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken.getRawType());  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken.getRawType());  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  typeToken.getRawType());	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	24	None	replace
753	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	48	None	replace
754	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	48	None	replace
755	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	48	None	replace
756	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    Final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
757	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  context.get(type);  [CE]  cannot  find  symbol  context  [FE]                        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  context.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  context.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(type);    	non-compiled	[CE]  cannot  find  symbol  context	61	None	replace
758	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  final  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    final    InstanceCreator    <    T>    rawType    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	103	None	replace
759	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  this.defaultConstructor);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType,  this.defaultConstructor);	  final    InstanceCreator    <    T>    typeCreator    =    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	83	None	replace
760	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceC  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
761	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  incompatible  types  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	46	None	replace
762	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instance  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instance  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instance	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
763	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  }  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
764	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [CE]  illegal  start  of  type  [FE]                  ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(rawType.isPrimitive())  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)typeC	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
765	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =  instances.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]        ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =  instances.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =  instances.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
766	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =  instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =  instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  types  =  instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    types    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
767	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    type    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
768	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]            ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    type    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
769	[BUG]  [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =  instanceCreators.get(typeToken);  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =  instanceCreators.get(typeToken);  }  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	if(typeToken!=  null)  {  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  final  InstanceCreator  <  T>  type  =  instanceCreators.get(typeToken);  }	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    final    InstanceCreator    <    T>    type    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
770	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(typeToken);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(typeToken);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(type!=  null)?  null  :  instanceCreators.get(typeToken);	  final    InstanceCreator    <    T>    typeCreator    =(type!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	115	None	replace
771	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type  >=  null)?  null  :  instanceCreators.get(type);  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(type  >=  null)?  null  :  instanceCreators.get(type);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(type  >=  null)?  null  :  instanceCreators.get(type);	  final    InstanceCreator    <    T>    typeCreator    =(type!=    null)?    null    :    instanceCreators.get(type);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	115	None	replace
772	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  Constructor  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    typeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    Constructor    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)this.instanceCreators.get(type);    	non-compiled	[CE]  incompatible  types	32	None	replace
