bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	compilable	  [FE]  ClassCastException  	35	2	replace
2	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [FE]  ClassCastException  [FE]    ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	compilable	  [FE]  ClassCastException  	35	2	replace
3	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);  [CE]  incompatible  types  [FE]      ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(type);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	non-compiled	[CE]  incompatible  types	35	None	replace
4	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	compilable	  [FE]  ClassCastException  	35	2	replace
5	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [FE]  ClassCastException  [FE]        ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	compilable	  [FE]  ClassCastException  	35	2	replace
6	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(type);  [CE]  cannot  find  symbol  rawTypes  [FE]          ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(type);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)rawTypes.get(type);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	non-compiled	[CE]  cannot  find  symbol  rawTypes	35	None	replace
7	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type);  [CE]  incompatible  types  [FE]            ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(type);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	non-compiled	[CE]  incompatible  types	35	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]    [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	  	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	non-compiled	[CE]  illegal  start  of  type	35	None	replace
9	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]    ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =  instanceCreators.get(rawType);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	non-compiled	[CE]  incompatible  types	35	None	replace
10	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]    ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	non-compiled	[CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	35	None	replace
11	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	add	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	compilable	  [FE]  ClassCastException  	35	2	replace
12	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [FE]  ClassCastException  [FE]      ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	final  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	compilable	  [FE]  ClassCastException  	35	2	replace
13	[BUG]  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]        ClassCastException  [CONTEXT]  public  <T>  ObjectConstructor<T>  get(TypeToken<T>  typeToken)  {  final  Type  type  =  typeToken.getType();  final  Class<?  super  T>  rawType  =  typeToken.getRawType();    @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21320071635561041	58	58	2	replace	InstanceCreator  <  T>  typeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	final  InstanceCreator<T>  typeCreator  =  (InstanceCreator<T>)  instanceCreators.get(type);  	non-compiled	[CE]  local  variable  typeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	35	None	replace
