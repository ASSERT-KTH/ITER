bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(type);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultConstructor(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
2	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(type,  rawType);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(type,  rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(type,  rawType);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultConstructor(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
3	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType,  type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType,  type);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultConstructor(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
4	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType,  typeToken);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultConstructor(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
5	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType,  rawType);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType,  rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType,  rawType);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultConstructor(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
6	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultInstanceConstructor(rawType);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultInstanceConstructor(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultInstanceConstructor(rawType);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultConstructor(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
7	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.hasUnsafe())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.hasUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeCreator.hasUnsafe())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
8	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  instanceCreators.hasUnsafe())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  instanceCreators.hasUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  instanceCreators.hasUnsafe())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
9	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.hasUnsafe())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.hasUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.hasUnsafe())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
10	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getUnsafe())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.getUnsafe())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
11	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    rawType    ==    null)    {    if(defaultConstructor!=  null  ||  rawType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
12	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  rawType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    rawType    ==    null)    {    if(defaultConstructor  ==  null  ||  rawType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
13	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  rawType!=  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  rawType!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    rawType    ==    null)    {    if(defaultConstructor  ==  null  ||  rawType!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
14	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor  >=  null  ||  rawType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor  >=  null  ||  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    rawType    ==    null)    {    if(defaultConstructor  >=  null  ||  rawType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
15	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor  >>  null  ||  rawType  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor  >>  null  ||  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    rawType    ==    null)    {    if(defaultConstructor  >>  null  ||  rawType  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
16	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  If(defaultConstructor!=  null  ||  rawType  ==  null)  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  If(defaultConstructor!=  null  ||  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    rawType    ==    null)    {    If(defaultConstructor!=  null  ||  rawType  ==  null)  {	  	non-compiled	[CE]  ';'  expected	31	None	add
17	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor!=  null  ||  rawType  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  if(defaultConstructor!=  null  ||  rawType  >=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    rawType    ==    null)    {    if(defaultConstructor!=  null  ||  rawType  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	31	None	add
18	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
19	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
20	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  >=  null  &&  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  >=  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  >=  null  &&  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
21	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    If(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	25	None	add
22	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
23	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  &&  defaultConstructor  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  &&  defaultConstructor  >=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor!=  null  &&  defaultConstructor  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
24	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isNone())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isNone())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isNone())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
25	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnknown())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnknown())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isUnknown())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
26	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.isNone())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.isNone())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.isNone())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
27	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasNone())  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasNone())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasNone())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isNone())    {    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
28	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  type);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  type);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
29	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  typeToken);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
30	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  rawType);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  rawType);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
31	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  typeCreator);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  typeCreator);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  typeCreator);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
32	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  context);  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  context);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  context);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
33	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  defaultConstructor!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  ClassCastException  	85	2	replace
34	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor!=  null)  {  [FE]  ClassCastException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  ClassCastException  	85	2	replace
35	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  rawType!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  NullPointerException  	85	18	replace
36	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType!=  null)  {  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  rawType!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  NullPointerException  	85	18	replace
37	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  rawType!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  NullPointerException  	85	18	replace
38	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  rawType!=  null)  {  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  rawType!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  NullPointerException  	85	18	replace
39	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.isUnsafeInstance())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
40	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  typeCreator.isUnsafeInstance())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
41	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  instanceCreators.isUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  instanceCreators.isUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  instanceCreators.isUnsafeInstance())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
42	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeInstanceType())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeInstanceType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
43	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isInterfaceType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isInterfaceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isInterfaceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterfaceType())    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
44	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isInterfaceType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isInterfaceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isInterfaceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterfaceType())    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
45	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.isInterfaceType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.isInterfaceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.isInterfaceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterfaceType())    {    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
46	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
47	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasUnknownType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.hasUnknownType())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
48	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  type.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  type.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  type.isUnknownType())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
49	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.canUnknownType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.canUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.canUnknownType())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
50	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultImplementation!=  null)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultImplementation!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultImplementation!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultImplementation!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	93	None	replace
51	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultImplementation  ==  null)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultImplementation  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultImplementation  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultImplementation!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	93	None	replace
52	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultImplementation!=  null)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultImplementation!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultImplementation!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultImplementation!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	93	None	replace
53	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultImplementation  ==  null)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultImplementation  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultImplementation  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultImplementation!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	93	None	replace
54	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasInstanceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
55	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isInstanceType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isInstanceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
56	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.hasInstanceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
57	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  instanceCreators.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  instanceCreators.hasInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  instanceCreators.hasInstanceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
58	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getInstanceType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.getInstanceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
59	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.canInstanceType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.canInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.canInstanceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
60	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {	  if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    	compilable	  [FE]  ClassCastException  	24	5	replace
61	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {	  if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    	compilable	  [FE]  ClassCastException  	24	5	replace
62	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  >=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor  >=  null)  {	  if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	24	None	replace
63	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.isInterface())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.isInterface())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
64	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasInterface())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasInterface())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
65	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  &&  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	62	36	replace
66	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(typeToken))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	62	36	replace
67	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  typeToken.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	62	2	replace
68	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeToken.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeToken.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	62	2	replace
69	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  typeToken.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	62	21	replace
70	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeToken.equals(defaultConstructor))  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  typeToken.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	62	21	replace
71	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(typeToken!=  null  ||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	62	18	replace
72	[BUG]  [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.equals(typeToken))  {  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null  ||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	62	18	replace
73	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawTypeCreator!=  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  NullPointerException  	38	21	replace
74	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor  ==  null)  {  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator!=  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  NullPointerException  	38	21	replace
75	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawType!=  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  NullPointerException  	38	18	replace
76	[BUG]  [BUGGY]  if(rawType!=  null  ||  defaultConstructor  ==  null)  {  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType!=  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	compilable	  [FE]  NullPointerException  	38	18	replace
77	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawType!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor    >>    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	56	18	replace
78	[BUG]  [BUGGY]  if(rawType!=  null  ||  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor    >>    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	56	18	replace
79	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(typeToken!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor    >>    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	56	18	replace
80	[BUG]  [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor    >>    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	56	18	replace
81	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawTypeCreator!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor    >>    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	56	36	replace
82	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor    >>    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	56	36	replace
83	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawType  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	33	21	replace
84	[BUG]  [BUGGY]  if(rawType  ==  null  ||  defaultConstructor  ==  null)  {  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	33	21	replace
85	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  type);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  type);	  ObjectConstructor    <    T>    defaultConstructor    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
86	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken);	  ObjectConstructor    <    T>    defaultConstructor    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
87	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(type);	  ObjectConstructor    <    T>    defaultConstructor    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
88	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  rawType);	  ObjectConstructor    <    T>    defaultConstructor    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
89	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)typeCreators.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)typeCreators.get(rawType);	  ObjectConstructor    <    T>    defaultConstructor    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
90	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  null);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  null);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  null);	  ObjectConstructor    <    T>    defaultConstructor    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
91	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
92	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
93	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  ';'  expected	50	None	add
94	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor  >=  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
95	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type));  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type));  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type));	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
96	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
97	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
98	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  &&  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
99	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  If(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  If(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor    ==    null)    {    If(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	27	None	add
100	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor  >=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  &&  defaultConstructor  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
101	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  >=  null  &&  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  >=  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  >=  null  &&  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
102	[BUG]  [BUGGY]  if(type  ==  null  ||  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type  ==  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
103	[BUG]  [BUGGY]  if(rawType.isUnsafe()  ||  defaultConstructor  ==  null)  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType.isUnsafe()  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType.isUnsafe()  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
104	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawType  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	52	36	replace
105	[BUG]  [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	52	36	replace
106	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawTypeCreator  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	53	18	replace
107	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	53	18	replace
108	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
109	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
110	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    If(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  ';'  expected	63	None	add
111	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  typeToken.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor  ==  null  ||  typeToken.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
112	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  typeToken.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  typeToken.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor  ==  null  ||  typeToken.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
113	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
114	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
115	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
116	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  >=  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  >=  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor  >=  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
117	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  >=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor!=  null  ||  defaultConstructor  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
118	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  [CE]  ';'  expected  [FE]              ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor!=    null)    {    If(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  ';'  expected	29	None	add
119	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  >>  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]                ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  >>  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor  >>  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
120	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
121	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
122	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
123	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator  ==  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
124	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
125	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
126	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCreator!=  null  ||  defaultConstructor.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCreator!=  null  ||  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
127	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.isUnknownType())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
128	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  typeCreator.isUnknownType())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
129	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCreator  ==  null  ||  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
130	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator!=  null  ||  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
131	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCreator!=  null  ||  typeCreator.isUnknownType())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
132	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawTypeCreator!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor!=    null)    {    	compilable	  [FE]  ClassCastException  	2	5	replace
133	[BUG]  [BUGGY]  if(rawTypeCreator!=  null)  {  [FE]  ClassCastException  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor!=    null)    {    	compilable	  [FE]  ClassCastException  	2	5	replace
134	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawTypeCreator  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor!=    null)    {    	compilable	  [FE]  NullPointerException  	2	18	replace
135	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null)  {  [FE]  NullPointerException  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor!=    null)    {    	compilable	  [FE]  NullPointerException  	2	18	replace
136	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeToken!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeToken!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	2	None	replace
137	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeToken  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeToken  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	2	None	replace
138	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(typeToken  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor!=    null)    {    	compilable	  [FE]  ClassCastException  	2	5	replace
139	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  [FE]  ClassCastException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor!=    null)    {    	compilable	  [FE]  ClassCastException  	2	5	replace
140	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnknownType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
141	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.hasUnknownType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.hasUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.hasUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
142	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.hasUnknownType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.hasUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeCreator.hasUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
143	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.canUnknownType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.canUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.canUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.canUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
144	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.canUnknownType())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.canUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeCreator.canUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.canUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
145	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.canUnknownType())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.canUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.canUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.canUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
146	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeAllocator())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeAllocator())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
147	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnsafeAllocator())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.isUnsafeAllocator())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
148	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnsafeAllocator())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  typeCreator.isUnsafeAllocator())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
149	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  type);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
150	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  typeToken);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
151	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  rawType);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
152	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  typeCreator);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  typeCreator);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType,  typeCreator);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
153	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(rawType);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
154	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType,  unsafeAllocator);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType,  unsafeAllocator);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType,  unsafeAllocator);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
155	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
156	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType,  defaultConstructor);  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType,  defaultConstructor);	  Class    <?>    rawTypeCreator    =(Class    <?>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
157	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(type);	  Class    <?>    rawTypeCreator    =(Class    <?>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
158	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType,  typeToken);	  Class    <?>    rawTypeCreator    =(Class    <?>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
159	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)typeCreators.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =(Class  <?>)typeCreators.get(rawType);	  Class    <?>    rawTypeCreator    =(Class    <?>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
160	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(typeToken);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(typeToken);	  Class    <?>    rawTypeCreator    =(Class    <?>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
161	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)defaultConstructor.get(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)defaultConstructor.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =(Class  <?>)defaultConstructor.get(rawType);	  Class    <?>    rawTypeCreator    =(Class    <?>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
162	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
163	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
164	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
165	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
166	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  type);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
167	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
168	[BUG]  [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    If(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
169	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    If(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
170	[BUG]  [BUGGY]  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    If(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
171	[BUG]  [BUGGY]  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]                      NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    If(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
172	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCreator  ==  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCreator  ==  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor    ==    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
173	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator  ==  null  ||  typeCreator.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator  ==  null  ||  typeCreator.isUnsafe())  {	  if(defaultConstructor    ==    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
174	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator  ==  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor    ==    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
175	[BUG]  [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCreator  ==  null  ||  typeCreator.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCreator  ==  null  ||  typeCreator.isUnsafe())  {	  if(defaultConstructor    ==    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
176	[BUG]  [BUGGY]  Class  <?>  rawType  =  type.getRawClass();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  type.getRawClass();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  type.getRawClass();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
177	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUnsafe();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUnsafe();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.restrictByNotNullOrUnsafe();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
178	[BUG]  [BUGGY]  Class  <?>  rawType  =  defaultConstructor.getRawClass();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  defaultConstructor.getRawClass();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  defaultConstructor.getRawClass();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
179	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
180	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.toRawClass();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.toRawClass();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.toRawClass();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
181	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.construct(defaultConstructor);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.construct(defaultConstructor);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.construct(defaultConstructor);	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
182	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnsafeType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnsafeType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.isUnsafeType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
183	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnsafeType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnsafeType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  typeCreator.isUnsafeType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
184	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
185	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.isUnsafeType())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.isUnsafeType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  rawType.isUnsafeType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
186	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  rawType  ==  null)  {	  if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	22	21	replace
187	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  rawType  ==  null)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  rawType  ==  null)  {	  if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	22	21	replace
188	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawTypeCreator  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	34	18	replace
189	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor  ==  null)  {  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	34	18	replace
190	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor.equals(type))    {    if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
191	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor.equals(type))    {    if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
192	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  If(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  If(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor.equals(type))    {    If(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  ';'  expected	59	None	add
193	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  >=  null  &&  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  >=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor.equals(type))    {    if(defaultConstructor  >=  null  &&  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
194	[BUG]  [BUGGY]  if(rawTypeToken!=  null  ||  defaultConstructor.equals(type))  {  [CE]  cannot  find  symbol  rawTypeToken  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeToken!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeToken!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor    >=    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	54	None	replace
195	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
196	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
197	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    If(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  ';'  expected	68	None	add
198	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  >=  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
199	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  >>  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  >>  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  >>  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
200	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  [BUGGY]  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  ')'  expected  [FE]              NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  [BUGGY]  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  [BUGGY]  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  ')'  expected	68	None	add
201	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasInterfaceType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasInterfaceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasInterfaceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInterface())    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
202	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasInterface())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.hasInterface())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInterface())    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
203	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
204	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
205	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
206	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    If(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
207	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  >=  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  >=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
208	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  >=  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  >=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor  >=  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
209	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(rawType);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
210	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(class,  rawType);  [CE]  illegal  start  of  expression  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(class,  rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(class,  rawType);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(rawType);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
211	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  defaultConstructor.getRawClass();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  defaultConstructor.getRawClass();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  defaultConstructor.getRawClass();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
212	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.construct(defaultConstructor);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.construct(defaultConstructor);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.construct(defaultConstructor);	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
213	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.newInstance();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.newInstance();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.newInstance();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
214	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.toRawClass();  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.toRawClass();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.toRawClass();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
215	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  type.getRawClass();  [CE]  illegal  start  of  type  [FE]                                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  type.getRawClass();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  type.getRawClass();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
216	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.createRawClass();  [CE]  illegal  start  of  type  [FE]                                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.createRawClass();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.createRawClass();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
217	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.isUnknownType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
218	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.getUnknownType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.getUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.getUnknownType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
219	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  defaultConstructor.isUnsafe())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
220	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafe()  ||  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafe()  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafe()  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
221	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnsafe())    {    	compilable	  [FE]  ClassCastException  	41	2	replace
222	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnsafe())    {    	compilable	  [FE]  ClassCastException  	41	2	replace
223	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  type.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  type.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  type.isUnsafe())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
224	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasUnsafe())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.hasUnsafe())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
225	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafeInstance())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
226	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.isUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.isUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.isUnsafeInstance())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
227	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeCreator.isUnsafeInstance())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
228	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  instanceCreators.isUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  instanceCreators.isUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  instanceCreators.isUnsafeInstance())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
229	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	51	21	replace
230	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	51	21	replace
231	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  type.equals(defaultConstructor))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	51	21	replace
232	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.equals(defaultConstructor))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.equals(defaultConstructor))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	51	21	replace
233	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  ClassCastException  	92	5	replace
234	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  type.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  ClassCastException  	92	5	replace
235	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  &&  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  ClassCastException  	92	5	replace
236	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  type.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  ClassCastException  	92	5	replace
237	[BUG]  [BUGGY]  if(type!=  null  ||  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  defaultConstructor.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  ||  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
238	[BUG]  [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null  ||  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
239	[BUG]  [BUGGY]  if(type  ==  null  ||  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type  ==  null  ||  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
240	[BUG]  [BUGGY]  if(typeCapacity!=  null  ||  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  typeCapacity  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCapacity!=  null  ||  defaultConstructor.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCapacity!=  null  ||  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol  typeCapacity	17	None	replace
241	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(type))    {    if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
242	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(type))    {    if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
243	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  If(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  If(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(type))    {    If(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  ';'  expected	57	None	add
244	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  >=  null  &&  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  >=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(type))    {    if(defaultConstructor  >=  null  &&  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
245	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  >>  null  &&  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  >>  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(type))    {    if(defaultConstructor  >>  null  &&  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
246	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  &&  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    	compilable	  [FE]  NullPointerException  	12	36	replace
247	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(defaultConstructor))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    	compilable	  [FE]  NullPointerException  	12	36	replace
248	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  typeToken.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	87	5	replace
249	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  typeToken.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  typeToken.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	87	5	replace
250	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(typeToken!=  null  &&  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	87	36	replace
251	[BUG]  [BUGGY]  if(typeToken!=  null  &&  defaultConstructor.equals(typeToken))  {  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null  &&  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	87	36	replace
252	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  &&  typeToken.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	87	5	replace
253	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  typeToken.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]        ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  typeToken.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	87	5	replace
254	[BUG]  [BUGGY]  if(type!=  null  ||  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  defaultConstructor.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  ||  defaultConstructor.isInterface())  {	  if(defaultConstructor!=    null    ||    type.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
255	[BUG]  [BUGGY]  if(type  ==  null  ||  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type  ==  null  ||  defaultConstructor.isInterface())  {	  if(defaultConstructor!=    null    ||    type.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
256	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  type.isInterface())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  type.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  type.isInterface())  {	  if(defaultConstructor!=    null    ||    type.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
257	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isInterface())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeCreator.isInterface())  {	  if(defaultConstructor!=    null    ||    type.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
258	[BUG]  [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null  ||  defaultConstructor.isInterface())  {	  if(defaultConstructor!=    null    ||    type.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
259	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
260	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  type.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    if(defaultConstructor  ==  null  ||  type.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
261	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor  >=  null  ||  type.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]        ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor  >=  null  ||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    if(defaultConstructor  >=  null  ||  type.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
262	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  If(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  [CE]  ';'  expected  [FE]          ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  If(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    If(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {	  	non-compiled	[CE]  ';'  expected	91	None	add
263	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor  >>  null  ||  type.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor  >>  null  ||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    if(defaultConstructor  >>  null  ||  type.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
264	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor  [BUGGY]  null  ||  type.equals(defaultConstructor))  {  [CE]  ')'  expected  [FE]              ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor  [BUGGY]  null  ||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    if(defaultConstructor  [BUGGY]  null  ||  type.equals(defaultConstructor))  {	  	non-compiled	[CE]  ')'  expected	91	None	add
265	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
266	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  cannot  find  symbol  rawTypeToken  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	96	None	replace
267	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken  ==  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	96	None	replace
268	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	96	None	replace
269	[BUG]  [BUGGY]  Constructor  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Constructor  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Constructor  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
270	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
271	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  rawType  ==  null)  {	  if(defaultConstructor!=    null    ||    rawType    ==    null)    {    	compilable	  [FE]  ClassCastException  	32	5	replace
272	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  rawType  ==  null)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  rawType  ==  null)  {	  if(defaultConstructor!=    null    ||    rawType    ==    null)    {    	compilable	  [FE]  ClassCastException  	32	5	replace
273	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  &&  rawType  ==  null)  {	  if(defaultConstructor!=    null    ||    rawType    ==    null)    {    	compilable	  [FE]  ClassCastException  	32	5	replace
274	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  rawType  ==  null)  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  rawType  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  rawType  ==  null)  {	  if(defaultConstructor!=    null    ||    rawType    ==    null)    {    	compilable	  [FE]  ClassCastException  	32	5	replace
275	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isInstance())  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isInstance())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
276	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isAssignableFrom(rawType))  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isAssignableFrom(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isAssignableFrom(rawType))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
277	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isInstanceType())  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isInstanceType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
278	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.isInstance())  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.isInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.isInstance())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
279	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
280	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
281	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor  >=  null  ||  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
282	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    If(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  ';'  expected	61	None	add
283	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  ||  typeToken.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  ||  typeToken.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor!=  null  ||  typeToken.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
284	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
285	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeToken!=  null)  {  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	97	None	replace
286	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator  ==  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
287	[BUG]  [BUGGY]  Constructor  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Constructor  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Constructor  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
288	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken  ==  null)  {  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	97	None	replace
289	[BUG]  [BUGGY]  InstanceCreator  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
290	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawType  ==  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	36	replace
291	[BUG]  [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.equals(rawType))  {  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType  ==  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	36	replace
292	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawType!=  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	18	replace
293	[BUG]  [BUGGY]  if(rawType!=  null  ||  defaultConstructor.equals(rawType))  {  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType!=  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	18	replace
294	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  rawType.equals(defaultConstructor))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	21	replace
295	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.equals(defaultConstructor))  {  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  rawType.equals(defaultConstructor))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	21	replace
296	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCreator!=  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCreator!=  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
297	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null  ||  typeCreator.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator!=  null  ||  typeCreator.isUnsafe())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
298	[BUG]  [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator!=  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
299	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCreator!=  null  ||  typeCreator.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCreator!=  null  ||  typeCreator.isUnsafe())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
300	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(rawType,  type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(rawType,  type);	  ObjectConstructor    <    T>    defaultConstructor    =    newUnsafeAllocator(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
301	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(rawType,  typeToken);	  ObjectConstructor    <    T>    defaultConstructor    =    newUnsafeAllocator(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
302	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(rawType);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(rawType);	  ObjectConstructor    <    T>    defaultConstructor    =    newUnsafeAllocator(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
303	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasInterfaces())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasInterfaces())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasInterfaces())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInterfaces())    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
304	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasInterfaces())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.hasInterfaces())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.hasInterfaces())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInterfaces())    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
305	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasDeclaredInterfaces())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasDeclaredInterfaces())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasDeclaredInterfaces())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInterfaces())    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
306	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasProperty(type))  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasProperty(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasProperty(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInterfaces())    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
307	[BUG]  [BUGGY]  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
308	[BUG]  [BUGGY]  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
309	[BUG]  [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
310	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isPrimitive())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isPrimitive())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
311	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.isPrimitive())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.isPrimitive())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
312	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isPrimitiveType())  {  [CE]  cannot  find  symbol  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isPrimitiveType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isPrimitiveType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
313	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isPrimitive())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  typeCreator.isPrimitive())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
314	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  rawType.isPrimitive())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isPrimitive())    {    	compilable	  [FE]  NullPointerException  	102	21	replace
315	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.isPrimitive())  {  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  rawType.isPrimitive())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isPrimitive())    {    	compilable	  [FE]  NullPointerException  	102	21	replace
316	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.getUnknownType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.getUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.getUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.getUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
317	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.getUnknownType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.getUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.getUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.getUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
318	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.getUnknownType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.getUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeCreator.getUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.getUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
319	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
320	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  instanceCreators.hasUnsafe())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  instanceCreators.hasUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  instanceCreators.hasUnsafe())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
321	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.hasUnsafe())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.hasUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  typeCreator.hasUnsafe())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
322	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.hasUnsafe())  {  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  type.hasUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.hasUnsafe())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
323	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.getUnsafe())  {  [CE]  cannot  find  symbol  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.getUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.getUnsafe())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
324	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
325	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
326	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  >=  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  >=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
327	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  If(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    If(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
328	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  >>  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  >>  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor  >>  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
329	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  >=  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  if(defaultConstructor  >=  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    if(defaultConstructor  >=  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
330	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  defaultConstructor.isInterface())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
331	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isInterface()  ||  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isInterface()  ||  defaultConstructor.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isInterface()  ||  defaultConstructor.isInterface())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
332	[BUG]  [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType  ==  null  ||  defaultConstructor.isInterface())  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
333	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
334	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
335	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  >=  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
336	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    If(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  ';'  expected	11	None	add
337	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  >>  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  >>  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  >>  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
338	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  defaultConstructor.equals(rawType))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	66	5	replace
339	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(rawType))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.equals(rawType))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	66	5	replace
340	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  &&  defaultConstructor.equals(rawType))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	66	36	replace
341	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(rawType))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  defaultConstructor.equals(rawType))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	66	36	replace
342	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  rawType.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	66	2	replace
343	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  rawType.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  ClassCastException  	66	2	replace
344	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
345	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
346	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    if(defaultConstructor  >=  null  ||  defaultConstructor.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
347	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    If(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {	  	non-compiled	[CE]  ';'  expected	65	None	add
348	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor  >>  null  ||  defaultConstructor.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor  >>  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    if(defaultConstructor  >>  null  ||  defaultConstructor.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
349	[BUG]  [BUGGY]  if(type!=  null  ||  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor    ==    null    ||    type.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
350	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeToken.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  typeToken.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  typeToken.isUnsafe())  {	  if(defaultConstructor    ==    null    ||    type.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
351	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(typeToken  ==  null  ||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	64	36	replace
352	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  defaultConstructor.equals(typeToken))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken  ==  null  ||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	64	36	replace
353	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	18	replace
354	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [FE]  NullPointerException  [FE]                      NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	18	replace
355	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  defaultConstructor.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	33	replace
356	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getClass()!=  type)  {  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	33	replace
357	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(type  ==  null  ||  defaultConstructor.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	33	replace
358	[BUG]  [BUGGY]  if(type  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [FE]  NullPointerException  [FE]                          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type  ==  null  ||  defaultConstructor.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	33	replace
359	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  typeToken)  {  [CE]  incomparable  types:  Class<CAP#1>  and  TypeToken<T>  [FE]                            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  typeToken)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  typeToken)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  TypeToken<T>	8	None	replace
360	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getClass()!=  typeToken)  {  [CE]  incomparable  types:  Class<CAP#1>  and  TypeToken<T>  [FE]                              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getClass()!=  typeToken)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.getClass()!=  typeToken)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  TypeToken<T>	8	None	replace
361	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getClass()  ==  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  defaultConstructor.getClass()  ==  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	33	replace
362	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getClass()  ==  type)  {  [FE]  NullPointerException  [FE]                                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getClass()  ==  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.getClass()  ==  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	33	replace
363	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(type!=  null  ||  defaultConstructor.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	18	replace
364	[BUG]  [BUGGY]  if(type!=  null  ||  defaultConstructor.getClass()!=  type)  {  [FE]  NullPointerException  [FE]                                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  ||  defaultConstructor.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	18	replace
365	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(this.defaultType))  {  [CE]  cannot  find  symbol  defaultType  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(this.defaultType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.equals(this.defaultType))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultType))    {    	non-compiled	[CE]  cannot  find  symbol  defaultType	94	None	replace
366	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultType))  {  [CE]  cannot  find  symbol  defaultType  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.equals(defaultType))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultType))    {    	non-compiled	[CE]  cannot  find  symbol  defaultType	94	None	replace
367	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
368	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  rawTypeToken  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	100	None	replace
369	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
370	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken  ==  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	100	None	replace
371	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	100	None	replace
372	[BUG]  [BUGGY]  Constructor  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Constructor  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Constructor  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
373	[BUG]  [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor!=    null    ||    type.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
374	[BUG]  [BUGGY]  if(typeCapacity!=  null  ||  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  typeCapacity  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCapacity!=  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCapacity!=  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor!=    null    ||    type.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol  typeCapacity	39	None	replace
375	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
376	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken  ==  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	95	None	replace
377	[BUG]  [BUGGY]  Constructor  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Constructor  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Constructor  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
378	[BUG]  [BUGGY]  if(rawTypeCreator!=  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator!=  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	95	None	replace
379	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  cannot  find  symbol  rawTypeToken  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeToken!=  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	95	None	replace
380	[BUG]  [BUGGY]  InstanceCreator  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
381	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);	  Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
382	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);	  Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
383	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);	  Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
384	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  instanceCreators.get(type);	  Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
385	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  types.get(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  types.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  types.get(rawType);	  Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
386	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType,  type);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType,  type);	  Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
387	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
388	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    if(defaultConstructor  ==  null  &&  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
389	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  If(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  [CE]  ';'  expected  [FE]        ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  If(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    If(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  ';'  expected	86	None	add
390	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  >=  null  &&  defaultConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]          ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  >=  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    if(defaultConstructor  >=  null  &&  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
391	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  &&  typeToken.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]            ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  &&  typeToken.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    if(defaultConstructor!=  null  &&  typeToken.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
392	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafeType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafeType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafeType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
393	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.isUnsafeType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.isUnsafeType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.isUnsafeType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
394	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isUnsafeType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isUnsafeType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeCreator.isUnsafeType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
395	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasUnsafeType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasUnsafeType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasUnsafeType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
396	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawTypeCreator.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawTypeCreator.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  rawTypeCreator.isUnsafe())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
397	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(null))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(null))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    	compilable	  [FE]  NullPointerException  	69	21	replace
398	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(null))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(null))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(null))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    	compilable	  [FE]  NullPointerException  	69	21	replace
399	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  unsafeAllocator);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  unsafeAllocator);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  unsafeAllocator);	  ObjectConstructor    <    T>    defaultConstructor    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
400	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeClass())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeClass())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeClass())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
401	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
402	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  type);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  type);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  type);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
403	[BUG]  [BUGGY]  AnstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  AnstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	AnstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
404	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
405	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
406	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType.getUnknownType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType.getUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  rawType.getUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.getUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
407	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.toUnknownType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.toUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.toUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.getUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
408	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getUnsafeType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getUnsafeType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.getUnsafeType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
409	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  ObjectConstructor  <  T>  defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  ObjectConstructor  <  T>  defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    ObjectConstructor  <  T>  defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  ';'  expected	68	None	add
410	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  <  return  defaultConstructor;  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  <  return  defaultConstructor;  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  <  return  defaultConstructor;	  	non-compiled	[CE]  illegal  start  of  type	68	None	add
411	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(typeToken  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	33	21	replace
412	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  defaultConstructor  ==  null)  {  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	33	21	replace
413	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
414	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  null);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  null);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  null);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
415	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType.hasUnknownType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType.hasUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  rawType.hasUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
416	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.getQualifiedName();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.getQualifiedName();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
417	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.getRawParameterType(0);	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
418	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getConstructor();  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.getConstructor();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.getConstructor();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
419	[BUG]  [BUGGY]  if(typeCapacity!=  null  ||  type.isUnknownType())  {  [CE]  cannot  find  symbol  typeCapacity  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCapacity!=  null  ||  type.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCapacity!=  null  ||  type.isUnknownType())  {	  if(defaultConstructor!=    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol  typeCapacity	17	None	replace
420	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equalsIgnoreCase(typeToken))  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equalsIgnoreCase(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.equalsIgnoreCase(typeToken))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
421	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken)&&  rawTypeCreator!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken)&&  rawTypeCreator!=  null)  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	64	21	replace
422	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken)&&  rawTypeCreator!=  null)  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken)&&  rawTypeCreator!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken)&&  rawTypeCreator!=  null)  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	64	21	replace
423	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.canUnsafe())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.canUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.canUnsafe())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
424	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equalsIgnoreCase(typeToken))  {  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equalsIgnoreCase(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.equalsIgnoreCase(typeToken))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
425	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType.canUnknownType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType.canUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  rawType.canUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.canUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
426	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getConstructor();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getConstructor();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getConstructor();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
427	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getQualifiedName();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getQualifiedName();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getQualifiedName();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
428	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getClass();  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getClass();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getClass();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
429	[BUG]  [BUGGY]  if(defaultConstructor  >=  null  ||  defaultConstructor.isInterface())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  >=  null  ||  defaultConstructor.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  >=  null  ||  defaultConstructor.isInterface())  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	7	None	replace
430	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeCreators.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeCreators.get(rawType);	  Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
431	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
432	[BUG]  [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
433	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
434	[BUG]  [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
435	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  rawType.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  rawType.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  rawType.isUnknownType())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
436	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
437	[BUG]  [BUGGY]  if(rawTypeCreator!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
438	[BUG]  [BUGGY]  if(rawTypeCreator  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeCreator  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeCreator  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
439	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeToken  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeToken  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
440	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
441	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInterface())    {    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
442	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newUnsafeAllocator(type,  rawType);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newUnsafeAllocator(type,  rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newUnsafeAllocator(type,  rawType);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
443	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newUnsafeAllocator(rawType,  type);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newUnsafeAllocator(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newUnsafeAllocator(rawType,  type);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
444	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawTypeCreator.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawTypeCreator.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  rawTypeCreator.isUnknownType())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
445	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  typeCreator.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  typeCreator.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  typeCreator.isUnknownType())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
446	[BUG]  [BUGGY]  TypeToken  typeToken  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  TypeToken  typeToken  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	TypeToken  typeToken  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
447	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
448	[BUG]  [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    If(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
449	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    If(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
450	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor!=  null  &&  defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
451	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  scope);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  scope);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType,  scope);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
452	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeAllocator())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeAllocator())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
453	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawType.isUnsafeAllocator())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  rawType.isUnsafeAllocator())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeAllocator())    {    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
454	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(null))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  defaultConstructor.equals(null))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultType))    {    	compilable	  [FE]  NullPointerException  	94	33	replace
455	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(null))  {  [FE]  NullPointerException  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(null))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.equals(null))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultType))    {    	compilable	  [FE]  NullPointerException  	94	33	replace
456	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor);)  {  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor);)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor);)  {	  	non-compiled	[CE]  ')'  expected	11	None	add
457	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  type.hasInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.hasInstanceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInstanceType())    {    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
458	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType,  type);  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType,  type);	  Class    <?>    rawTypeCreator    =(Class    <?>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
459	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeInstance())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
460	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.canUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.canUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.canUnsafeInstance())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
461	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasTypes())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasTypes())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasTypes())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.hasInterfaces())    {    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
462	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType);)  {  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType);)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType);)  {	  	non-compiled	[CE]  ')'  expected	65	None	add
463	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafe())  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
464	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  rawTypeCreator.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  rawTypeCreator.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  rawTypeCreator.isUnsafe())  {	  if(defaultConstructor    ==    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
465	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType!=  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
466	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  rawType.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	18	replace
467	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType.getClass()!=  type)  {  [FE]  NullPointerException  [FE]                        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  rawType.getClass()!=  type)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  rawType.getClass()!=  type)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	compilable	  [FE]  NullPointerException  	8	18	replace
468	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(type!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  NullPointerException  	92	18	replace
469	[BUG]  [BUGGY]  if(type!=  null  ||  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  NullPointerException  	92	18	replace
470	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultUnsafeAllocator(rawType,  type);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultUnsafeAllocator(rawType,  type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultUnsafeAllocator(rawType,  type);	  ObjectConstructor    <    T>    defaultConstructor    =    newUnsafeAllocator(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
471	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isAssignmentOp())  {  [CE]  cannot  find  symbol  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isAssignmentOp())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isAssignmentOp())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
472	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasInstance())  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasInstance())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isInstance())    {    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
473	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  factory.isInterface())  {  [CE]  cannot  find  symbol  factory  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  factory.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  factory.isInterface())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol  factory	10	None	replace
474	[BUG]  [BUGGY]  InstanceCreator  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
475	[BUG]  [BUGGY]  InstanceCreator  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  InstanceCreator  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
476	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  typeToken  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  cannot  find  symbol  rawTypeToken  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  typeToken  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawTypeToken!=  null)  {  Class  <?>  typeToken  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	96	None	replace
477	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.canUnsafe())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.canUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.canUnsafe())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
478	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeAccess())  {  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeAccess())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafeAccess())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.hasUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
479	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    &&    defaultConstructor.equals(type))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	59	None	add
480	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasUnsafeInstance())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
481	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getUnsafeInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.getUnsafeInstance())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
482	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafeAllocator())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafeAllocator())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
483	[BUG]  [BUGGY]  If(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  If(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	If(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    If(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  ';'  expected	37	None	replace
484	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeInterface())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeInterface())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafeInstance())    {    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
485	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.toString();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.toString();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.toString();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
486	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.newInstance();  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawType  =  typeToken.newInstance();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.newInstance();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
487	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnknownClass())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnknownClass())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isUnknownClass())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
488	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultType))  {  [CE]  cannot  find  symbol  defaultType  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultType))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol  defaultType	15	None	replace
489	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeClass())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeClass())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeClass())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
490	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeInstanceType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeInstanceType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeInstanceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafeType())    {    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
491	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  [BUGGY]  null  ||  defaultConstructor.equals(defaultConstructor))  {  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  [BUGGY]  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  [BUGGY]  null  ||  defaultConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  ')'  expected	11	None	add
492	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  >=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor  >=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	85	None	replace
493	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  <  null)  {  [CE]  bad  operand  types  for  binary  operator  '<'  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  <  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor  <  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    >=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '<'	85	None	replace
494	[BUG]  [BUGGY]  if(typeToken!=  null)  {  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken!=  null)  {  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null)  {  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	99	None	replace
495	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(type  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	5	36	replace
496	[BUG]  [BUGGY]  if(type  ==  null  ||  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	5	36	replace
497	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(typeToken  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	5	36	replace
498	[BUG]  [BUGGY]  if(typeToken  ==  null  ||  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeToken  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	5	36	replace
499	[BUG]  [BUGGY]  if(defaultConstructor  >=  null  ||  defaultConstructor  ==  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  >=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  >=  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor    >=    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	36	None	replace
500	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equalsIgnoreCase(type))  {  [CE]  cannot  find  symbol  [FE]            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equalsIgnoreCase(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.equalsIgnoreCase(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultType))    {    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
501	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(rawType  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	33	replace
502	[BUG]  [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [FE]  NullPointerException  [FE]                  NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	33	replace
503	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(type  ==  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	36	replace
504	[BUG]  [BUGGY]  if(type  ==  null  ||  defaultConstructor.equals(rawType))  {  [FE]  NullPointerException  [FE]                    NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type  ==  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.equals(rawType))    {    	compilable	  [FE]  NullPointerException  	6	36	replace
505	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isInstance())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isInstance())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isInstance())  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
506	[BUG]  [BUGGY]  if(type!=  null  ||  type.isInterface())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  type.isInterface())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  ||  type.isInterface())  {	  if(defaultConstructor!=    null    ||    type.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
507	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(this.defaultConstructor))  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(this.defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(this.defaultConstructor))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	69	None	replace
508	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor  [BUGGY]  null  ||  defaultConstructor.equals(rawType))  {  [CE]  ')'  expected  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  if(defaultConstructor  [BUGGY]  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(rawType))    {    if(defaultConstructor  [BUGGY]  null  ||  defaultConstructor.equals(rawType))  {	  	non-compiled	[CE]  ')'  expected	65	None	add
509	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType,  typeToken);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
510	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType,  null);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType,  null);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType,  null);	  ObjectConstructor    <    T>    defaultImplementation    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
511	[BUG]  [BUGGY]  if(typeCreator!=  null  ||  type.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(typeCreator!=  null  ||  type.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeCreator!=  null  ||  type.isUnknownType())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
512	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  typeCreator.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  typeCreator.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  typeCreator.isUnsafe())  {	  if(defaultConstructor!=    null    ||    typeCreator.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
513	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(type  ==  null  ||  defaultConstructor!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    	compilable	  [FE]  ClassCastException  	3	2	replace
514	[BUG]  [BUGGY]  if(type  ==  null  ||  defaultConstructor!=  null)  {  [FE]  ClassCastException  [FE]            NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type  ==  null  ||  defaultConstructor!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    	compilable	  [FE]  ClassCastException  	3	2	replace
515	[BUG]  [BUGGY]  if(defaultConstructor  >=  null  ||  defaultConstructor!=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  >=  null  ||  defaultConstructor!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  >=  null  ||  defaultConstructor!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	replace
516	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  ||  typeToken.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor!=  null  ||  typeToken.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor!=  null  ||  typeToken.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	61	None	add
517	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  factoryConstructor.equals(defaultConstructor))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  factoryConstructor.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  ==  null  ||  factoryConstructor.equals(defaultConstructor))  {	  	non-compiled	[CE]  illegal  start  of  expression	68	None	add
518	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor);)  {  [CE]  ')'  expected  [FE]      NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor);)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(defaultConstructor))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor);)  {	  	non-compiled	[CE]  ')'  expected	68	None	add
519	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.canUnknownClass())  {  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.canUnknownClass())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.canUnknownClass())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.canUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
520	[BUG]  [BUGGY]  SortedMap  <  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  >  expected  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  SortedMap  <  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	SortedMap  <  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  >  expected	97	None	replace
521	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  &&  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(type!=  null  &&  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  ClassCastException  	92	5	replace
522	[BUG]  [BUGGY]  if(type!=  null  &&  type.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  &&  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  &&  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  ClassCastException  	92	5	replace
523	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(type!=  null  &&  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  NullPointerException  	92	36	replace
524	[BUG]  [BUGGY]  if(type!=  null  &&  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  &&  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    type.equals(defaultConstructor))    {    	compilable	  [FE]  NullPointerException  	92	36	replace
525	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(type  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	73	21	replace
526	[BUG]  [BUGGY]  if(type  ==  null  ||  defaultConstructor  ==  null)  {  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	73	21	replace
527	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  typeToken  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null)  {  Class  <?>  typeToken  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType!=  null)  {  Class  <?>  typeToken  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	96	None	replace
528	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  instances.get(rawType);  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  instances.get(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  instances.get(rawType);	  Class    <?>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
529	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  typeToken  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(rawType!=  null)  {  Class  <?>  typeToken  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(rawType!=  null)  {  Class  <?>  typeToken  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(typeToken!=    null)    {    Class    <?>    rawType    =    typeToken.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  variable  typeToken  is  already  defined  in  method  <T>get(TypeToken<T>)	100	None	replace
530	[BUG]  [BUGGY]  if(defaultConstructor  >=  null  ||  defaultImplementation!=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  >=  null  ||  defaultImplementation!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  >=  null  ||  defaultImplementation!=  null)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultImplementation!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	93	None	replace
531	[BUG]  [BUGGY]  Class  <?>  rawTypeToken  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeToken  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeToken  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	  if(typeToken!=    null)    {    Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    if(rawTypeCreator!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
532	[BUG]  [BUGGY]  If(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  If(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	If(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
533	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  If(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	non-compiled	[CE]  ';'  expected	55	None	replace
534	[BUG]  [BUGGY]  if(type!=  null  ||  type.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  type.isUnknownType())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  ||  type.isUnknownType())  {	  if(defaultConstructor!=    null    ||    type.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
535	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(defaultType))  {  [CE]  cannot  find  symbol  defaultType  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(defaultType))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.equals(defaultType))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol  defaultType	16	None	replace
536	[BUG]  [BUGGY]  if(type!=  null  ||  type.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type!=  null  ||  type.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type!=  null  ||  type.isUnsafe())  {	  if(defaultConstructor!=    null    ||    type.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
537	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.toString();  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.toString();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.toString();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
538	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.cloneTree();  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.cloneTree();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.cloneTree();	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
539	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.construct(rawType);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.construct(rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.construct(rawType);	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
540	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.convertUTCToLocal(type);  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.convertUTCToLocal(type);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.convertUTCToLocal(type);	  Class    <?>    rawTypeCreator    =    typeToken.getRawClass();    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
541	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(type,  rawType,  unsafeAllocator);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(type,  rawType,  unsafeAllocator);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(type,  rawType,  unsafeAllocator);	  ObjectConstructor    <    T>    defaultConstructor    =    newUnsafeAllocator(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
542	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType,  unsafeAllocator);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType,  unsafeAllocator);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType,  unsafeAllocator);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
543	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType,  typeToken);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType,  typeToken);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
544	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType,  rawType);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType,  rawType);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType,  rawType);	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultImplementationConstructor(type,    rawType);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
545	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  factoryConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  ==  null  ||  factoryConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(typeToken))    {    if(defaultConstructor  ==  null  ||  factoryConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	63	None	add
546	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isPrimitiveClass())  {  [CE]  cannot  find  symbol  [FE]          NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isPrimitiveClass())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isPrimitiveClass())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isPrimitive())    {    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
547	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	87	36	replace
548	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  defaultConstructor.equals(typeToken))  {  [FE]  NullPointerException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  NullPointerException  	87	36	replace
549	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	87	5	replace
550	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  type.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  type.equals(defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken)||  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    	compilable	  [FE]  ClassCastException  	87	5	replace
551	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(this.defaultConstructor))  {  [CE]  cannot  find  symbol  defaultConstructor  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(this.defaultConstructor))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.equals(this.defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(defaultConstructor))    {    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	12	None	replace
552	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  >>  null  &&  defaultConstructor.equals(typeToken))  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  if(defaultConstructor  >>  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor.equals(typeToken))    {    if(defaultConstructor  >>  null  &&  defaultConstructor.equals(typeToken))  {	  	non-compiled	[CE]  illegal  start  of  expression	86	None	add
553	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  >>  null  &&  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  if(defaultConstructor  >>  null  &&  defaultConstructor  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    if(defaultConstructor  >>  null  &&  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
554	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  rawType!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  rawType!=  null)  {	  if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    	compilable	  [FE]  ClassCastException  	26	2	replace
555	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  rawType!=  null)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  rawType!=  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  rawType!=  null)  {	  if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    	compilable	  [FE]  ClassCastException  	26	2	replace
556	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultImplementation  ==  null)  {  [CE]  cannot  find  symbol  defaultImplementation  [FE]      ClassCastException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor!=  null  &&  defaultImplementation  ==  null)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultImplementation  ==  null)  {	  if(defaultConstructor!=    null    &&    defaultConstructor    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	26	None	replace
557	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  class);  [CE]  illegal  start  of  expression  [FE]                      ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  class);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  class);	  ObjectConstructor    <    T>    defaultConstructor    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
558	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  instanceCreators);  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  instanceCreators);  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  instanceCreators);	  ObjectConstructor    <    T>    defaultConstructor    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
559	[BUG]  [BUGGY]  if(type  ==  null  ||  defaultConstructor.getClass()!=  defaultConstructor)  {  [CE]  incomparable  types:  Class<CAP#1>  and  ObjectConstructor<T>  [FE]                      NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(type  ==  null  ||  defaultConstructor.getClass()!=  defaultConstructor)  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(type  ==  null  ||  defaultConstructor.getClass()!=  defaultConstructor)  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.getClass()!=    type)    {    	non-compiled	[CE]  incomparable  types:  Class<CAP#1>  and  ObjectConstructor<T>	8	None	replace
560	[BUG]  [BUGGY]  if(defaultConstructor  >=  null  ||  defaultConstructor.isUnsafe())  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              NullPointerException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  >=  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  >=  null  ||  defaultConstructor.isUnsafe())  {	  if(defaultConstructor    ==    null)    {    if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	4	None	replace
561	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  factoryConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  factoryConstructor.equals(type))  {  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor  ==  null  ||  factoryConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
562	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor();  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);      [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor();  [BUGGY]      return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor();	  ObjectConstructor    <    T>    defaultConstructor    =    newDefaultConstructor(rawType);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
