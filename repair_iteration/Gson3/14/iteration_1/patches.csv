bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
2	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor!=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
3	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
4	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafe())  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafe())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafe())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
5	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
6	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(rawType))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
7	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.isInterface())  {  [CE]  illegal  start  of  expression  [FE]                NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.isInterface())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor.isInterface())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
8	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [CE]  illegal  start  of  expression  [FE]                  NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor.getClass()!=  type)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
9	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isInterface())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isInterface())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
10	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isInterface())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isInterface())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isInterface())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
11	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterface())    {    	compilable	  [FE]  NullPointerException  	8	33	replace
12	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [FE]  NullPointerException  [FE]            ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterface())    {    	compilable	  [FE]  NullPointerException  	8	33	replace
13	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.isInterface())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  type.isInterface())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.isInterface())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
14	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasInterface())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasInterface())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasInterface())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
15	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnknownType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
16	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnknownType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
17	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  type.isUnknownType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.isUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
18	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasUnknownType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasUnknownType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
19	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isUnknownType())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isUnknownType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeCreator.isUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
20	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.canUnknownType())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.canUnknownType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.canUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
21	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	6	21	replace
22	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	6	21	replace
23	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	6	18	replace
24	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	6	18	replace
25	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]        NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  ClassCastException  	6	5	replace
26	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [FE]  ClassCastException  [FE]        NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  ClassCastException  	6	5	replace
27	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	6	21	replace
28	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  defaultConstructor  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	6	21	replace
29	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  ClassCastException  	6	2	replace
30	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  [FE]  ClassCastException  [FE]            NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor!=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  ClassCastException  	6	2	replace
31	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  rawType  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  ClassCastException  	6	2	replace
32	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  [FE]  ClassCastException  [FE]              NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  rawType  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  rawType  ==  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	compilable	  [FE]  ClassCastException  	6	2	replace
33	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
34	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
35	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
36	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  >=  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  >=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor  >=  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
37	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    If(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
38	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor!=  null  ||  defaultConstructor  >=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor!=  null  ||  defaultConstructor  >=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
39	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  type.isUnsafe())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.isUnsafe())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
40	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  typeCreator.isUnsafe())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  typeCreator.isUnsafe())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
41	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafe())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.isUnsafe())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
42	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasUnsafe())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasUnsafe())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasUnsafe())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
43	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CE]  illegal  start  of  type  [FE]                    ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType);  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultConstructor(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType);  [CE]  illegal  start  of  type  [FE]                      ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType);  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(type,  rawType);  [CE]  illegal  start  of  type  [FE]                        ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(type,  rawType);  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newUnsafeAllocator(type,  rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
48	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType);  [CE]  illegal  start  of  type  [FE]                          ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType);  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultConstructor  =  newDefaultImplementationConstructor(type,  rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
49	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  [CE]  illegal  start  of  type  [FE]                            ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  typeToken.getRawClass();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
50	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	2	21	replace
51	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  if(defaultConstructor    ==    null)    {    	compilable	  [FE]  NullPointerException  	2	21	replace
52	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
53	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor  ==  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
54	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  >=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor  >=  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
55	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    If(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  ';'  expected	9	None	add
56	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  >>  null  ||  defaultConstructor.equals(type))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(type))  {  if(defaultConstructor  >>  null  ||  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    if(defaultConstructor  >>  null  ||  defaultConstructor.equals(type))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
57	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  ClassCastException  	10	5	replace
58	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  ClassCastException  	10	5	replace
59	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	10	36	replace
60	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  &&  defaultConstructor.equals(type))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	10	36	replace
61	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	10	33	replace
62	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [FE]  NullPointerException  [FE]        NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	10	33	replace
63	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	10	21	replace
64	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  [FE]  NullPointerException  [FE]          NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	10	21	replace
65	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	10	33	replace
66	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  [FE]  NullPointerException  [FE]            NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.equals(rawType))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  NullPointerException  	10	33	replace
67	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  type.isUnsafe())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  type.isUnsafe())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
68	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]              ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	compilable	  [FE]  NullPointerException  	4	18	replace
69	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [FE]  NullPointerException  [FE]              ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.equals(defaultConstructor))  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	compilable	  [FE]  NullPointerException  	4	18	replace
70	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnsafe())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  typeCreator.isUnsafe())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  typeCreator.isUnsafe())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
71	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafe())  {  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafe())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.hasUnsafe())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
72	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isNone())  {  [CE]  cannot  find  symbol  [FE]                    ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isNone())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isNone())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
73	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
74	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeAllocator())  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeAllocator())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeAllocator())  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
75	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  >>  null  ||  defaultConstructor  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  ==  null)  {  if(defaultConstructor  >>  null  ||  defaultConstructor  ==  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    if(defaultConstructor  >>  null  ||  defaultConstructor  ==  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
76	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getUnknownType())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.getUnknownType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.getUnknownType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
77	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeAllocator())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeAllocator())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeAllocator())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
78	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeType())  {  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeType())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
79	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeInstance())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isUnsafeInstance())  {	  if(defaultConstructor    ==    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
80	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeInstance())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeInstance())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeInstance())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
81	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeType())  {  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isUnsafeType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnsafe())    {    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
82	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType);  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =(Class  <?>)instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  [CE]  illegal  start  of  type  [FE]                    ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	ObjectConstructor  <  T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor  >=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor  >=  null)  {	  if(defaultConstructor!=    null    ||    defaultConstructor    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	6	None	replace
86	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  ClassCastException  	10	5	replace
87	[BUG]  [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  &&  defaultConstructor.equals(typeToken))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  ClassCastException  	10	5	replace
88	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isInterfaceType())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.isInterfaceType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.isInterfaceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
89	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasInterfaces())  {  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasInterfaces())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasInterfaces())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
90	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasInstanceType())  {  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.hasInstanceType())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.hasInstanceType())  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isInterface())    {    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
91	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	add	if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  ClassCastException  	10	2	replace
92	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  [FE]  ClassCastException  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  type.equals(defaultConstructor))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.equals(type))    {    	compilable	  [FE]  ClassCastException  	10	2	replace
93	[BUG]  [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultImplementation!=  null)  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null)  {  if(defaultConstructor  ==  null  ||  defaultImplementation!=  null)  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor    ==    null)    {    if(defaultConstructor  ==  null  ||  defaultImplementation!=  null)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
94	[BUG]  [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultType))  {  [CE]  cannot  find  symbol  defaultType  [FE]        ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultType))  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor!=  null  ||  defaultConstructor.equals(defaultType))  {	  if(defaultConstructor!=    null    ||    defaultConstructor.isUnknownType())    {    	non-compiled	[CE]  cannot  find  symbol  defaultType	11	None	replace
95	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null)  {  Class  <?>  rawTypeCreator  =  typeToken.getRawClass();  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	      	non-compiled	[CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	7	None	replace
96	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  return  defaultConstructor;  }	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	7	None	replace
97	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null)  {  Class  <?>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	      	non-compiled	[CE]  variable  rawTypeCreator  is  already  defined  in  method  <T>get(TypeToken<T>)	7	None	replace
98	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  [CE]  illegal  start  of  type  [FE]                      ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	Class  <?>  rawType  =  typeToken.getRawClass();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
99	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  defaultConstructor;  }	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
100	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(typeToken!=  null)  {  Class  <?>  rawType  =  typeToken.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	7	None	replace
101	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isInstance())  {  [CE]  cannot  find  symbol  [FE]    NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isInstance())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isInstance())  {	  if(defaultConstructor    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
102	[BUG]  [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isPrimitive())  {  [CE]  cannot  find  symbol  [FE]      NullPointerException    [CONTEXT]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);    [BUGGY]  if(defaultConstructor  ==  null  ||  defaultConstructor.isPrimitive())  {  [BUGGY]    return  defaultConstructor;  }  ObjectConstructor<T>  defaultImplementation  =  newDefaultImplementationConstructor(type,  rawType);  if  (defaultImplementation  !=  null)  {  return  defaultImplementation;  }  return  newUnsafeAllocator(type,  rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	80	80	2	replace	if(defaultConstructor  ==  null  ||  defaultConstructor.isPrimitive())  {	  if(defaultConstructor    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
