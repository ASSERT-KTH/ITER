bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  ==  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
2	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators  ==  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null)  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
3	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators  ==  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators  ==  null)  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
4	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType.isPrimitive())  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
5	[BUG]  [BUGGY]  }  else  if(instanceCreators!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators!=  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators!=  null)  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
6	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType  instanceof  UnsafeAllocator)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||  rawType  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
7	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()!=  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()!=  null)  {	  }    else    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
8	[BUG]  [BUGGY]  }  if(e.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  if(e.getTargetException()  ==  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e.getTargetException()  ==  null)  {	  }    else    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
9	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType.getTargetException()  ==  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()  ==  null)  {	  }    else    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
10	[BUG]  [BUGGY]  }  if(e.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  if(e.getTargetException()!=  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e.getTargetException()!=  null)  {	  }    else    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
11	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!null)  {	  }    else    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
12	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  }  catch(Throwable  e)  {  [CE]  exception  Throwable  has  already  been  caught  [FE]    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  }  catch(Throwable  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    }  catch(Throwable  e)  {	  	non-compiled	[CE]  exception  Throwable  has  already  been  caught	1	None	add
13	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
14	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
15	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
16	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
17	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
18	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
19	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	1	None	add
20	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
21	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
22	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
23	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
24	[BUG]  [BUGGY]  }  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  'try'  without  'catch'  or  'finally'  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  'try'  without  'catch'  or  'finally'	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  unclosed  character  literal	5	None	replace
25	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
26	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Exception  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	add	}  catch(Exception  e)  {	  }    catch(Throwable    e)    {    	compilable	  [FE]  ClassCastException  	2	2	replace
27	[BUG]  [BUGGY]  }  catch(Exception  e)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Exception  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {	  }    catch(Throwable    e)    {    	compilable	  [FE]  ClassCastException  	2	2	replace
28	[BUG]  [BUGGY]  }  catch(NoClassDefFoundError  e)  {  [CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown  [FE]      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(NoClassDefFoundError  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(NoClassDefFoundError  e)  {	  }    catch(Throwable    e)    {    	non-compiled	[CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown	2	None	replace
29	[BUG]  [BUGGY]  }  catch(ClassCastException  e)  {  [CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown  [FE]        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(ClassCastException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(ClassCastException  e)  {	  }    catch(Throwable    e)    {    	non-compiled	[CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown	2	None	replace
30	[BUG]  [BUGGY]  }  catch(RuntimeException  e)  {  [CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(RuntimeException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(RuntimeException  e)  {	  }    catch(Throwable    e)    {    	non-compiled	[CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown	2	None	replace
31	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  t)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	add	}  catch(Throwable  t)  {	  }    catch(Throwable    e)    {    	compilable	  [FE]  ClassCastException  	2	2	replace
32	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  [FE]  ClassCastException  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  t)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  t)  {	  }    catch(Throwable    e)    {    	compilable	  [FE]  ClassCastException  	2	2	replace
33	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
34	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
35	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
36	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
37	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
38	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
39	[BUG]  [BUGGY]  }  else  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
40	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
41	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
42	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
43	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
44	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
45	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
46	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType.getTargetException()!=  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()!=  null)  {	  }    else    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	7	None	replace
47	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||  e.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()!=  null  ||  e.getTargetException()  ==  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||  e.getTargetException()  ==  null)  {	  }    else    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	7	None	replace
48	[BUG]  [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'	      	non-compiled	[CE]  unclosed  character  literal	6	None	replace
49	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'	      	non-compiled	[CE]  unclosed  character  literal	6	None	replace
50	[BUG]  [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
51	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
52	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }	      	non-compiled	[CE]  unclosed  character  literal	6	None	replace
53	[BUG]  [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  }	      	non-compiled	[CE]  unclosed  character  literal	6	None	replace
54	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }	      	non-compiled	[CE]  unclosed  character  literal	6	None	replace
55	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
56	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
57	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
58	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
59	[BUG]  [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
60	[BUG]  [BUGGY]  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
61	[BUG]  [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally';  }	      	non-compiled	[CE]  unclosed  character  literal	6	None	replace
62	[BUG]  [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  throw  new  IllegalAccessException( " ");  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
63	[BUG]  [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  character  literal  [FE]                        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  unclosed  character  literal	6	None	replace
64	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
65	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType.isArray())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType.isArray())  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||  rawType.isArray())  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
66	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType.isInterface())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType.isInterface())  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||  rawType.isInterface())  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
67	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
68	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
69	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
70	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
71	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
72	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
73	[BUG]  [BUGGY]  }  catch  (IllegalArgumentException  e)  {  [CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown  [FE]        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch  (IllegalArgumentException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch  (IllegalArgumentException  e)  {	  }    catch    (NoClassCastException    e)    {    	non-compiled	[CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown	10	None	replace
74	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  ClassCastException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  ClassCastException))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  ClassCastException))  {	  }    else    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
75	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  IllegalAccessException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  IllegalAccessException))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  IllegalAccessException))  {	  }    else    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
76	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  UnknownTypeException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  UnknownTypeException))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  UnknownTypeException))  {	  }    else    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
77	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType))  {	  }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	2	None	replace
78	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
79	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)  [FE]      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    Class  <?>  rawType  =  rawType.getRawClass();	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)	1	None	add
80	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
81	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
82	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'catch'  without  'try'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  	non-compiled	[CE]  'catch'  without  'try'	1	None	add
83	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  	non-compiled	[CE]  ')'  expected	1	None	add
84	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
85	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
86	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
87	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
88	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
89	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  e  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  e  instanceCreators.contains(rawType))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||  e  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
90	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  ClassCastException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  ClassCastException))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  ClassCastException))  {	  }    else    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	7	None	replace
91	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( " "))  {  [CE]  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( " "))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( " "))  {	  }    else    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  	7	None	replace
92	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException)  {	  }    else    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	7	None	replace
93	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  UnknownTypeException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  UnknownTypeException))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  UnknownTypeException))  {	  }    else    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	7	None	replace
94	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
95	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  return  null;  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  return  null;  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    return  null;	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	1	None	add
96	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  	1	None	add
97	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(Throwable  e)  {  return  null;  }  [CE]  ')'  expected  [FE]        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(Throwable  e)  {  return  null;  }	  	non-compiled	[CE]  ')'  expected	1	None	add
98	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  	1	None	add
99	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(Throwable  e)  {  return  null;  }  catch(Throwable  e)  {  }  [CE]  ')'  expected  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  if(Throwable  e)  {  return  null;  }  catch(Throwable  e)  {  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    if(Throwable  e)  {  return  null;  }  catch(Throwable  e)  {  }	  	non-compiled	[CE]  ')'  expected	1	None	add
100	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    e)    {    throw  new  IllegalStateException( " ");	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	1	None	add
101	[BUG]  [BUGGY]  }  else  if(e  instanceCreators!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators!=  null)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators!=  null)  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
102	[BUG]  [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>))  {	  }    else    if(e    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
103	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  ConstructorException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  ConstructorException))  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!(e.getTargetException()  instanceof  ConstructorException))  {	  }    else    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
104	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
105	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]              ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
106	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	4	None	replace
107	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(args  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
108	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
109	[BUG]  [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
110	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(args  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
111	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException    [CONTEXT]    }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(   "Failed  to  invoke     "  +  constructor  +     "  with  no  args   ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };    [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
