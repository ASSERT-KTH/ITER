bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
2	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
3	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
4	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
5	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isFunction())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isFunction())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isFunction())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
6	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
7	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isFinal())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isFinal())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isFinal())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
8	[BUG]  [BUGGY]  }  catch(NoClassDefFoundException  e)  {  [CE]  cannot  find  symbol  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(NoClassDefFoundException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(NoClassDefFoundException  e)  {	  }    catch(NoClassDefFoundError    e)    {    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
9	[BUG]  [BUGGY]  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	59	None	replace
10	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  throw  new  IllegalStateException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	59	None	replace
11	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isArray())  {  throw  new  IllegalStateException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	59	None	replace
12	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isInterface())  {  throw  new  IllegalStateException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	59	None	replace
13	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalStateException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	59	None	replace
14	[BUG]  [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ".getClass());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ".getClass());  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  throw  new  IllegalStateException( " ".getClass());  }	  if(rawType    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	59	None	replace
15	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
16	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  UnsafeAllocator)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
17	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  extends  T>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  extends  T>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  extends  T>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
18	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
19	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super  T>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super  T>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  super  T>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
20	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isfinally())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isfinally())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isfinally())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
21	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isStatic())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isStatic())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isStatic())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
22	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
23	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFunction())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFunction())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isFunction())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
24	[BUG]  [BUGGY]  if(rawType.isFunction())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isFunction())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isFunction())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
25	[BUG]  [BUGGY]  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
26	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  RuntimeException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  RuntimeException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  RuntimeException)  {	  }    catch(RuntimeException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	30	None	replace
27	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  UnknownClassException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  UnknownClassException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  UnknownClassException)  {	  }    catch(RuntimeException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	30	None	replace
28	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isfinally())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isfinally())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isfinally())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
29	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isStatic())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isStatic())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isStatic())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
30	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
31	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFunction())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFunction())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isFunction())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
32	[BUG]  [BUGGY]  if(!rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(!rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(!rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
33	[BUG]  [BUGGY]  'try'  without  'catch'  or  'finally';  [CE]  unclosed  character  literal  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  'try'  without  'catch'  or  'finally';  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	'try'  without  'catch'  or  'finally';	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
34	[BUG]  [BUGGY]  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  'try'  without  'catch'  or  'finally';  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
35	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
36	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
37	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally';  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
38	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
39	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
40	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  UnsafeAllocator  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
41	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
42	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
43	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
44	[BUG]  [BUGGY]  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  'try'  without  'catch'  or  'finally'	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
45	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally'	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
46	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
47	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
48	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally'	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
49	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    instanceof    Class    <?>)    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	58	None	replace
50	[BUG]  [BUGGY]  }  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceof    Class    <?>)    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	58	None	replace
51	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  ==?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  ==?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  ==?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceof    Class    <?>)    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	58	None	replace
52	[BUG]  [BUGGY]  }  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    instanceof    Class    <?>)    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	58	None	replace
53	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  >=?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  >=?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  >=?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceof    Class    <?>)    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	58	None	replace
54	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	50	None	replace
55	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isInterface())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	50	None	replace
56	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	50	None	replace
57	[BUG]  [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".getMessage());  }	  if(rawType    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	50	None	replace
58	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  if(t  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]    ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  if(t  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    if(t  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	31	None	add
59	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  }  catch(Throwable  t)  {  [CE]  exception  Throwable  has  already  been  caught  [FE]      ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  }  catch(Throwable  t)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    }  catch(Throwable  t)  {	  	non-compiled	[CE]  exception  Throwable  has  already  been  caught	31	None	add
60	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  if(t  ==  null)  {  return  null;  }  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]        ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  if(t  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    if(t  ==  null)  {  return  null;  }	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	31	None	add
61	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  if(t!=  null)  {  return  null;  }  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]          ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  if(t!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    if(t!=  null)  {  return  null;  }	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	31	None	add
62	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  if(t  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]            ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  if(t  ==  null)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    if(t  ==  null)  {  throw  new  IllegalArgumentException( " "));  }	  	non-compiled	[CE]  	31	None	add
63	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  Class  <?>  rawType  =  getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)  [FE]              ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  Class  <?>  rawType  =  getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    Class  <?>  rawType  =  getRawClass();	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)	31	None	add
64	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  if(t  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]                ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  if(t  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    if(t  ==  null)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	31	None	add
65	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]                  ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	31	None	add
66	[BUG]  [BUGGY]  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  character  literal  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
67	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  character  literal  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
68	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  character  literal  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
69	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  character  literal  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
70	[BUG]  [BUGGY]  }  else  if(rawType.contains(instanceCreators)||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.contains(instanceCreators)||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.contains(instanceCreators)||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
71	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
72	[BUG]  [BUGGY]  }  else  if(constructor.contains(rawType)||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor.contains(rawType)||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor.contains(rawType)||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
73	[BUG]  [BUGGY]  }  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
74	[BUG]  [BUGGY]  }  else  if(rawType.contains(instanceCreators)||  rawType.contains(instanceCreators))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.contains(instanceCreators)||  rawType.contains(instanceCreators))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.contains(instanceCreators)||  rawType.contains(instanceCreators))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
75	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instancesCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instancesCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instancesCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
76	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceof  UnsafeAllocator)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
77	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.size()  ==  0)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.size()  ==  0)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.size()  ==  0)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
78	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ==  null  ||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ==  null  ||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  UnsafeAllocator  ==  null  ||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
79	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceof  UnsafeAllocator)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
80	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.size()!=  0)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.size()!=  0)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.size()!=  0)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
81	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.length!=  0)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.length!=  0)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.length!=  0)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
82	[BUG]  [BUGGY]  }  else  if(instanceCreators!=  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators!=  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators!=  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
83	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
84	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
85	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&!instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&!instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)&&!instanceCreators.contains(rawType))  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
86	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)||!instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)||!instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)||!instanceCreators.contains(rawType))  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
87	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
88	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	34	None	replace
89	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	34	None	replace
90	[BUG]  [BUGGY]  }  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	34	None	replace
91	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  Throwable)  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  Throwable)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  Throwable)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
92	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  ClassCastException)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
93	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
94	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
95	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	99	None	replace
96	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	99	None	replace
97	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType!=  null)  {  throw  new  RuntimeException( " ");  }  [CE]  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType!=  null)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType!=  null)  {  throw  new  RuntimeException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  	99	None	replace
98	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
99	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(e))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(e))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(e))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
100	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
101	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(instanceCreators))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(instanceCreators))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(instanceCreators))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
102	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
103	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
104	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
105	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	43	None	replace
106	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	43	None	replace
107	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  extends  T>)  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  extends  T>)  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  extends  T>)  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	43	None	replace
108	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  ClassCastException)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	43	None	replace
109	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  rawType  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  rawType  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||  rawType  instanceof  ClassCastException)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	43	None	replace
110	[BUG]  [BUGGY]  }  catch(NoSuchMethodException  e)  {  throw  new  IllegalStateException( " ");  [CE]  unreachable  statement  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(NoSuchMethodException  e)  {  throw  new  IllegalStateException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(NoSuchMethodException  e)  {  throw  new  IllegalStateException( " ");	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	100	None	replace
111	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.size()  >  0)  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.size()  >  0)  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.size()  >  0)  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	100	None	replace
112	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType))  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	100	None	replace
113	[BUG]  [BUGGY]  }  catch(Exception  e)  {  throw  new  IllegalStateException( " ");  [CE]  unreachable  statement  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  throw  new  IllegalStateException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {  throw  new  IllegalStateException( " ");	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	100	None	replace
114	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  ClassCastException)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	100	None	replace
115	[BUG]  [BUGGY]  }  else  if(e  instanceof  Throwable)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceof  Throwable)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceof  Throwable)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	100	None	replace
116	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||!instanceCreators.contains(rawType))  {	  }    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	10	None	replace
117	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!instanceCreators.contains(args[0]))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!instanceCreators.contains(args[0]))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||!instanceCreators.contains(args[0]))  {	  }    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	10	None	replace
118	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!instanceCreators.contains(args[0],  rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!instanceCreators.contains(args[0],  rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||!instanceCreators.contains(args[0],  rawType))  {	  }    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	10	None	replace
119	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	57	None	replace
120	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.getTargetException()!=  null)  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	46	None	replace
121	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()  ==  null  ||  rawType.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getTargetException()  ==  null  ||  rawType.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()  ==  null  ||  rawType.getTargetException()!=  null)  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	46	None	replace
122	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()!=  null  ||  rawType.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getTargetException()!=  null  ||  rawType.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()!=  null  ||  rawType.getTargetException()  ==  null)  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	46	None	replace
123	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()!=  null  ||  rawType.getTargetException().equals( " "))  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getTargetException()!=  null  ||  rawType.getTargetException().equals( " "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()!=  null  ||  rawType.getTargetException().equals( " "))  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  	46	None	replace
124	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()!=  null  ||  rawType.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getTargetException()!=  null  ||  rawType.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()!=  null  ||  rawType.getTargetException()!=  null)  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	46	None	replace
125	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  IllegalAccessException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  IllegalAccessException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  IllegalAccessException))  {	  }    else    if(e.getTargetException()    ==    null    ||!(e.getTargetException()    instanceof    IllegalAccessException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	75	None	replace
126	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  IllegalAccessException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  IllegalAccessException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  IllegalAccessException))  {	  }    else    if(e.getTargetException()    ==    null    ||!(e.getTargetException()    instanceof    IllegalAccessException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	75	None	replace
127	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  IllegalAccessException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  IllegalAccessException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  IllegalAccessException))  {	  }    else    if(e.getTargetException()    ==    null    ||!(e.getTargetException()    instanceof    IllegalAccessException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	75	None	replace
128	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
129	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
130	[BUG]  [BUGGY]  if(constructor  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(constructor  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(constructor  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
131	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
132	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
133	[BUG]  [BUGGY]  'catch'  without  'try'  [CE]  unclosed  character  literal  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  'catch'  without  'try'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	'catch'  without  'try'	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  unclosed  character  literal	82	None	replace
134	[BUG]  [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
135	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	33	None	replace
136	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	33	None	replace
137	[BUG]  [BUGGY]  }  else  if(instanceCreators!=  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators!=  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators!=  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	33	None	replace
138	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	33	None	replace
139	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	33	None	replace
140	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	33	None	replace
141	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.getTargetException()  ==  null)  {	  }    else    if(rawType.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
142	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  rawType.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  rawType.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  rawType.getTargetException()  ==  null)  {	  }    else    if(rawType.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
143	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()  ==  null  ||  rawType.getTargetException().equals( " "))  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getTargetException()  ==  null  ||  rawType.getTargetException().equals( " "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()  ==  null  ||  rawType.getTargetException().equals( " "))  {	  }    else    if(rawType.getTargetException()    ==    null)    {    	non-compiled	[CE]  	9	None	replace
144	[BUG]  [BUGGY]  }  else  if(e  instanceof  Throwable)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceof  Throwable)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceof  Throwable)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
145	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	98	None	replace
146	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
147	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
148	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	add	}  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  ClassCastException  	98	2	replace
149	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalStateException( " ");  }  [FE]  ClassCastException  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	compilable	  [FE]  ClassCastException  	98	2	replace
150	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
151	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(StringUtils.isNotEmpty(args))  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  args  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(StringUtils.isNotEmpty(args))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {  if(StringUtils.isNotEmpty(args))  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  args	98	None	replace
152	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators!=  null)  {	  }    else    if(instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	2	None	replace
153	[BUG]  [BUGGY]  }  else  if(rawType!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null)  {	  }    else    if(instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	2	None	replace
154	[BUG]  [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.class)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.class)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  UnsafeAllocator.class)  {	  }    else    if(instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	2	None	replace
155	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  ==  null)  {	  }    else    if(e.getTargetException()!=    null    ||    e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	47	None	replace
156	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&  e.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&  e.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  &&  e.getTargetException()  ==  null)  {	  }    else    if(e.getTargetException()!=    null    ||    e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	47	None	replace
157	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()  ==  null)  {	  }    else    if(e.getTargetException()!=    null    ||    e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	47	None	replace
158	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||  e.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  ||  e.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||  e.getTargetException()!=  null)  {	  }    else    if(e.getTargetException()!=    null    ||    e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	47	None	replace
159	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&  e.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&  e.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  &&  e.getTargetException()!=  null)  {	  }    else    if(e.getTargetException()!=    null    ||    e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	47	None	replace
160	[BUG]  [BUGGY]  Constructor  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Constructor  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Constructor  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	108	None	replace
161	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  return  newDefaultConstructor();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	108	None	replace
162	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isInterface())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	108	None	replace
163	[BUG]  [BUGGY]  Constructor  <  T>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Constructor  <  T>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Constructor  <  T>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	108	None	replace
164	[BUG]  [BUGGY]  }  else  if(rawType  ==  Collections.  <  T>emptyMap())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  Collections.  <  T>emptyMap())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  Collections.  <  T>emptyMap())  {	  }    else    if(instanceCreators!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
165	[BUG]  [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.NULL)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.NULL)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  UnsafeAllocator.NULL)  {	  }    else    if(instanceCreators!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
166	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
167	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(constructor.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  constructor  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  if(constructor.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  if(constructor.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  constructor	17	None	replace
168	[BUG]  [BUGGY]  }  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	17	None	replace
169	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
170	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  if(t.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  if(t.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  t)  {  if(t.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
171	[BUG]  [BUGGY]  }  else  if(getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
172	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	84	None	replace
173	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	84	None	replace
174	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	84	None	replace
175	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.isInterface())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.isInterface())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.isInterface())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isInterface())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
176	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.isInterface())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.isInterface())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.isInterface())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isInterface())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
177	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.isInterface())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.isInterface())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators.isInterface())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isInterface())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
178	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  context.isInterface())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  context.isInterface())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  context.isInterface())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isInterface())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
179	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instances.isInterface())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instances.isInterface())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instances.isInterface())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isInterface())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
180	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  method.isInterface())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  method.isInterface())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  method.isInterface())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isInterface())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
181	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  UnsafeAllocator  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	56	None	replace
182	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  UnsafeAllocator  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	56	None	replace
183	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  UnsafeAllocator)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  UnsafeAllocator)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  UnsafeAllocator)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	56	None	replace
184	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	55	None	replace
185	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	55	None	replace
186	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	55	None	replace
187	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (IllegalAccessException  e)  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (IllegalAccessException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (IllegalAccessException  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	55	None	replace
188	[BUG]  [BUGGY]  }  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(constructor    ==    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	94	None	replace
189	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||  constructor.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators  ==  null  ||  constructor.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||  constructor.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(constructor    ==    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	94	None	replace
190	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  ClassCastException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  ClassCastException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  ClassCastException))  {	  }    else    if(e.getTargetException()    ==    null    ||!(e.getTargetException()    instanceof    ClassCastException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	74	None	replace
191	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  ClassCastException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  ClassCastException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  ClassCastException))  {	  }    else    if(e.getTargetException()    ==    null    ||!(e.getTargetException()    instanceof    ClassCastException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	74	None	replace
192	[BUG]  [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  return  null;  }  [CE]  unclosed  character  literal  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  return  null;  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
193	[BUG]  [BUGGY]  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  'try'  without  'catch'  or  'finally'  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
194	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
195	[BUG]  [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally',  return  null;  }  [CE]  unclosed  character  literal  [FE]                                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally',  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally',  return  null;  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
196	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  e  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
197	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
198	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  rawType  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
199	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  e  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  e  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  e  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
200	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
201	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator  <?>)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator  <?>)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator  <?>)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
202	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
203	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
204	[BUG]  [BUGGY]  if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
205	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
206	[BUG]  [BUGGY]  }  else  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
207	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getClass();  if(args  ==  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getClass();  if(args  ==  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getClass();  if(args  ==  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
208	[BUG]  [BUGGY]  }  else  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
209	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.isPrimitive())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	4	None	replace
210	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.isPrimitive())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	4	None	replace
211	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators.isPrimitive())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	4	None	replace
212	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  context.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  context.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  context.isPrimitive())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	4	None	replace
213	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instances.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instances.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instances.isPrimitive())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	4	None	replace
214	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  method.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  method.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  method.isPrimitive())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	4	None	replace
215	[BUG]  [BUGGY]  }  else  if(e  instanceof  Throwable)  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceof  Throwable)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceof  Throwable)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	97	None	replace
216	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType))  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	97	None	replace
217	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	add	}  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    	compilable	  [FE]  ClassCastException  	97	2	replace
218	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  return  null;  }  [FE]  ClassCastException  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    	compilable	  [FE]  ClassCastException  	97	2	replace
219	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
220	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
221	[BUG]  [BUGGY]  if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
222	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
223	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getRawClass();  if(args  ==  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getRawClass();  if(args  ==  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getRawClass();  if(args  ==  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
224	[BUG]  [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
225	[BUG]  [BUGGY]  }  else  if(rawType.getRawClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getRawClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getRawClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
226	[BUG]  [BUGGY]  }  else  if(e  instanceCreators  ==  null  &&!(e  instanceof  Class  <?>))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators  ==  null  &&!(e  instanceof  Class  <?>))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators  ==  null  &&!(e  instanceof  Class  <?>))  {	  }    else    if(e    instanceCreators    ==    null    ||!(e    instanceof    Class    <?>))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
227	[BUG]  [BUGGY]  }  else  if(e  instanceCreators!=  null  ||!(e  instanceof  Class  <?>))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators!=  null  ||!(e  instanceof  Class  <?>))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators!=  null  ||!(e  instanceof  Class  <?>))  {	  }    else    if(e    instanceCreators    ==    null    ||!(e    instanceof    Class    <?>))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
228	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||!(e  instanceof  Class  <?>))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||!(e  instanceof  Class  <?>))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||!(e  instanceof  Class  <?>))  {	  }    else    if(e    instanceCreators    ==    null    ||!(e    instanceof    Class    <?>))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
229	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||!(e  instanceof  Class  <?>))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators  ==  null  ||!(e  instanceof  Class  <?>))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||!(e  instanceof  Class  <?>))  {	  }    else    if(e    instanceCreators    ==    null    ||!(e    instanceof    Class    <?>))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
230	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&  e.getTargetException().equals( " "))  {  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&  e.getTargetException().equals( " "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  &&  e.getTargetException().equals( " "))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  	91	None	replace
231	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||  e.getTargetException().equals( "   "))  {  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  ||  e.getTargetException().equals( "   "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||  e.getTargetException().equals( "   "))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  	91	None	replace
232	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "))  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  	91	None	replace
233	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "null "))  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "null "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "null "))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  	91	None	replace
234	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "* "))  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "* "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "* "))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  	91	None	replace
235	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException().equals( "   "))  {  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException().equals( "   "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||  e.getTargetException().equals( "   "))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  	91	None	replace
236	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
237	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
238	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
239	[BUG]  [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
240	[BUG]  [BUGGY]  if(rawType.getClass()  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
241	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
242	[BUG]  [BUGGY]  }  else  if(rawType  ==  instanceCreators  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  instanceCreators  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  instanceCreators  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators    ==    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	42	None	replace
243	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
244	[BUG]  [BUGGY]  }  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
245	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
246	[BUG]  [BUGGY]  }  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
247	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
248	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instancesCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instancesCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instancesCreators.contains(rawType))  {  return  null;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
249	[BUG]  [BUGGY]  }  else  if(instanceCreators!=  null  ||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators!=  null  ||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators!=  null  ||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	23	None	replace
250	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	23	None	replace
251	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	23	None	replace
252	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
253	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
254	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
255	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
256	[BUG]  [BUGGY]  }  else  if(rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isInterface())  {  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
257	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  ==  unclosed  character  literal  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  ==  unclosed  character  literal  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  ==  unclosed  character  literal	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
258	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'!=  unclosed  character  literal  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'!=  unclosed  character  literal  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'!=  unclosed  character  literal	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
259	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  catch  (IllegalArgumentException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  catch  (IllegalArgumentException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType))  {  catch  (IllegalArgumentException  e)  {	  }    catch    (IllegalArgumentException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	73	None	replace
260	[BUG]  [BUGGY]  }  else  if(e  instanceCreators!=  null)  {  catch  (IllegalArgumentException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators!=  null)  {  catch  (IllegalArgumentException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators!=  null)  {  catch  (IllegalArgumentException  e)  {	  }    catch    (IllegalArgumentException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	73	None	replace
261	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  IllegalArgumentException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  IllegalArgumentException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  IllegalArgumentException)  {	  }    catch    (IllegalArgumentException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	73	None	replace
262	[BUG]  [BUGGY]  }  else  if(e  instanceCreators  ==  null)  {  catch  (IllegalArgumentException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators  ==  null)  {  catch  (IllegalArgumentException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators  ==  null)  {  catch  (IllegalArgumentException  e)  {	  }    catch    (IllegalArgumentException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	73	None	replace
263	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.size()  >  0)  {  catch  (IllegalArgumentException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.size()  >  0)  {  catch  (IllegalArgumentException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.size()  >  0)  {  catch  (IllegalArgumentException  e)  {	  }    catch    (IllegalArgumentException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	73	None	replace
264	[BUG]  [BUGGY]  if(rawType!=  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	109	None	replace
265	[BUG]  [BUGGY]  while(rawType!=  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  while(rawType!=  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	while(rawType!=  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	109	None	replace
266	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isArray())  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	109	None	replace
267	[BUG]  [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  getClass().getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  getClass().getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  for(T[]  args  :  getClass().getArguments())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	109	None	replace
268	[BUG]  [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " "));  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	109	None	replace
269	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
270	[BUG]  [BUGGY]  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
271	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
272	[BUG]  [BUGGY]  if(rawType  instanceof  ClassCastException)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  instanceof  ClassCastException)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  instanceof  ClassCastException)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
273	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
274	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  Class  <?>  rawType  =(Class  <?>)rawType;  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  Class  <?>  rawType  =(Class  <?>)rawType;  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  instanceof  Class  <?>)  {  Class  <?>  rawType  =(Class  <?>)rawType;  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
275	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  instanceof  Class  <?>)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
276	[BUG]  [BUGGY]  }  else  if(e  instanceof  Throwable)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceof  Throwable)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceof  Throwable)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
277	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  class,  interface,  or  enum  expected  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
278	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
279	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
280	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  Throwable)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  Throwable)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  Throwable)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
281	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	add	}  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ClassCastException  	96	2	replace
282	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ClassCastException  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {  if(Throwable.class.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ClassCastException  	96	2	replace
283	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
284	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
285	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
286	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
287	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getClass();  if(args  ==  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getClass();  if(args  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getClass();  if(args  ==  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
288	[BUG]  [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
289	[BUG]  [BUGGY]  if(rawType.getClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
290	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  t)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	add	}  catch(Exception  t)  {	  }    catch(Throwable    t)    {    	compilable	  [FE]  ClassCastException  	32	2	replace
291	[BUG]  [BUGGY]  }  catch(Exception  t)  {  [FE]  ClassCastException  [FE]    ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  t)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  t)  {	  }    catch(Throwable    t)    {    	compilable	  [FE]  ClassCastException  	32	2	replace
292	[BUG]  [BUGGY]  }  catch(RuntimeException  t)  {  [CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown  [FE]      ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(RuntimeException  t)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(RuntimeException  t)  {	  }    catch(Throwable    t)    {    	non-compiled	[CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown	32	None	replace
293	[BUG]  [BUGGY]  }  catch(ClassCastException  t)  {  [CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown  [FE]        ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(ClassCastException  t)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(ClassCastException  t)  {	  }    catch(Throwable    t)    {    	non-compiled	[CE]  unreported  exception  NoSuchMethodException;  must  be  caught  or  declared  to  be  thrown	32	None	replace
294	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ||  rawType  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator  ||  rawType  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  UnsafeAllocator  ||  rawType  instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	68	None	replace
295	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  UnsafeAllocator)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	68	None	replace
296	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?>)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?>)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?>)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	68	None	replace
297	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  extends  T>)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  extends  T>)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  extends  T>)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	68	None	replace
298	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null  ||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null    ||    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	51	None	replace
299	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isFunction())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isFunction())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isFunction())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null    ||    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	51	None	replace
300	[BUG]  [BUGGY]  ||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  ||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null    ||    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
301	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&  e.getTargetException()  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&  e.getTargetException()  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  &&  e.getTargetException()  instanceof  ClassCastException)  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException()    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	92	None	replace
302	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||  e.getTargetException()  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  ||  e.getTargetException()  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||  e.getTargetException()  instanceof  ClassCastException)  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException()    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	92	None	replace
303	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()  instanceof  ClassCastException)  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException()    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	92	None	replace
304	[BUG]  [BUGGY]  }  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException)  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException()    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	92	None	replace
305	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException  ||  e.getTargetException()  instanceof  UnknownClassException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException  ||  e.getTargetException()  instanceof  UnknownClassException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException  ||  e.getTargetException()  instanceof  UnknownClassException)  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException()    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	92	None	replace
306	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException  ||  e.getTargetException()  instanceof  IllegalAccessException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException  ||  e.getTargetException()  instanceof  IllegalAccessException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException  ||  e.getTargetException()  instanceof  IllegalAccessException)  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException()    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	92	None	replace
307	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException()!=  null)  {	  }    else    if(e.getTargetException()    ==    null    ||    e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	7	None	replace
308	[BUG]  [BUGGY]  }  else  if(e.getCatchException()  ==  null  ||  e.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getCatchException()  ==  null  ||  e.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getCatchException()  ==  null  ||  e.getTargetException()!=  null)  {	  }    else    if(e.getTargetException()    ==    null    ||    e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	7	None	replace
309	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
310	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
311	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
312	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
313	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
314	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
315	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
316	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
317	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
318	[BUG]  [BUGGY]  if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
319	[BUG]  [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
320	[BUG]  [BUGGY]  if(rawType.getClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
321	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args  ==  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args  ==  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
322	[BUG]  [BUGGY]  }  else  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
323	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch(Exception  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch(Exception  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch(Exception  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	21	None	replace
324	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	21	None	replace
325	[BUG]  [BUGGY]  }  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	21	None	replace
326	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  &&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  &&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  &&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType!=    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	85	None	replace
327	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {	  }    else    if(rawType!=    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	85	None	replace
328	[BUG]  [BUGGY]  }  else  if(rawType!=  null  &&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  &&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  &&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType!=    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	85	None	replace
329	[BUG]  [BUGGY]  }  else  if(catch.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(catch.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(catch.getTargetException()  ==  null)  {	  }    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
330	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!constructor.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!constructor.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!constructor.isAssignableFrom(rawType))  {	  }    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
331	[BUG]  [BUGGY]  }  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
332	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
333	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
334	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
335	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instancesCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instancesCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instancesCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
336	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
337	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
338	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
339	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
340	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
341	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
342	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
343	[BUG]  [BUGGY]  }  catch(NoSuchMethodException  e)  {  throw  new  IllegalArgumentException( " ");  [CE]  unreachable  statement  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(NoSuchMethodException  e)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(NoSuchMethodException  e)  {  throw  new  IllegalArgumentException( " ");	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	19	None	replace
344	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  ClassCastException)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	19	None	replace
345	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.size()  >  0)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.size()  >  0)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.size()  >  0)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	19	None	replace
346	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	19	None	replace
347	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  ClassCastException)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	19	None	replace
348	[BUG]  [BUGGY]  }  else  if(e  instanceof  Throwable)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceof  Throwable)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceof  Throwable)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	19	None	replace
349	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {	  }    else    if(e.getTargetException()!=    null    ||!(e.getTargetException()    instanceof    UnknownTypeException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	93	None	replace
350	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {	  }    else    if(e.getTargetException()!=    null    ||!(e.getTargetException()    instanceof    UnknownTypeException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	93	None	replace
351	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  e  instanceof  ClassCastException)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
352	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
353	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  e  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  e  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  e  instanceof  ClassCastException)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
354	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  e  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  e  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||  e  instanceof  ClassCastException)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
355	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
356	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  e  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  e  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||  e  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
357	[BUG]  [BUGGY]  }  else  if(constructor.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	45	None	replace
358	[BUG]  [BUGGY]  }  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	45	None	replace
359	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	45	None	replace
360	[BUG]  [BUGGY]  }  catch(Exception  e)  {  }  catch(Exception  e)  {  [CE]  exception  Exception  has  already  been  caught  [FE]    ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  }  catch(Exception  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    }  catch(Exception  e)  {	  	non-compiled	[CE]  exception  Exception  has  already  been  caught	26	None	add
361	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]      ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
362	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]        ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
363	[BUG]  [BUGGY]  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]          ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    throw  new  IllegalArgumentException( " ");	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	26	None	add
364	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  cannot  find  symbol  [FE]            ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e.getTargetException()!=  null)  {  throw  new  IllegalAccessException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
365	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  cannot  find  symbol  [FE]              ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e.getTargetException()  ==  null)  {  throw  new  IllegalAccessException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
366	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  return  null;  }  [CE]  cannot  find  symbol  [FE]                ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e.getTargetException()!=  null)  {  return  null;  }	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
367	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  throw  new  RuntimeException( " ");  }  [CE]  cannot  find  symbol  [FE]                  ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  throw  new  RuntimeException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e.getTargetException()!=  null)  {  throw  new  RuntimeException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
368	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
369	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
370	[BUG]  [BUGGY]  if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(constructor  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
371	[BUG]  [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
372	[BUG]  [BUGGY]  Class  <?>[]  args  =  rawType.getRawClass();  if(args  ==  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  args  =  rawType.getRawClass();  if(args  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  args  =  rawType.getRawClass();  if(args  ==  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
373	[BUG]  [BUGGY]  if(rawType.getClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
374	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  &&  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  &&  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  &&  instanceCreators.contains(rawType))  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	72	None	replace
375	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	72	None	replace
376	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instances.contains(rawType))  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	72	None	replace
377	[BUG]  [BUGGY]  if(args!=  null  ||  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args!=  null  ||  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args!=  null  ||  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	107	None	replace
378	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	107	None	replace
379	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	107	None	replace
380	[BUG]  [BUGGY]  if(rawType  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	107	None	replace
381	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	107	None	replace
382	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length  <  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  <  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	107	None	replace
383	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isStatic())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isStatic())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isStatic())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
384	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isUnknownType())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
385	[BUG]  [BUGGY]  if(!rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(!rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(!rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
386	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isSimpleName())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isSimpleName())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isSimpleName())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
387	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFunction())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFunction())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isFunction())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
388	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	41	None	replace
389	[BUG]  [BUGGY]  }  else  if(constructor.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	41	None	replace
390	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch(Exception  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch(Exception  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch(Exception  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	41	None	replace
391	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	41	None	replace
392	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
393	[BUG]  [BUGGY]  }  else  if(constructor.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
394	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(e))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(e))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(e))  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
395	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
396	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
397	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.isArray())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.isArray())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.isArray())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isArray())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	65	None	replace
398	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.isArray())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.isArray())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.isArray())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isArray())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	65	None	replace
399	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.isArray())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.isArray())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators.isArray())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isArray())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	65	None	replace
400	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instances.isArray())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instances.isArray())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instances.isArray())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isArray())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	65	None	replace
401	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  context.isArray())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  context.isArray())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  context.isArray())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isArray())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	65	None	replace
402	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  ClassCastException)  {	  }    catch(ClassCastException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	29	None	replace
403	[BUG]  [BUGGY]  }  else  if(e  instanceof  Throwable)  {  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceof  Throwable)  {  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceof  Throwable)  {  catch(Throwable  e)  {	  }    catch(Throwable    e)    {    }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
404	[BUG]  [BUGGY]  }  if(e  instanceof  Throwable)  {  }  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(e  instanceof  Throwable)  {  }  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e  instanceof  Throwable)  {  }  catch(Throwable  e)  {	  }    catch(Throwable    e)    {    }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
405	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  Throwable)  {  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  Throwable)  {  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  Throwable)  {  catch(Throwable  e)  {	  }    catch(Throwable    e)    {    }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
406	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {	  }    catch(Throwable    e)    {    }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
407	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  catch(Throwable  e)  {	  }    catch(Throwable    e)    {    }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
408	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instancesCreators  ==  null)  {	  }    else    if(rawType    ==    null    ||    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
409	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators  ==  null  ||  rawType  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||  rawType  ==  null)  {	  }    else    if(rawType    ==    null    ||    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
410	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators  ==  null)  {	  }    else    if(rawType    ==    null    ||    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
411	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  context.instanceCreators  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  context.instanceCreators  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  context.instanceCreators  ==  null)  {	  }    else    if(rawType    ==    null    ||    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
412	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  ConstructorException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  ConstructorException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  &&!(e.getTargetException()  instanceof  ConstructorException))  {	  }    else    if(e.getTargetException()    ==    null    ||!(e.getTargetException()    instanceof    ConstructorException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	103	None	replace
413	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  ConstructorException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  ConstructorException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  ConstructorException))  {	  }    else    if(e.getTargetException()    ==    null    ||!(e.getTargetException()    instanceof    ConstructorException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	103	None	replace
414	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  ConstructorException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  ConstructorException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||!(e.getTargetException()  instanceof  ConstructorException))  {	  }    else    if(e.getTargetException()    ==    null    ||!(e.getTargetException()    instanceof    ConstructorException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	103	None	replace
415	[BUG]  [BUGGY]  }  else  if(constructor.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
416	[BUG]  [BUGGY]  }  else  if(rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
417	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch(Exception  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch(Exception  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch(Exception  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	67	None	replace
418	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	67	None	replace
419	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	67	None	replace
420	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch(Throwable  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	67	None	replace
421	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	111	None	replace
422	[BUG]  [BUGGY]  Constructor  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Constructor  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Constructor  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	111	None	replace
423	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	111	None	replace
424	[BUG]  [BUGGY]  if(rawType.isArray())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isArray())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isArray())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	111	None	replace
425	[BUG]  [BUGGY]  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
426	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	38	None	replace
427	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator)  {  if(!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator)  {  if(!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  UnsafeAllocator)  {  if(!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	38	None	replace
428	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	38	None	replace
429	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	38	None	replace
430	[BUG]  [BUGGY]  if(args!=  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args!=  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args!=  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	110	None	replace
431	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length!=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length!=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length!=  0)  {  throw  new  IllegalStateException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	110	None	replace
432	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  >=  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length  >=  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  >=  0)  {  throw  new  IllegalStateException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	110	None	replace
433	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	110	None	replace
434	[BUG]  [BUGGY]  if(rawType  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	110	None	replace
435	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  ==  1)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length  ==  1)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  ==  1)  {  throw  new  IllegalStateException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	110	None	replace
436	[BUG]  [BUGGY]  }  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	35	None	replace
437	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	35	None	replace
438	[BUG]  [BUGGY]  }  else  if(constructor.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	35	None	replace
439	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	71	None	replace
440	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  catch(Exception  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  catch(Exception  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  catch(Exception  e)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	71	None	replace
441	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	71	None	replace
442	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
443	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
444	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instances.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
445	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  &&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  &&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  &&  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
446	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.containsKey(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.containsKey(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.containsKey(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
447	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(e))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(e))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(e))  {	  }    else    if(e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	77	None	replace
448	[BUG]  [BUGGY]  }  else  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators!=  null  ||  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	77	None	replace
449	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	77	None	replace
450	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  return  this;  [CE]  incompatible  types  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  return  this;  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  return  this;	  }    catch(Throwable    e)    {    return    null;    	non-compiled	[CE]  incompatible  types	95	None	replace
451	[BUG]  [BUGGY]  }  catch(NoSuchMethodException  e)  {  return  null;  [CE]  unreachable  statement  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(NoSuchMethodException  e)  {  return  null;  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(NoSuchMethodException  e)  {  return  null;	  }    catch(Throwable    e)    {    return    null;    	non-compiled	[CE]  unreachable  statement	95	None	replace
452	[BUG]  [BUGGY]  }  catch(Exception  e)  {  return  null;  [CE]  unreachable  statement  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  return  null;  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {  return  null;	  }    catch(Throwable    e)    {    return    null;    	non-compiled	[CE]  unreachable  statement	95	None	replace
453	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	69	None	replace
454	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  rawType  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  rawType  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||  rawType  instanceof  UnsafeAllocator)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	69	None	replace
455	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.isAssignableFrom(rawType))  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	64	None	replace
456	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.isAssignableFrom(rawType))  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	64	None	replace
457	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isAssignableFrom(instanceCreators))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isAssignableFrom(instanceCreators))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isAssignableFrom(instanceCreators))  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	64	None	replace
458	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instances.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instances.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instances.isAssignableFrom(rawType))  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	64	None	replace
459	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators.isAssignableFrom(rawType))  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	64	None	replace
460	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  context.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  context.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  context.isAssignableFrom(rawType))  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	64	None	replace
461	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  &&  e  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  &&  e  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  &&  e  instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
462	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||!instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||!instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||!instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
463	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  &&  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  &&  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  &&  instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
464	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||!constructor.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||!constructor.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||!constructor.contains(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
465	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  args.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  args.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||  args.contains(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
466	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  e  instanceCreators.contains(rawType)&&!instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  e  instanceCreators.contains(rawType)&&!instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||  e  instanceCreators.contains(rawType)&&!instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
467	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  ||!null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  ||!null)  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
468	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!NoSuchMethodException.class)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!NoSuchMethodException.class)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!NoSuchMethodException.class)  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
469	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!instanceCreators.contains(e.getTargetException()))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!instanceCreators.contains(e.getTargetException()))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!instanceCreators.contains(e.getTargetException()))  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
470	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!constructor)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!constructor)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!constructor)  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
471	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!instanceCreators.isEmpty())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!instanceCreators.isEmpty())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!instanceCreators.isEmpty())  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
472	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!instanceCreators.contains(rawType))  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
473	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(constructor.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  constructor  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  if(constructor.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  if(constructor.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  constructor	15	None	replace
474	[BUG]  [BUGGY]  }  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	15	None	replace
475	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  if(t.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  if(t.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  t)  {  if(t.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
476	[BUG]  [BUGGY]  }  catch(Exception  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {  Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)	79	None	replace
477	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  t)  {  Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)	79	None	replace
478	[BUG]  [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	79	None	replace
479	[BUG]  [BUGGY]  }  else  if(e  instanceof  Throwable)  {  Class  <?>  rawType  =(Throwable)e;  if(rawType.getRawClass()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceof  Throwable)  {  Class  <?>  rawType  =(Throwable)e;  if(rawType.getRawClass()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceof  Throwable)  {  Class  <?>  rawType  =(Throwable)e;  if(rawType.getRawClass()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  	79	None	replace
480	[BUG]  [BUGGY]  }  else  if(e  instanceof  Throwable)  {  Class  <?>  rawType  =(Throwable)e;  if(rawType.getRawClass()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceof  Throwable)  {  Class  <?>  rawType  =(Throwable)e;  if(rawType.getRawClass()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceof  Throwable)  {  Class  <?>  rawType  =(Throwable)e;  if(rawType.getRawClass()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  	79	None	replace
481	[BUG]  [BUGGY]  }  else  if(rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  	79	None	replace
482	[BUG]  [BUGGY]  if(rawType!=  null)  {  throw  new  IllegalAccessException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  throw  new  IllegalAccessException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	62	None	replace
483	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  throw  new  IllegalAccessException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  throw  new  IllegalAccessException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	62	None	replace
484	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  throw  new  IllegalAccessException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isArray())  {  throw  new  IllegalAccessException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	62	None	replace
485	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  throw  new  IllegalAccessException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isInterface())  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isInterface())  {  throw  new  IllegalAccessException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	62	None	replace
486	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalAccessException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalAccessException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalAccessException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalAccessException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	62	None	replace
487	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isPrimitive())  {	  }    else    if(rawType    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	replace
488	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {	  }    else    if(rawType    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	replace
489	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isArray())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isArray())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isArray())  {	  }    else    if(rawType    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	replace
490	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isInterface())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isInterface())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isInterface())  {	  }    else    if(rawType    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	replace
491	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isConstructor())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isConstructor())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isConstructor())  {	  }    else    if(rawType    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	replace
492	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isInstanceType())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isInstanceType())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isInstanceType())  {	  }    else    if(rawType    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	replace
493	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
494	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
495	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
496	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  rawType.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  rawType.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  rawType.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
497	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isPrimitive())  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isPrimitive())  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isPrimitive())  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
498	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType!=    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	85	None	replace
499	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType!=    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	85	None	replace
500	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()!=  null)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getTargetException()!=  null)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()!=  null)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	15	None	replace
501	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(constructor.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  constructor  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(constructor.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {  if(constructor.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  constructor	15	None	replace
502	[BUG]  [BUGGY]  }  catch(NoSuchMethodException  e)  {  if(constructor.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  constructor  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(NoSuchMethodException  e)  {  if(constructor.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(NoSuchMethodException  e)  {  if(constructor.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  constructor	15	None	replace
503	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    return    null;    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	95	None	replace
504	[BUG]  [BUGGY]  catch(Throwable  e)  {  return  this;  }  [CE]  'catch'  without  'try'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  catch(Throwable  e)  {  return  this;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	catch(Throwable  e)  {  return  this;  }	  }    catch(Throwable    e)    {    return    null;    	non-compiled	[CE]  'catch'  without  'try'	95	None	replace
505	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	19	None	replace
506	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	19	None	replace
507	[BUG]  [BUGGY]  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	catch(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	19	None	replace
508	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()  >=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()  >=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||  e.getTargetException()  >=  null)  {	  }    else    if(e.getTargetException()!=    null    ||    e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	47	None	replace
509	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
510	[BUG]  [BUGGY]  }  else  if(rawType.getClass()!=  rawType.getClass())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getClass()!=  rawType.getClass())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getClass()!=  rawType.getClass())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
511	[BUG]  [BUGGY]  if(rawType.getClass()!=  rawType.getClass())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  nu  [CE]  'catch'  without  'try'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()!=  rawType.getClass())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  nu  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()!=  rawType.getClass())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  nu	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	14	None	replace
512	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
513	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
514	[BUG]  [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".getClass());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".getClass());  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".getClass());  }	  if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	60	None	replace
515	[BUG]  [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".class);  }  [CE]  <identifier>  expected  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".class);  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".class);  }	  if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
516	[BUG]  [BUGGY]  Class  <?  super>  rawType  =  rawType.getSuperclass();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?  super>  rawType  =  rawType.getSuperclass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?  super>  rawType  =  rawType.getSuperclass();	  if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
517	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
518	[BUG]  [BUGGY]  }  else  if(rawType.isAssignableFrom(e)&&  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isAssignableFrom(e)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isAssignableFrom(e)&&  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
519	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	35	None	replace
520	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.getClass()!=  getClass())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.getClass()!=  getClass())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.getClass()!=  getClass())  {	  }    else    if(rawType    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	replace
521	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isUnknownType())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isUnknownType())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isUnknownType())  {	  }    else    if(rawType    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	replace
522	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]    ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  	non-compiled	[CE]  ')'  expected	26	None	add
523	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass().getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]      ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass().getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass().getRawClass();  if(rawType!=  null)  {  return  null;  }	  	non-compiled	[CE]  ')'  expected	26	None	add
524	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]        ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getRawClass();  if(rawType!=  null)  {  return  null;  }	  	non-compiled	[CE]  ')'  expected	26	None	add
525	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators!=  null)  {  Class  <?>  rawType  =  getClass();  if(rawType  ==  null)  {  return  null;  }  [CE]  ')'  expected  [FE]          ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators!=  null)  {  Class  <?>  rawType  =  getClass();  if(rawType  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e  instanceCreators!=  null)  {  Class  <?>  rawType  =  getClass();  if(rawType  ==  null)  {  return  null;  }	  	non-compiled	[CE]  ')'  expected	26	None	add
526	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators!=  null)  {  Class  <?>  rawType  =  getClass().getRawClass();  if(rawType  ==  null)  {  return  null;  }  [CE]  ')'  expected  [FE]            ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators!=  null)  {  Class  <?>  rawType  =  getClass().getRawClass();  if(rawType  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e  instanceCreators!=  null)  {  Class  <?>  rawType  =  getClass().getRawClass();  if(rawType  ==  null)  {  return  null;  }	  	non-compiled	[CE]  ')'  expected	26	None	add
527	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?  super>[]  args  =  e.getClass();  if(args!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]              ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators  ==  null)  {  Class  <?  super>[]  args  =  e.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e  instanceCreators  ==  null)  {  Class  <?  super>[]  args  =  e.getClass();  if(args!=  null)  {  return  null;  }	  	non-compiled	[CE]  ')'  expected	26	None	add
528	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators!=  null)  {  Class  <?>  rawType  =  getClass().getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e  instanceCreators!=  null)  {  Class  <?>  rawType  =  getClass().getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e  instanceCreators!=  null)  {  Class  <?>  rawType  =  getClass().getRawClass();  if(rawType!=  null)  {  return  null;  }	  	non-compiled	[CE]  ')'  expected	26	None	add
529	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	69	None	replace
530	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	69	None	replace
531	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators  ==  Collections.emptyMap())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators  ==  Collections.emptyMap())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators  ==  Collections.emptyMap())  {	  }    else    if(instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	2	None	replace
532	[BUG]  [BUGGY]  }  if(rawType  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null)  {	  }    else    if(instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	2	None	replace
533	[BUG]  [BUGGY]  }  else  if(rawType  ==  Collections.  <  Class  <?  extends  T>emptyMap())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  Collections.  <  Class  <?  extends  T>emptyMap())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  Collections.  <  Class  <?  extends  T>emptyMap())  {	  }    else    if(instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	2	None	replace
534	[BUG]  [BUGGY]  }  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(constructor    ==    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	94	None	replace
535	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals(rawType))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	91	None	replace
536	[BUG]  [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  >=?>))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  >=?>))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  >=?>))  {	  }    else    if(e    instanceCreators    ==    null    ||!(e    instanceof    Class    <?>))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
537	[BUG]  [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>)&&  rawType!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>)&&  rawType!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>)&&  rawType!=  null)  {	  }    else    if(e    instanceCreators    ==    null    ||!(e    instanceof    Class    <?>))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
538	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
539	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super>)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super>)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  super>)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
540	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  super)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
541	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	57	None	replace
542	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(Throwable  e)  {  return  null;  }  [CE]  ')'  expected  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  ')'  expected	99	None	replace
543	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
544	[BUG]  [BUGGY]  }  if(rawType  ==  null)  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
545	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(Throwable  e)  {  return  null;  }  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  ')'  expected	99	None	replace
546	[BUG]  [BUGGY]  }  else  if(rawType!=  null)  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
547	[BUG]  [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  Class  <?>)e.getTargetException()).isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  Class  <?>)e.getTargetException()).isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  Class  <?>)e.getTargetException()).isAssignableFrom(rawType))  {	  }    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	10	None	replace
548	[BUG]  [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  ClassCastException)e).isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  ClassCastException)e).isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  ClassCastException)e).isAssignableFrom(rawType))  {	  }    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	10	None	replace
549	[BUG]  [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  ClassCastException)e).class.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  ClassCastException)e).class.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  ClassCastException)e).class.isAssignableFrom(rawType))  {	  }    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	10	None	replace
550	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
551	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
552	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
553	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args  ==  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args  ==  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
554	[BUG]  [BUGGY]  }  else  if(instanceCreators.containsKey(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.containsKey(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.containsKey(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	45	None	replace
555	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException  ||  e.getTargetException()  instanceof  UnknownTypeException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException  ||  e.getTargetException()  instanceof  UnknownTypeException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException()  instanceof  ClassCastException  ||  e.getTargetException()  instanceof  UnknownTypeException)  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException()    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	92	None	replace
556	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	111	None	replace
557	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	111	None	replace
558	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	111	None	replace
559	[BUG]  [BUGGY]  }  if(rawType  ==  null)  {  }  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null)  {  }  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null)  {  }  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
560	[BUG]  [BUGGY]  }  else  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null)  {  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
561	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
562	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  	24	None	replace
563	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ");  }	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  	24	None	replace
564	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!instanceCreators)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!instanceCreators)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!instanceCreators)  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
565	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!isUnknownType())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!isUnknownType())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!isUnknownType())  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
566	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
567	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
568	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
569	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
570	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instancesCreators!=  null)  {	  }    else    if(instanceCreators!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
571	[BUG]  [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  throw  new  IllegalStateException( " ".getMessage());  }	  if(rawType    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	59	None	replace
572	[BUG]  [BUGGY]  if(rawType  ==  null)  {  'try'  with  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  'try'  with  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  'try'  with  'catch'  or  'finally';  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
573	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  character  literal  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
574	[BUG]  [BUGGY]  if(rawType  ==  null)  {  'try'  with  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  unclosed  character  literal  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  'try'  with  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  'try'  with  'catch'  or  'finally';  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
575	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(constructor.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  constructor  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(constructor.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Exception  e)  {  if(constructor.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  constructor	17	None	replace
576	[BUG]  [BUGGY]  }  else  if(args.length  ==  0)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(args.length  ==  0)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(args.length  ==  0)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
577	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	34	None	replace
578	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	34	None	replace
579	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	34	None	replace
580	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	55	None	replace
581	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  super  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	38	None	replace
582	[BUG]  [BUGGY]  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	38	None	replace
583	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	38	None	replace
584	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  catch  (IllegalArgumentException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  catch  (IllegalArgumentException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  catch  (IllegalArgumentException  e)  {	  }    catch    (IllegalArgumentException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	73	None	replace
585	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.containsKey(args[0]))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.containsKey(args[0]))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.containsKey(args[0]))  {	  }    catch    (IllegalArgumentException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	73	None	replace
586	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
587	[BUG]  [BUGGY]  }  catch(ClassCastException  e)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(ClassCastException  e)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(ClassCastException  e)  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
588	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType))  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
589	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.containsKey(args[0]))  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.containsKey(args[0]))  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.containsKey(args[0]))  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
590	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  <  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length  <  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  <  2)  {  throw  new  IllegalStateException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	110	None	replace
591	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  rawType.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  rawType.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  rawType.getTargetException()  ==  null)  {	  }    else    if(rawType.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
592	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getTargetException()  ==  null  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()  ==  null  ||  rawType.isAssignableFrom(rawType))  {	  }    else    if(rawType.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
593	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
594	[BUG]  [BUGGY]  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	16	None	replace
595	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
596	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
597	[BUG]  [BUGGY]  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  nu  [CE]  'catch'  without  'try'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  nu  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  nu	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	16	None	replace
598	[BUG]  [BUGGY]  if(rawType  ==  null)  {  'try'  with  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  'try'  with  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  'try'  with  'catch'  or  'finally'	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
599	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally'	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
600	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
601	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
602	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
603	[BUG]  [BUGGY]  }  else  if(rawType.contains(rawType)||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.contains(rawType)||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.contains(rawType)||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
604	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	43	None	replace
605	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  rawType  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  rawType  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  rawType  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	43	None	replace
606	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.containsKey(rawType))  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.containsKey(rawType))  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.containsKey(rawType))  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	97	None	replace
607	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	23	None	replace
608	[BUG]  [BUGGY]  }  if(!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	23	None	replace
609	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {	  }    else    if(!instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	23	None	replace
610	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)&&!instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	23	None	replace
611	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isEmpty())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null    ||    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	51	None	replace
612	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null  ||  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null  ||  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null    ||    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	51	None	replace
613	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	67	None	replace
614	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instancesCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	67	None	replace
615	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  super>)  {  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
616	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
617	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super>)  {  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super>)  {  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  super>)  {  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
618	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
619	[BUG]  [BUGGY]  if(rawType!=  null)  {  Object[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Object[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Object[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
620	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
621	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args  ==  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args  ==  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args  ==  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
622	[BUG]  [BUGGY]  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	109	None	replace
623	[BUG]  [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( ". ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	109	None	replace
624	[BUG]  [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ".class);  }  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ".class);  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ".class);  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
625	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
626	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super  T>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super  T>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  super  T>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
627	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
628	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
629	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType))  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
630	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.containsKey(args[0]))  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.containsKey(args[0]))  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.containsKey(args[0]))  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
631	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.containsKey(rawType))  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.containsKey(rawType))  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.containsKey(rawType))  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
632	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
633	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
634	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	41	None	replace
635	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	41	None	replace
636	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	56	None	replace
637	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	56	None	replace
638	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	56	None	replace
639	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	56	None	replace
640	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||  instanceCreators  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||  instanceCreators  ==  null)  {	  }    else    if(rawType    ==    null    ||    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
641	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  nu  [CE]  'catch'  without  'try'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  nu  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  nu	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	80	None	replace
642	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  [CE]  'catch'  without  'try'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	80	None	replace
643	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
644	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.length  ==  0)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.length  ==  0)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.length  ==  0)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
645	[BUG]  [BUGGY]  }  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType!=  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	106	None	replace
646	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " "));  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
647	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
648	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
649	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
650	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators  ==  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
651	[BUG]  [BUGGY]  }  if(!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(!instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
652	[BUG]  [BUGGY]  }  else  if(!instanceCreators.containsKey(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.containsKey(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.containsKey(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	44	None	replace
653	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
654	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	78	None	replace
655	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  }  [CE]  'catch'  without  'try'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	78	None	replace
656	[BUG]  [BUGGY]  if(rawType.getClass()!=  rawType.getClass())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()!=  rawType.getClass())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()!=  rawType.getClass())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	78	None	replace
657	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  nu  [CE]  'catch'  without  'try'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  nu  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  nu	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	78	None	replace
658	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.containsKey(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.containsKey(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.containsKey(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	84	None	replace
659	[BUG]  [BUGGY]  'tries'  without  'catch'  or  'finally';  [CE]  unclosed  character  literal  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  'tries'  without  'catch'  or  'finally';  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	'tries'  without  'catch'  or  'finally';	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
660	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
661	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
662	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
663	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
664	[BUG]  [BUGGY]  catch(Throwable  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  }  [CE]  'catch'  without  'try'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  catch(Throwable  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	catch(Throwable  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  }	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  'catch'  without  'try'	79	None	replace
665	[BUG]  [BUGGY]  }  else  if(rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	79	None	replace
666	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	79	None	replace
667	[BUG]  [BUGGY]  }  else  if(rawType.getRawClass()  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getRawClass()  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getRawClass()  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	79	None	replace
668	[BUG]  [BUGGY]  catch(Throwable  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  'catch'  without  'try'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  catch(Throwable  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	catch(Throwable  e)  {  Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  'catch'  without  'try'	79	None	replace
669	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  if(t!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]    ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  if(t!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    if(t!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	31	None	add
670	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  Class  <?>  rawType  =  rawType.getClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)  [FE]      ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  Class  <?>  rawType  =  rawType.getClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    Class  <?>  rawType  =  rawType.getClass();	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)	31	None	add
671	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
672	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
673	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFinal())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFinal())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isFinal())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
674	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
675	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
676	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
677	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFinal())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFinal())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isFinal())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
678	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
679	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
680	[BUG]  [BUGGY]  if(rawType!=  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
681	[BUG]  [BUGGY]  if(rawType  ==  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  }  [CE]  ')'  expected  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
682	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	83	None	replace
683	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [CE]  ')'  expected  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  instanceof  Class  <?>)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
684	[BUG]  [BUGGY]  }  else  if(t  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]    ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(t  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(t  instanceof  ClassCastException)  {	  }    catch(Throwable    t)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	32	None	replace
685	[BUG]  [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!(e.getTargetException()  instanceof  ClassCastException))  {	  }    if(e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	8	None	replace
686	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.containsKey(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.containsKey(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.containsKey(rawType))  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	72	None	replace
687	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	108	None	replace
688	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType))  {  catch(Throwable  e)  {	  }    catch(Throwable    e)    {    }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
689	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.containsKey(args[0]))  {  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.containsKey(args[0]))  {  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.containsKey(args[0]))  {  catch(Throwable  e)  {	  }    catch(Throwable    e)    {    }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
690	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.size()  >  0)  {  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.size()  >  0)  {  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.size()  >  0)  {  catch(Throwable  e)  {	  }    catch(Throwable    e)    {    }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
691	[BUG]  [BUGGY]  }  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	71	None	replace
692	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
693	[BUG]  [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
694	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFinal())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isFinal())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isFinal())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
695	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isInterface())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
696	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType!=  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
697	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'catch'  without  'try'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	18	None	replace
698	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
699	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  }  [CE]  'catch'  without  'try'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	18	None	replace
700	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  nu  [CE]  'catch'  without  'try'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  nu  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  catch(Throwable  e)  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  nu	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'catch'  without  'try'	18	None	replace
701	[BUG]  [BUGGY]  }  else  if(rawType!=  null  ||  rawType.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  ||  rawType.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  ||  rawType.getTargetException()!=  null)  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	46	None	replace
702	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	100	None	replace
703	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	100	None	replace
704	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType))  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType))  {  catch(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	100	None	replace
705	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
706	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
707	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isUnsafe())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isUnsafe())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isUnsafe())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
708	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isEmpty())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isEmpty())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  rawType.isEmpty())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
709	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalStateException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalStateException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalStateException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceof    Class    <?>)    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	58	None	replace
710	[BUG]  [BUGGY]  }  if(rawType  ==  null)  {  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null)  {  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null)  {  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceof    Class    <?>)    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	58	None	replace
711	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?  super>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?  super>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
712	[BUG]  [BUGGY]  }  else  if(rawType.isAssignableFrom(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isAssignableFrom(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isAssignableFrom(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
713	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  this;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  this;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  this;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
714	[BUG]  [BUGGY]  }  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(rawType  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	33	None	replace
715	[BUG]  [BUGGY]  }  else  if(!instanceCreators.containsKey(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.containsKey(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.containsKey(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	33	None	replace
716	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
717	[BUG]  [BUGGY]  }  else  if(rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
718	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  &&!instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  &&!instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  &&!instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
719	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  ObjectUtilities.isFunction(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  ObjectUtilities.isFunction(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||  ObjectUtilities.isFunction(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
720	[BUG]  [BUGGY]  }  else  if(result  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(result  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(result  ==  null)  {	  }    else    if(e    instanceCreators!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	101	None	replace
721	[BUG]  [BUGGY]  }  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(instanceCreators  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	21	None	replace
722	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	21	None	replace
723	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  rawType.isAssignableFrom(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
724	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType)&&  rawType.isPrimitive())  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	105	None	replace
725	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isArray())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isArray())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  rawType.isArray())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	105	None	replace
726	[BUG]  [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  Class  <  T>)e.getTargetException()).isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  Class  <  T>)e.getTargetException()).isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!(e.getTargetException()  instanceof  ClassCastException)&&((  Class  <  T>)e.getTargetException()).isAssignableFrom(rawType))  {	  }    if(e.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	10	None	replace
727	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  Class  <?>)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  Class  <?>)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  Class  <?>)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
728	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator  <  Object>)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator  <  Object>)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  UnsafeAllocator  <  Object>)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	22	None	replace
729	[BUG]  [BUGGY]  if(rawType.getRawClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getRawClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getRawClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
730	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
731	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
732	[BUG]  [BUGGY]  if(rawType.getRawClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getRawClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getRawClass()  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	14	None	replace
733	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  >=  null  &&  e.getTargetException()  instanceof  ClassCastException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  >=  null  &&  e.getTargetException()  instanceof  ClassCastException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  >=  null  &&  e.getTargetException()  instanceof  ClassCastException)  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException()    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	92	None	replace
734	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instances.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instances.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
735	[BUG]  [BUGGY]  }  else  if(rawType!=  null  &&  rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  &&  rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  &&  rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
736	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||  rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||  rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||  rawType  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
737	[BUG]  [BUGGY]  }  else  if(rawType!=  null  &&  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  &&  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  &&  instanceCreators.contains(e))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(e))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	86	None	replace
738	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
739	[BUG]  [BUGGY]  }  else  if(rawType.isAssignableFrom(rawType)||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isAssignableFrom(rawType)||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isAssignableFrom(rawType)||  instanceCreators.contains(rawType))  {	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	40	None	replace
740	[BUG]  [BUGGY]  }  else  if(rawType!=  null  &&  rawType.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  &&  rawType.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  &&  rawType.getTargetException()  ==  null)  {	  }    else    if(rawType.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
741	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  rawType.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  rawType.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  rawType.getTargetException()  ==  null)  {	  }    else    if(rawType.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	9	None	replace
742	[BUG]  [BUGGY]  }  else  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	109	None	replace
743	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	109	None	replace
744	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.getClass()!=  getClass())  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.getClass()!=  getClass())  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.getClass()!=  getClass())  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	109	None	replace
745	[BUG]  [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  for(T[]  args  :  rawType.getArguments())  {  throw  new  IllegalStateException( " ");  }	  if(rawType    ==    null)    {    for(T[]    args    :    rawType.getArguments())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	109	None	replace
746	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  catch(Throwable  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  instanceof  ClassCastException)  {  catch(Throwable  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  instanceof  ClassCastException)  {  catch(Throwable  e)  {	  }    catch(Throwable    e)    {    }    catch(Throwable    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	12	None	replace
747	[BUG]  [BUGGY]  if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
748	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
749	[BUG]  [BUGGY]  if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass().getSuperclasses();  if(args!=  null)  {  return  null;  }  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass().getSuperclasses();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	81	None	replace
750	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  ObjectUtilities.isFunction(rawType)&&  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  ||  ObjectUtilities.isFunction(rawType)&&  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  ||  ObjectUtilities.isFunction(rawType)&&  instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
751	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  &&  instances.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  ClassCastException  &&  instances.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  ClassCastException  &&  instances.contains(rawType))  {	  }    else    if(rawType    instanceof    ClassCastException    ||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	89	None	replace
752	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
753	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
754	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	104	None	replace
755	[BUG]  [BUGGY]  }  if(e.getTargetException()  ==  null  ||  e.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(e.getTargetException()  ==  null  ||  e.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e.getTargetException()  ==  null  ||  e.getTargetException()  ==  null)  {	  }    else    if(e.getTargetException()!=    null    ||    e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	47	None	replace
756	[BUG]  [BUGGY]  }  else  if(e.getCatchException()!=  null  ||  e.getTargetException()  ==  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getCatchException()!=  null  ||  e.getTargetException()  ==  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getCatchException()!=  null  ||  e.getTargetException()  ==  null)  {	  }    else    if(e.getTargetException()!=    null    ||    e.getTargetException()    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	47	None	replace
757	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	36	None	replace
758	[BUG]  [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.None.class  ||  instanceCreators!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.None.class  ||  instanceCreators!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  UnsafeAllocator.None.class  ||  instanceCreators!=  null)  {	  }    else    if(instanceCreators!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
759	[BUG]  [BUGGY]  }  else  if(rawType  ==  Collections.emptyMap()  ||  instanceCreators!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  Collections.emptyMap()  ||  instanceCreators!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  Collections.emptyMap()  ||  instanceCreators!=  null)  {	  }    else    if(instanceCreators!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
760	[BUG]  [BUGGY]  }  else  if(rawType  ==  Collections.  <  Class  <?>  emptyList  ||  instanceCreators!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  Collections.  <  Class  <?>  emptyList  ||  instanceCreators!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  Collections.  <  Class  <?>  emptyList  ||  instanceCreators!=  null)  {	  }    else    if(instanceCreators!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	5	None	replace
761	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
762	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally'  [CE]  unclosed  character  literal  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally'	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
763	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  RuntimeException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  throw  new  RuntimeException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  throw  new  RuntimeException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceof    Class    <?>)    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	58	None	replace
764	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "unknown "))  {  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "unknown "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "unknown "))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  	91	None	replace
765	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "undefined "))  {  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "undefined "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "undefined "))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  	91	None	replace
766	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "Unknown "))  {  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "Unknown "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&  e.getTargetException().equals( "Unknown "))  {	  }    else    if(e.getTargetException()!=    null    &&    e.getTargetException().equals(   "   "))    {    	non-compiled	[CE]  	91	None	replace
767	[BUG]  [BUGGY]  }  else  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	60	None	replace
768	[BUG]  [BUGGY]  while(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  while(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	while(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	60	None	replace
769	[BUG]  [BUGGY]  Class  <?  super>  rawType  =  constructor.getRawClass();  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?  super>  rawType  =  constructor.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?  super>  rawType  =  constructor.getRawClass();	  if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
770	[BUG]  [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  throw  new  IllegalArgumentException( " ".);  }	  if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
771	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
772	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
773	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null  ||  rawType.isPrimitive())  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null    ||    rawType.isPrimitive())    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	80	None	replace
774	[BUG]  [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceof  Class  <?>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceof  Class  <?>)  {  }  else  if(instanceCreators.contains(rawType)||  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(instanceCreators.contains(rawType)||    instanceCreators.contains(rawType))    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	25	None	replace
775	[BUG]  [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isArray())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators.contains(rawType)&&  rawType.isArray())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators.contains(rawType)&&  rawType.isArray())  {	  }    else    if(e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	77	None	replace
776	[BUG]  [BUGGY]  }  else  if(object.getTargetException()!=  null)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(object.getTargetException()!=  null)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(object.getTargetException()!=  null)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	15	None	replace
777	[BUG]  [BUGGY]  }  else  if(args.length  ==  0)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(args.length  ==  0)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(args.length  ==  0)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	15	None	replace
778	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(args[e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  if(args[e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  if(args[e.getTargetException()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	15	None	replace
779	[BUG]  [BUGGY]  }  else  if(instanceCreators  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators  ==  null  ||!instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	33	None	replace
780	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length  ==  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  ==  2)  {  throw  new  IllegalArgumentException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	107	None	replace
781	[BUG]  [BUGGY]  while(args!=  null  &&  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  while(args!=  null  &&  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	while(args!=  null  &&  args.length  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	107	None	replace
782	[BUG]  [BUGGY]  }  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  ClassCastException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  ClassCastException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  ClassCastException))  {	  }    else    if(e.getTargetException()!=    null    ||!(e.getTargetException()    instanceof    ClassCastException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	90	None	replace
783	[BUG]  [BUGGY]  }  else  if(!(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException))  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
784	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException  ||  e  instanceof  IllegalAccessException)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException  ||  e  instanceof  IllegalAccessException)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException  ||  e  instanceof  IllegalAccessException)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
785	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException  ||  e  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException  ||  e  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)||  e  instanceof  ClassCastException  ||  e  instanceof  UnsafeAllocator)  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceof    ClassCastException)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	20	None	replace
786	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isAssignableFrom(rawType))  {  'try'  without  'catch'  or  'finally'  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
787	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isArray())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
788	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	108	None	replace
789	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isRawClass())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isRawClass())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isRawClass())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	108	None	replace
790	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isAssignableFrom(rawType))  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	108	None	replace
791	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {	  }    else    if(constructor    ==    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	94	None	replace
792	[BUG]  [BUGGY]  }  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e.getTargetException()!=  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {	  }    else    if(e.getTargetException()!=    null    ||!(e.getTargetException()    instanceof    UnknownTypeException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	93	None	replace
793	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  >=  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  >=  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  >=  null  &&!(e.getTargetException()  instanceof  UnknownTypeException))  {	  }    else    if(e.getTargetException()!=    null    ||!(e.getTargetException()    instanceof    UnknownTypeException))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	93	None	replace
794	[BUG]  [BUGGY]  if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
795	[BUG]  [BUGGY]  if(rawType.getRawClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getRawClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getRawClass()!=  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
796	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	13	None	replace
797	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  nu  [CE]  ';'  expected  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  nu  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getRawClass();  if(args!=  null  ||  args.length  ==  0)  {  return  nu	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getRawClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  ';'  expected	13	None	replace
798	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	57	None	replace
799	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isRawClass())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isRawClass())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isRawClass())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType.isPrimitive())    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	111	None	replace
800	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  if(t)  {  return  null;  }  [CE]  incompatible  types  [FE]    ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  if(t)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    if(t)  {  return  null;  }	  	non-compiled	[CE]  incompatible  types	31	None	add
801	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  catch(Throwable  t)  {  [CE]  'catch'  without  'try'  [FE]      ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  catch(Throwable  t)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    catch(Throwable  t)  {	  	non-compiled	[CE]  'catch'  without  'try'	31	None	add
802	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  Class  <?>  rawType  =  getClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)  [FE]        ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  Class  <?>  rawType  =  getClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    Class  <?>  rawType  =  getClass();	  	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)	31	None	add
803	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  throw  new  IllegalStateException( " ");  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]          ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  throw  new  IllegalStateException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    throw  new  IllegalStateException( " ");	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	31	None	add
804	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  return  null;  [CE]  exception  NoSuchMethodException  has  already  been  caught  [FE]            ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  t)  {  return  null;  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Throwable    t)    {    return  null;	  	non-compiled	[CE]  exception  NoSuchMethodException  has  already  been  caught	31	None	add
805	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  context.instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  context.instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  context.instanceCreators.contains(rawType))  {	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	72	None	replace
806	[BUG]  [BUGGY]  }  else  if(rawType!=  null  &&  rawType.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  &&  rawType.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  &&  rawType.getTargetException()!=  null)  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	46	None	replace
807	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  rawType.getTargetException()!=  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  rawType.getTargetException()!=  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  rawType.getTargetException()!=  null)  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	46	None	replace
808	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()!=  null  &&  rawType.getTargetException().equals( " "))  {  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getTargetException()!=  null  &&  rawType.getTargetException().equals( " "))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()!=  null  &&  rawType.getTargetException().equals( " "))  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  	46	None	replace
809	[BUG]  [BUGGY]  }  else  if(rawType.getTargetException()!=  null  &&  rawType.isAssignableFrom(rawType.getClass()))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.getTargetException()!=  null  &&  rawType.isAssignableFrom(rawType.getClass()))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.getTargetException()!=  null  &&  rawType.isAssignableFrom(rawType.getClass()))  {	  }    else    if(rawType.getTargetException()!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	46	None	replace
810	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.contains(rawType))  {  return  null;	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	55	None	replace
811	[BUG]  [BUGGY]  }  catch(ClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  [CE]  unreachable  statement  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(ClassCastException  e)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(ClassCastException  e)  {  throw  new  IllegalArgumentException( " ");	  }    catch(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  unreachable  statement	19	None	replace
812	[BUG]  [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  }  [CE]  ')'  expected  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  instanceof  Class  <?>)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  instanceof  Class  <?>)  {  if(e  instanceCreators  ==  null)  {  Class  <?>  rawType  =  getClass();  if(rawType!=  null)  {  return  null;  }  }	  }    catch(Throwable    e)    {    if(e    instanceCreators    ==    null)    {    Class    <?>    rawType    =    getClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
813	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators  instanceof  UnsafeAllocator)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
814	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.size()  ==  1  ||  rawType  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.size()  ==  1  ||  rawType  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.size()  ==  1  ||  rawType  instanceof  UnsafeAllocator)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
815	[BUG]  [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.class  ||  instanceCreators  ==  null  ||  rawType  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.class  ||  instanceCreators  ==  null  ||  rawType  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  UnsafeAllocator.class  ||  instanceCreators  ==  null  ||  rawType  instanceof  UnsafeAllocator)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
816	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.size()!=  1  ||  rawType  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.size()!=  1  ||  rawType  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.size()!=  1  ||  rawType  instanceof  UnsafeAllocator)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
817	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.values().length  <  =  1  ||  rawType  instanceof  UnsafeAllocator)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators.values().length  <  =  1  ||  rawType  instanceof  UnsafeAllocator)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators.values().length  <  =  1  ||  rawType  instanceof  UnsafeAllocator)  {	  }    else    if(instanceCreators    ==    null    ||    rawType    instanceof    UnsafeAllocator)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	6	None	replace
818	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  constructor.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)&&  constructor.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)&&  constructor.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	88	None	replace
819	[BUG]  [BUGGY]  }  else  if(rawType!=  null  &&  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  &&  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  &&  instanceCreators.contains(rawType))  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	68	None	replace
820	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?  extends  T>)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?  extends  T>)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?  extends  T>)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	68	None	replace
821	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
822	[BUG]  [BUGGY]  if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isInterface())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
823	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
824	[BUG]  [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isAssignableFrom(rawType))  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null)  {  return  null;  }  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	18	None	replace
825	[BUG]  [BUGGY]  }  else  if(args[i]  ==  null)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(args[i]  ==  null)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(args[i]  ==  null)  {  if(e.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
826	[BUG]  [BUGGY]  }  else  if(object.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(object.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(object.getTargetException()  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(e.getTargetException()    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	17	None	replace
827	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	100	None	replace
828	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	100	None	replace
829	[BUG]  [BUGGY]  }  catch(ClassCastException  e)  {  throw  new  IllegalStateException( " ");  [CE]  unreachable  statement  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(ClassCastException  e)  {  throw  new  IllegalStateException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(ClassCastException  e)  {  throw  new  IllegalStateException( " ");	  }    catch(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  unreachable  statement	100	None	replace
830	[BUG]  [BUGGY]  }  else  if(rawType  ==  UnknownType.class)  {  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  UnknownType.class)  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  UnknownType.class)  {  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
831	[BUG]  [BUGGY]  }  else  if(rawType.isArray())  {  'try'  without  'catch'  or  'finally'  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray())  {  'try'  without  'catch'  or  'finally'  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray())  {  'try'  without  'catch'  or  'finally'	  }    'try'    without    'catch'    or    'finally'    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	24	None	replace
832	[BUG]  [BUGGY]  }  catch(RuntimeException  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(RuntimeException  e)  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(RuntimeException  e)  {  Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)	79	None	replace
833	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  Class  <?>  rawType  =  constructor.getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  Class  <?>  rawType  =  constructor.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  Class  <?>  rawType  =  constructor.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>newDefaultConstructor(Class<?  super  T>)	79	None	replace
834	[BUG]  [BUGGY]  }  else  if(e.getTargetException())  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException())  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException())  {  Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	79	None	replace
835	[BUG]  [BUGGY]  }  else  if(rawType.isArray())  {  Class  <?>  rawType  =  rawType.getRawClass();  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray())  {  Class  <?>  rawType  =  rawType.getRawClass();  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray())  {  Class  <?>  rawType  =  rawType.getRawClass();	  }    catch(Throwable    e)    {    Class    <?>    rawType    =    rawType.getRawClass();    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	79	None	replace
836	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||  rawType.isInterface())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||  rawType.isInterface())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||  rawType.isInterface())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isInterface())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	66	None	replace
837	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isUnknownType())  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isUnknownType())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isUnknownType())  {  throw  new  IllegalStateException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	59	None	replace
838	[BUG]  [BUGGY]  Class  <?>[]  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
839	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
840	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null)  {  Class  <?>[]  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null)  {  Class  <?>[]  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  newDefaultConstructor();  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    newDefaultConstructor();    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	82	None	replace
841	[BUG]  [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.None.class  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  UnsafeAllocator.None.class  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  UnsafeAllocator.None.class  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    ==    null    ||    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	106	None	replace
842	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  throw  new  RuntimeException( " ");  [CE]  unreachable  statement  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  throw  new  RuntimeException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  throw  new  RuntimeException( " ");	  }    catch(Throwable    e)    {    return    null;    	non-compiled	[CE]  unreachable  statement	95	None	replace
843	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  throw  new  NoSuchMethodException( " ");  [CE]  unreachable  statement  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  throw  new  NoSuchMethodException( " ");  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  throw  new  NoSuchMethodException( " ");	  }    catch(Throwable    e)    {    return    null;    	non-compiled	[CE]  unreachable  statement	95	None	replace
844	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  e  instanceCreators.contains(rawType))  {  return  null;  }	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	71	None	replace
845	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isUnknownType())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isUnknownType())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isUnknownType())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	50	None	replace
846	[BUG]  [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isFunction())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators.contains(rawType)&&  rawType.isFunction())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators.contains(rawType)&&  rawType.isFunction())  {	  }    else    if(e    instanceCreators.contains(rawType)&&    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	87	None	replace
847	[BUG]  [BUGGY]  }  else  if(args[0]  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(args[0]  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(args[0]  ==  null)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
848	[BUG]  [BUGGY]  }  else  if(rawType.isArray())  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray())  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray())  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
849	[BUG]  [BUGGY]  }  else  if(e.getClass()!=  rawType)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getClass()!=  rawType)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getClass()!=  rawType)  {  if(Throwable  e)  {  throw  new  IllegalArgumentException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	96	None	replace
850	[BUG]  [BUGGY]  if(args  ==  null  ||  args.length  ==  2)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(args  ==  null  ||  args.length  ==  2)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(args  ==  null  ||  args.length  ==  2)  {  throw  new  IllegalStateException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	110	None	replace
851	[BUG]  [BUGGY]  while(args!=  null  &&  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  while(args!=  null  &&  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	while(args!=  null  &&  args.length  ==  0)  {  throw  new  IllegalStateException( " ");  }	  if(args    ==    null    ||    args.length    ==    0)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	110	None	replace
852	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }  [CE]  unclosed  character  literal  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isPrimitive())  {  'try'  without  'catch'  or  'finally'  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally'    }    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
853	[BUG]  [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(!instanceCreators.contains(rawType)&&  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(!instanceCreators.contains(rawType)&&  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(!instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	38	None	replace
854	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  if(rawType  ==  null)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
855	[BUG]  [BUGGY]  if(rawType  ==  null  ||  args.length  ==  0)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  args.length  ==  0)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  args.length  ==  0)  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
856	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>[]  args  =  rawType.getClass();  if(args!=  null  ||  args.length  ==  0)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>[]    args    =    rawType.getClass();    if(args!=    null    ||    args.length    ==    0)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	16	None	replace
857	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	35	None	replace
858	[BUG]  [BUGGY]  }  else  if(constructor  ==  null  ||  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(constructor  ==  null  ||  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(constructor  ==  null  ||  rawType.isPrimitive())  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isPrimitive())    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	4	None	replace
859	[BUG]  [BUGGY]  }  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isPrimitive()  ||  e  instanceCreators.contains(rawType)||  e  instanceCreators.contains(rawType))  {	  }    else    if(e    instanceCreators.contains(rawType)||    e    instanceCreators.contains(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	70	None	replace
860	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isPrimitive()  ||  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isPrimitive()  ||  rawType.isArray())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null    ||    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	51	None	replace
861	[BUG]  [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignedOnce())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType  ==  null  ||  rawType.isAssignedOnce())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType  ==  null  ||  rawType.isAssignedOnce())  {  throw  new  IllegalArgumentException( " ");  }	  if(rawType    ==    null    ||    rawType.isPrimitive())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	51	None	replace
862	[BUG]  [BUGGY]  }  else  if(e.getClass()!=  rawType)  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getClass()!=  rawType)  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getClass()!=  rawType)  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	97	None	replace
863	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  if(e  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	add	}  catch(Throwable  e)  {  if(e  ==  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    	compilable	  [FE]  ClassCastException  	97	2	replace
864	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  if(e  ==  null)  {  return  null;  }  [FE]  ClassCastException  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Throwable  e)  {  if(e  ==  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  catch(Throwable  e)  {  if(e  ==  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    	compilable	  [FE]  ClassCastException  	97	2	replace
865	[BUG]  [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  instanceCreators.contains(rawType)||  rawType  instanceof  Class  <?>)  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	56	None	replace
866	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType  instanceCreators.contains(rawType))  {  throw  new  IllegalArgumentException( " ");  }	  }    else    if(rawType    instanceCreators.contains(rawType))    {    throw    new    IllegalArgumentException(   "   ");    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  	56	None	replace
867	[BUG]  [BUGGY]  if(rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getRawClass()!=  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
868	[BUG]  [BUGGY]  Class  <?>[]  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  Class  <?>[]  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	Class  <?>[]  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
869	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]            ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	78	None	replace
870	[BUG]  [BUGGY]  if(rawType.getClass()!=  rawType.getClass())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.getClass()!=  rawType.getClass())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.getClass()!=  rawType.getClass())  {  if(rawType  ==  null)  {  Class  <?>  rawType  =  rawType.getRawClass();  if(rawType!=  null)  {  return  null;  }	  }    catch(Throwable    e)    {    if(rawType    ==    null)    {    Class    <?>    rawType    =    rawType.getRawClass();    if(rawType!=    null)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
871	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators  ==  Collections.emptyList())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  instanceCreators  ==  Collections.emptyList())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  instanceCreators  ==  Collections.emptyList())  {	  }    else    if(rawType    ==    null    ||    instanceCreators    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	3	None	replace
872	[BUG]  [BUGGY]  }  else  if(e  instanceCreators!=  null  &&  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators!=  null  &&  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators!=  null  &&  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	101	None	replace
873	[BUG]  [BUGGY]  }  else  if(instanceCreators!=  null  &&  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators!=  null  &&  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators!=  null  &&  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators!=    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	101	None	replace
874	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null  &&!null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null  &&!null)  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
875	[BUG]  [BUGGY]  }  if(e.getTargetException()!=  null  ||!null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  if(e.getTargetException()!=  null  ||!null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  if(e.getTargetException()!=  null  ||!null)  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
876	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!return  null)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                          ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null  ||!return  null)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null  ||!return  null)  {	  }    else    if(e.getTargetException()    ==    null    ||!null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	11	None	replace
877	[BUG]  [BUGGY]  }  else  if(rawType  ==  instanceCreators  ||  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  instanceCreators  ||  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  instanceCreators  ||  rawType.isAssignableFrom(rawType))  {	  }    else    if(instanceCreators    ==    null    ||    rawType.isAssignableFrom(rawType))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	64	None	replace
878	[BUG]  [BUGGY]  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                        ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	'try'  without  'catch'  or  'finally';  }	  if(rawType    ==    null)    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
879	[BUG]  [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  [FE]    ClassCastException    [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  catch(Exception  e)  {  if(e.getTargetException()!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}    catch(Exception    e)    {    if(e.getTargetException()!=  null)  {  throw  new  IllegalStateException( " ");  }	  	non-compiled	[CE]  cannot  find  symbol	26	None	add
880	[BUG]  [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isUnknownClass())  {  'try'  without  'catch'  or  'finally';  }  [CE]  unclosed  character  literal  [FE]                                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  if(rawType.isPrimitive()  ||  rawType.isUnknownClass())  {  'try'  without  'catch'  or  'finally';  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	if(rawType.isPrimitive()  ||  rawType.isUnknownClass())  {  'try'  without  'catch'  or  'finally';  }	  if(rawType.isPrimitive())    {    'try'    without    'catch'    or    'finally';    }    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
881	[BUG]  [BUGGY]  }  else  if(rawType.isArray())  {  if(Throwable  e)  {  return  null;  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray())  {  if(Throwable  e)  {  return  null;  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray())  {  if(Throwable  e)  {  return  null;  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
882	[BUG]  [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  return  null;  }  catch(Throwable  e)  {  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  return  null;  }  catch(Throwable  e)  {  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()!=  null)  {  if(Throwable  e)  {  return  null;  }  catch(Throwable  e)  {  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
883	[BUG]  [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  return  null;  }  catch(Throwable  e)  {  }  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  return  null;  }  catch(Throwable  e)  {  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e.getTargetException()  ==  null)  {  if(Throwable  e)  {  return  null;  }  catch(Throwable  e)  {  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    return    null;    }    catch(Throwable    e)    {    }    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	99	None	replace
884	[BUG]  [BUGGY]  }  else  if(instanceCreators!=  null  &&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(instanceCreators!=  null  &&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(instanceCreators!=  null  &&  instanceCreators.contains(rawType))  {  catch  (NoSuchMethodException  e)  {	  }    else    if(instanceCreators!=    null    ||    instanceCreators.contains(rawType))    {    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	39	None	replace
885	[BUG]  [BUGGY]  }  else  if(StringUtils.isNotEmpty(args))  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]              ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(StringUtils.isNotEmpty(args))  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(StringUtils.isNotEmpty(args))  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
886	[BUG]  [BUGGY]  }  else  if(rawType.isArray())  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType.isArray())  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType.isArray())  {  if(Throwable  e)  {  throw  new  IllegalStateException( " ");  }	  }    catch(Throwable    e)    {    if(Throwable    e)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	98	None	replace
887	[BUG]  [BUGGY]  }  else  if(rawType!=  null  &&  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType!=  null  &&  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType!=  null  &&  instanceCreators.contains(rawType))  {  return  null;  }  catch  (NoSuchMethodException  e)  {	  }    else    if(rawType    instanceCreators.contains(rawType))    {    return    null;    }    catch    (NoSuchMethodException    e)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	69	None	replace
888	[BUG]  [BUGGY]  }  else  if(e  instanceCreators!=  null  &&!(e  instanceof  Class  <?>))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                  ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators!=  null  &&!(e  instanceof  Class  <?>))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators!=  null  &&!(e  instanceof  Class  <?>))  {	  }    else    if(e    instanceCreators    ==    null    ||!(e    instanceof    Class    <?>))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
889	[BUG]  [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>)&&  rawType.isPrimitive())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                    ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>)&&  rawType.isPrimitive())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>)&&  rawType.isPrimitive())  {	  }    else    if(e    instanceCreators    ==    null    ||!(e    instanceof    Class    <?>))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
890	[BUG]  [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>)&&  rawType.isAssignableFrom(rawType))  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                      ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>)&&  rawType.isAssignableFrom(rawType))  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(e  instanceCreators  ==  null  ||!(e  instanceof  Class  <?>)&&  rawType.isAssignableFrom(rawType))  {	  }    else    if(e    instanceCreators    ==    null    ||!(e    instanceof    Class    <?>))    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	102	None	replace
891	[BUG]  [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isUnionType())  {  [CE]  'try'  without  'catch'  or  'finally'  [FE]                ClassCastException      [CONTEXT]      }  catch  (InvocationTargetException  e)  {    throw  new  RuntimeException(     "Failed  to  invoke       "  +  constructor  +       "  with  no  args     ",  e.getTargetException());  }  catch  (IllegalAccessException  e)  {  throw  new  AssertionError(e);  }  }  };      [BUGGY]  }  else  if(rawType  ==  null  ||  rawType.isUnionType())  {  [BUGGY]      return  null;  }  }  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  newDefaultConstructor  [RETURN_TYPE]  <T>  Class<?  super  T>  rawType  [VARIABLES]  UnsafeAllocator  unsafeAllocator  boolean  Constructor  constructor  Class  rawType  Map  instanceCreators  Object[]  args  InvocationTargetException  e  InstantiationException  e  IllegalAccessException  e  NoSuchMethodException  e  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.24618298195866545	118	118	2	replace	}  else  if(rawType  ==  null  ||  rawType.isUnionType())  {	  }    else    if(rawType    ==    null)    {    	non-compiled	[CE]  'try'  without  'catch'  or  'finally'	1	None	replace
