bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	44	None	replace
2	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	44	None	replace
3	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	44	None	replace
4	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(rawType,  instanceCreators);  [CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(rawType,  instanceCreators);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)	44	None	replace
5	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  null);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	44	None	replace
6	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)rawTypeCreators.get(rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	34	None	replace
7	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeToken.get(rawType);  [CE]  inconvertible  types  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeToken.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)typeToken.get(rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  inconvertible  types	34	None	replace
8	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)this.instanceCreators.get(rawType);  [CE]  inconvertible  types  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)this.instanceCreators.get(rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  inconvertible  types	34	None	replace
9	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)InstanceCreator.get(rawType);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)InstanceCreator.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)InstanceCreator.get(rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
10	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instances.get(rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	34	None	replace
11	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	18	None	replace
12	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	18	None	replace
13	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  this);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  this);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	18	None	replace
14	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	18	None	replace
15	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  false);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	18	None	replace
16	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	16	None	replace
17	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	16	None	replace
18	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(typeToken  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(typeToken  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(typeToken  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	16	None	replace
19	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType,  typeToken,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	16	None	replace
20	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken),  defaultConstructor);  [CE]  ';'  expected  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken),  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken),  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  ';'  expected	16	None	replace
21	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	16	None	replace
22	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  this);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  this);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	16	None	replace
23	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);	  InstanceCreator    <    T>    rawType    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	61	None	replace
24	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  InstanceCreator    <    T>    rawType    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	61	None	replace
25	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  InstanceCreator    <    T>    rawType    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	61	None	replace
26	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(type);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(type);	  InstanceCreator    <    T>    rawType    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	61	None	replace
27	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  InstanceCreator    <    T>    rawType    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	61	None	replace
28	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);	  InstanceCreator    <    T>    rawType    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	61	None	replace
29	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	11	None	replace
30	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	11	None	replace
31	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instances.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	11	None	replace
32	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultImplementation);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	11	None	replace
33	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  false);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	11	None	replace
34	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  null);	  ObjectConstructor    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	11	None	replace
35	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	64	None	replace
36	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [CE]  modifier  static  not  allowed  here  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	64	None	replace
37	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [CE]  modifier  static  not  allowed  here  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	64	None	replace
38	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	29	None	replace
39	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(rawType);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreator.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
40	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instances.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	29	None	replace
41	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)unsafeAllocator.get(rawType);  [CE]  cannot  find  symbol  unsafeAllocator  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)unsafeAllocator.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)unsafeAllocator.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	29	None	replace
42	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	6	None	replace
43	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor,  ObjectConstructor.class);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor,  ObjectConstructor.class);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor,  ObjectConstructor.class);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	6	None	replace
44	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  ObjectConstructor.class);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  ObjectConstructor.class);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  ObjectConstructor.class);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    ObjectConstructor.class);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	6	None	replace
45	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	6	None	replace
46	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  ObjectConstructor.class);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  ObjectConstructor.class);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  ObjectConstructor.class);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    ObjectConstructor.class);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	6	None	replace
47	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation,  ObjectConstructor.class);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation,  ObjectConstructor.class);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation,  ObjectConstructor.class);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	6	None	replace
48	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1  +  1);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1  +  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1  +  1);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  modifier  static  not  allowed  here	40	None	replace
49	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  +  1);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  +  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  +  1);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  modifier  static  not  allowed  here	40	None	replace
50	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1,  typeToken);  [CE]  modifier  static  not  allowed  here  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1,  typeToken);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  modifier  static  not  allowed  here	40	None	replace
51	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  2);  [CE]  modifier  static  not  allowed  here  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  2);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  2);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  modifier  static  not  allowed  here	40	None	replace
52	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	40	None	replace
53	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	17	None	replace
54	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	37	None	replace
55	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	37	None	replace
56	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  modifier  static  not  allowed  here  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	37	None	replace
57	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	37	None	replace
58	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  token);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  token);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  token);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	37	None	replace
59	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  true);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  true);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  true);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    false);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
60	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  false);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    false);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
61	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  false,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  false,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  false,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    false);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	56	None	replace
62	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor,  false);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor,  false);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    false);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	56	None	replace
63	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  false);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    false);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
64	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  0);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  0);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  0);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    false);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	56	None	replace
65	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    null);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	23	None	replace
66	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.typeToken);  [CE]  cannot  find  symbol  typeToken  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    null);    	non-compiled	[CE]  cannot  find  symbol  typeToken	23	None	replace
67	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  null);  [CE]  cannot  find  symbol  typeCreators  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  null);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    null);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	23	None	replace
68	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type,  null);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    null);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	23	None	replace
69	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawTypeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawTypeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	47	None	replace
70	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(typeToken);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	47	None	replace
71	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)defaultConstructor.get(typeToken);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)defaultConstructor.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)defaultConstructor.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	47	None	replace
72	[BUG]  [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
73	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  type);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	33	None	replace
74	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  null);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	33	None	replace
75	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	33	None	replace
76	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	33	None	replace
77	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawTypeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	31	None	replace
78	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	add	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	compilable	  [FE]  ClassCastException  	31	2	replace
79	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [FE]  ClassCastException  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	compilable	  [FE]  ClassCastException  	31	2	replace
80	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);  [CE]  cannot  find  symbol  instance  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(instance);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  instance	31	None	replace
81	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(type);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	31	None	replace
82	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  true);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  true);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  true);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    false);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	48	None	replace
83	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  false);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    false);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	48	None	replace
84	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  false,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  false,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  false,  typeToken);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    false);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	48	None	replace
85	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  null,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  null,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  null,  false);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    false);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	48	None	replace
86	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  false,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  false,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  false,  defaultConstructor);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    false);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	48	None	replace
87	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instances.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(rawType    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	20	None	replace
88	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  types.get(rawType);  [CE]  cannot  find  symbol  types  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  types.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  types.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(rawType    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  types	20	None	replace
89	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  1  +  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  1  +  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  1  +  1);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	49	None	replace
90	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  +  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  +  1);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	49	None	replace
91	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  1,  typeToken);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  1,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  1,  typeToken);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	49	None	replace
92	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken  -  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken  -  1);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	49	None	replace
93	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  2);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  2);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  2);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	49	None	replace
94	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultConstructor.get(rawType,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultConstructor.get(rawType,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultConstructor.get(rawType,  this.defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    this.defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	25	None	replace
95	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType,  this.defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    this.defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	25	None	replace
96	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultConstructor.get(rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultConstructor.get(rawType,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultConstructor.get(rawType,  this.defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    this.defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	25	None	replace
97	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultConstructor.get(rawType,  instanceCreators);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultConstructor.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultConstructor.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    this.defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	25	None	replace
98	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  +  1);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  +  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  +  1);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	53	None	replace
99	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken  -  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken  -  1);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	53	None	replace
100	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1  +  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1  +  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1  +  1);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	53	None	replace
101	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1,  typeToken);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1,  typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	53	None	replace
102	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType.toString()  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType.toString()  -  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType.toString()  -  1);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	53	None	replace
103	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	22	None	replace
104	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  instanceCreators);  [CE]  cannot  find  symbol  typeCreators  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	22	None	replace
105	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreator.get(rawType,  instanceCreators);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreator.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreator.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
106	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    type);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	22	None	replace
107	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(type);  [CE]  cannot  find  symbol  typeCreators  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	45	None	replace
108	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	45	None	replace
109	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)defaultConstructor.get(type);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)defaultConstructor.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)defaultConstructor.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	45	None	replace
110	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  method);  [CE]  cannot  find  symbol  method  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  method);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  method);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  method	21	None	replace
111	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	67	None	replace
112	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	67	None	replace
113	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultImplementation);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	67	None	replace
114	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  false);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	67	None	replace
115	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  factory);  [CE]  cannot  find  symbol  factory  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  factory);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  factory);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  factory	67	None	replace
116	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultConstructor);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	67	None	replace
117	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType,  defaultConstructor);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType,  defaultConstructor);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
118	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(typeToken);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
119	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(type);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(type);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
120	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType,  typeToken);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType,  typeToken);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
121	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType,  defaultImplementation);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType,  defaultImplementation);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
122	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType),  defaultConstructor);  [CE]  ';'  expected  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType),  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType),  defaultConstructor);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  ';'  expected	8	None	replace
123	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)defaultConstructor.get(rawType,  instanceCreators);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)defaultConstructor.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)defaultConstructor.get(rawType,  instanceCreators);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  modifier  static  not  allowed  here	38	None	replace
124	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken);  [CE]  modifier  static  not  allowed  here  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  modifier  static  not  allowed  here	38	None	replace
125	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(rawType!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	58	None	replace
126	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  defaultConstructor);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	28	None	replace
127	[BUG]  [BUGGY]  AnstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  AnstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	AnstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
128	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(rawType);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeToken.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	28	None	replace
129	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	65	None	replace
130	[BUG]  [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	13	None	replace
131	[BUG]  [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	13	None	replace
132	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
133	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
134	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	13	None	replace
135	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  types.get(rawType);  [CE]  cannot  find  symbol  types  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  types.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  types.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  types	19	None	replace
136	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	27	None	replace
137	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	27	None	replace
138	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	27	None	replace
139	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	27	None	replace
140	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	27	None	replace
141	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [CE]  cannot  find  symbol  typeCreators  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(type);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	30	None	replace
142	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.instanceCreators.get(type);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	30	None	replace
143	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	add	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	compilable	  [FE]  ClassCastException  	30	2	replace
144	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [FE]  ClassCastException  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	compilable	  [FE]  ClassCastException  	30	2	replace
145	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(rawType,  defaultConstructor);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	46	None	replace
146	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(rawType);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)this.instanceCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	46	None	replace
147	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.get(type);  [CE]  cannot  find  symbol  rawTypeToken  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeToken.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeToken	46	None	replace
148	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instances.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	46	None	replace
149	[BUG]  [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);	  (InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
150	[BUG]  [BUGGY]  (InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  (InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
151	[BUG]  [BUGGY]  (InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)typeCreators.get(rawType);	  (InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
152	[BUG]  [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  (InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
153	[BUG]  [BUGGY]  (InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)this.instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)this.instanceCreators.get(rawType);	  (InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
154	[BUG]  [BUGGY]  (InstanceCreator  <  T>)unsafeAllocator.get(rawType);  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)unsafeAllocator.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)unsafeAllocator.get(rawType);	  (InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
155	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instances.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =  instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instances.get(rawType);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	63	None	replace
156	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType,  typeToken);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType,  typeToken);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	63	None	replace
157	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawTypeToken);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawTypeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawTypeToken);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	63	None	replace
158	[BUG]  [BUGGY]  AnstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  [CE]  cannot  find  symbol  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  AnstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	AnstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
159	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreators.get(rawType);  [CE]  cannot  find  symbol  rawTypeCreators  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  rawTypeCreators	43	None	replace
160	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)InstanceCreator.get(rawType);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)InstanceCreator.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)InstanceCreator.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
161	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreator.get(rawType);  [CE]  cannot  find  symbol  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreator.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreator.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)defaultConstructor.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
162	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreator.get(rawType);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreator.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)rawTypeCreator.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)defaultConstructor.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
163	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.restrictByNotNullOrUndefined();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
164	[BUG]  [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Class  <?>  rawType  =  typeToken.getRawClass();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  Class  <?>  rawType  =  typeToken.getRawClass();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
165	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getQualifiedName();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.getQualifiedName();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.getQualifiedName();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
166	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.newInstance();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.newInstance();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.newInstance();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
167	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getReturnType();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.getReturnType();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.getReturnType();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
168	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.toString();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.toString();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.toString();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
169	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  types.get(rawType);  [CE]  cannot  find  symbol  types  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  types.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  types.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  types	60	None	replace
170	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instances.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	60	None	replace
171	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    null);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	5	None	replace
172	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor,  null);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor,  null);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    null);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	5	None	replace
173	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  null);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    null);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	5	None	replace
174	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
175	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	59	None	replace
176	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	59	None	replace
177	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	4	None	replace
178	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	4	None	replace
179	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  typeToken);  [CE]  no  suitable  method  found  for  get(Class<CAP#1>,TypeToken<T#1>)  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  no  suitable  method  found  for  get(Class<CAP#1>,TypeToken<T#1>)	4	None	replace
180	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)	26	None	replace
181	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	26	None	replace
182	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	26	None	replace
183	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	26	None	replace
184	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType,  defaultConstructor);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType,  defaultConstructor);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	9	None	replace
185	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType,  defaultImplementation);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType,  defaultImplementation);	  InstanceCreator    <    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	9	None	replace
186	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    unsafeAllocator);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	54	None	replace
187	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType,    instanceCreators);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	3	None	replace
188	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this.defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	1	None	replace
189	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  defaultImplementation);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	42	None	replace
190	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	42	None	replace
191	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  null);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	42	None	replace
192	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	42	None	replace
193	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  newDefaultConstructor);  [CE]  cannot  find  symbol  newDefaultConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  newDefaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  newDefaultConstructor);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  newDefaultConstructor	42	None	replace
194	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    instanceCreators);    	non-compiled	[CE]  modifier  static  not  allowed  here	50	None	replace
195	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  ObjectConstructor.class);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  ObjectConstructor.class);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  ObjectConstructor.class);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    instanceCreators);    	non-compiled	[CE]  modifier  static  not  allowed  here	50	None	replace
196	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType,  this.defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    this.defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	24	None	replace
197	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    this.defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	24	None	replace
198	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  this.defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    this.defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	24	None	replace
199	[BUG]  [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
200	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
201	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
202	[BUG]  [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
203	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
204	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
205	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawTypeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawTypeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawTypeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(typeToken);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
206	[BUG]  [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(typeToken);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
207	[BUG]  [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(typeToken);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  instanceCreators.get(typeToken);	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(typeToken);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	52	None	replace
208	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(typeToken);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
209	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	32	None	replace
210	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	32	None	replace
211	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(typeToken,  rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(typeToken,  rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	32	None	replace
212	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeToken.get(rawType,  instanceCreators);  [CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeToken.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)typeToken.get(rawType,  instanceCreators);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)	32	None	replace
213	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  null);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	32	None	replace
214	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	32	None	replace
215	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  this.typeToken);  [CE]  cannot  find  symbol  typeToken  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  this.typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  this.typeToken);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  typeToken	35	None	replace
216	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation,  typeToken);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation,  typeToken);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultImplementation);    	non-compiled	[CE]  modifier  static  not  allowed  here	41	None	replace
217	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  defaultImplementation);  [CE]  modifier  static  not  allowed  here  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  defaultImplementation);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultImplementation);    	non-compiled	[CE]  modifier  static  not  allowed  here	41	None	replace
218	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    this);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	7	None	replace
219	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    this);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	7	None	replace
220	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  this);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType,  this);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    this);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	7	None	replace
221	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  this);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  this);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    this);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	7	None	replace
222	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)rawTypeCreators.get(rawType);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	39	None	replace
223	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  typeToken);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  typeToken);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	39	None	replace
224	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  defaultConstructor);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType,  defaultConstructor);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	39	None	replace
225	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeCreators.get(type);  [CE]  cannot  find  symbol  typeCreators  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)typeCreators.get(type);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	36	None	replace
226	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeCreators.get(instance);  [CE]  cannot  find  symbol  instance  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeCreators.get(instance);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)typeCreators.get(instance);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol  instance	36	None	replace
227	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	66	None	replace
228	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultConstructor);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	66	None	replace
229	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instances.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	66	None	replace
230	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  defaultImplementation);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	66	None	replace
231	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [CE]  incompatible  types  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(type);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	66	None	replace
232	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  null);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	66	None	replace
233	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  *  1);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  *  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  *  1);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  modifier  static  not  allowed  here	40	None	replace
234	[BUG]  [BUGGY]  AnstanceCreator  <  T>  rawTypeCreator  =(AnnotationCreator  <  T>)instanceCreators.get(typeToken);  [CE]  cannot  find  symbol  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  AnstanceCreator  <  T>  rawTypeCreator  =(AnnotationCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	AnstanceCreator  <  T>  rawTypeCreator  =(AnnotationCreator  <  T>)instanceCreators.get(typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
235	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [CE]  cannot  find  symbol  unsafeAllocator  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  unsafeAllocator);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	16	None	replace
236	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)outputCreators.get(rawType);  [CE]  cannot  find  symbol  outputCreators  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)outputCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)outputCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  outputCreators	43	None	replace
237	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.getClass();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.getClass();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
238	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getConstructor();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.getConstructor();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.getConstructor();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
239	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawParameterType(0);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.getRawParameterType(0);	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
240	[BUG]  [BUGGY]  final  AtstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  cannot  find  symbol  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  AtstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  AtstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken,    rawType);    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
241	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	add	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType);    	compilable	  [FE]  ClassCastException  	28	43	replace
242	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [FE]  ClassCastException  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType);    	compilable	  [FE]  ClassCastException  	28	43	replace
243	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  <  T>)typeToken.get(rawType);  [CE]  cannot  find  symbol  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  <  T>)typeToken.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  <  T>)typeToken.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType);    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
244	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  modifier  static  not  allowed  here	38	None	replace
245	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor  +  1);  [CE]  modifier  static  not  allowed  here  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor  +  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor  +  1);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  modifier  static  not  allowed  here	38	None	replace
246	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  newDefaultConstructor());  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  newDefaultConstructor());  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  newDefaultConstructor());	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  modifier  static  not  allowed  here	38	None	replace
247	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  defaultConstructor.get(rawType);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  defaultConstructor.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  defaultConstructor.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	19	None	replace
248	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultImplementation);    	non-compiled	[CE]  modifier  static  not  allowed  here	41	None	replace
249	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);  [CE]  modifier  static  not  allowed  here  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultImplementation);    	non-compiled	[CE]  modifier  static  not  allowed  here	41	None	replace
250	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	64	None	replace
251	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [CE]  modifier  static  not  allowed  here  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	64	None	replace
252	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.safeAllocator);  [CE]  cannot  find  symbol  safeAllocator  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.safeAllocator);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.safeAllocator);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    this.defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  safeAllocator	24	None	replace
253	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeTokens.get(rawType);  [CE]  cannot  find  symbol  typeTokens  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeTokens.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)typeTokens.get(rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeTokens	34	None	replace
254	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)outputCreators.get(rawType);  [CE]  cannot  find  symbol  outputCreators  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)outputCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)outputCreators.get(rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  outputCreators	34	None	replace
255	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    null);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	5	None	replace
256	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  defaultConstructor.get(rawType);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  defaultConstructor.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  defaultConstructor.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	60	None	replace
257	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)unsafeConstructor.get(rawType);  [CE]  cannot  find  symbol  unsafeConstructor  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)unsafeConstructor.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)unsafeConstructor.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)defaultConstructor.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  unsafeConstructor	57	None	replace
258	[BUG]  [BUGGY]  final  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(type);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	36	None	replace
259	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken);  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	1	None	replace
260	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  false);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultImplementation);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	21	None	replace
261	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  this);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  this);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	59	None	replace
262	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instances.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instances.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instances.get(rawType,  typeToken,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	17	None	replace
263	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  this);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  this);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	17	None	replace
264	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(typeToken!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(typeToken!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(typeToken!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	17	None	replace
265	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeTokens.get(rawType);  [CE]  cannot  find  symbol  typeTokens  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeTokens.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeTokens.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeTokens	29	None	replace
266	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outputCreators.get(rawType);  [CE]  cannot  find  symbol  outputCreators  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outputCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)outputCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  outputCreators	29	None	replace
267	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)defaultConstructor.get(rawType);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)defaultConstructor.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)defaultConstructor.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	29	None	replace
268	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [CE]  cannot  find  symbol  unsafeAllocator  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	32	None	replace
269	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  factory);  [CE]  cannot  find  symbol  factory  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  factory);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  factory);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  factory	32	None	replace
270	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  0);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  0);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  0);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	32	None	replace
271	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  this);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	32	None	replace
272	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [CE]  cannot  find  symbol  unsafeAllocator  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	26	None	replace
273	[BUG]  [BUGGY]  InstanceCreator  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	14	None	replace
274	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
275	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawTypeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
276	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  factory);  [CE]  cannot  find  symbol  factory  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  factory);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  factory);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  factory	44	None	replace
277	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  this);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	44	None	replace
278	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken,  false);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	44	None	replace
279	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instances.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawType  =  instances.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawType  =  instances.get(rawType);	  ObjectConstructor    <    T>    rawType    =    instanceCreators.get(rawType);    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	8	None	replace
280	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken,  ObjectConstructor.class);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken,  ObjectConstructor.class);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken,  ObjectConstructor.class);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	6	None	replace
281	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  *  1);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  *  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  *  1);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	49	None	replace
282	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  /  1);  [CE]  bad  operand  types  for  binary  operator  '/'  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  /  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  /  1);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '/'	49	None	replace
283	[BUG]  [BUGGY]  AnstanceCreator  <  T>  rawTypeCreator  =(AnnotationCreator  <  T>)instanceCreators.get(type);  [CE]  cannot  find  symbol  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  AnstanceCreator  <  T>  rawTypeCreator  =(AnnotationCreator  <  T>)instanceCreators.get(type);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	AnstanceCreator  <  T>  rawTypeCreator  =(AnnotationCreator  <  T>)instanceCreators.get(type);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
284	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  false);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType,  false);	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	66	None	replace
285	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  *  1);  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  *  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  *  1);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	53	None	replace
286	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType.length  -  1);  [CE]  cannot  find  symbol  length  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType.length  -  1);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType.length  -  1);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType    -    1);    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
287	[BUG]  [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawTypeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(typeToken);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
288	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(typeToken);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
289	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(typeToken);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
290	[BUG]  [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(typeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
291	[BUG]  [BUGGY]  if(rawTypeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawTypeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawTypeToken  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
292	[BUG]  [BUGGY]  InstanceCreator  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	13	None	replace
293	[BUG]  [BUGGY]  (InstanceCreator  <  T>)  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)  instanceCreators.get(rawType);  if(rawTypeCreator!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
294	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  newDefaultConstructor);  [CE]  cannot  find  symbol  newDefaultConstructor  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  newDefaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  newDefaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  newDefaultConstructor	18	None	replace
295	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(typeToken);  [CE]  cannot  find  symbol  typeCreators  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	47	None	replace
296	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(type  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(type  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(type  ==  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(rawType    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	20	None	replace
297	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(rawType    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	20	None	replace
298	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType,    instanceCreators);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	3	None	replace
299	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators!=  null?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators!=  null?  null  :  instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators!=  null?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(rawType!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	58	None	replace
300	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    null);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	23	None	replace
301	[BUG]  [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);	  (InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
302	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken);  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor,  typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	67	None	replace
303	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  this.defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	18	None	replace
304	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  objectConstructor);  [CE]  cannot  find  symbol  objectConstructor  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  objectConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  objectConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	18	None	replace
305	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  this.defaultImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  this.defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	18	None	replace
306	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null?  typeToken.getRawClass()  :  defaultConstructor;  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null?  typeToken.getRawClass()  :  defaultConstructor;  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null?  typeToken.getRawClass()  :  defaultConstructor;	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
307	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.toRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.toRawClass();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.toRawClass();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
308	[BUG]  [BUGGY]  Class  <?>  rawType  =  this.typeToken.getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  this.typeToken.getRawClass();  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  this.typeToken.getRawClass();	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
309	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null?  typeToken.getRawClass()  :  defaultImplementation;  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null?  typeToken.getRawClass()  :  defaultImplementation;  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.getRawClass()  ||  typeToken.getRawClass()!=  null?  typeToken.getRawClass()  :  defaultImplementation;	  Class    <?>    rawType    =    typeToken.getRawClass();    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	12	None	replace
310	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  template);  [CE]  cannot  find  symbol  template  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  template);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  template);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)typeToken.get(rawType,    instanceCreators);    	non-compiled	[CE]  cannot  find  symbol  template	3	None	replace
311	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.toString());  [CE]  incompatible  types  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.toString());  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType.toString());	  InstanceCreator    <    T>    rawTypeCreator    =    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	66	None	replace
312	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  defaultConstructor);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	31	None	replace
313	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	42	None	replace
314	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)outputConstructor.get(rawType);  [CE]  cannot  find  symbol  outputConstructor  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)outputConstructor.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)outputConstructor.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)defaultConstructor.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  outputConstructor	57	None	replace
315	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(rawType!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	58	None	replace
316	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(rawType!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	58	None	replace
317	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType,  instanceCreators);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)this.defaultImplementation.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    this.defaultImplementation);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	24	None	replace
318	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);  [CE]  modifier  static  not  allowed  here  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	65	None	replace
319	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken,  defaultConstructor);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	47	None	replace
320	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  objectConstructor);  [CE]  cannot  find  symbol  objectConstructor  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  objectConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  objectConstructor);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	27	None	replace
321	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [CE]  modifier  static  not  allowed  here  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  modifier  static  not  allowed  here	17	None	replace
322	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  factory);  [CE]  cannot  find  symbol  factory  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  factory);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken,  factory);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  factory	17	None	replace
323	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  token,  typeToken);  [CE]  cannot  find  symbol  token  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  token,  typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  token,  typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  token	26	None	replace
324	[BUG]  [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [CE]  illegal  start  of  type  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(typeToken!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(typeToken);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
325	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  typeToken  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType!=  null)  {  Class  <?>  typeToken  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType!=  null)  {  Class  <?>  typeToken  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(typeToken);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
326	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
327	[BUG]  [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <?>  rawType  =  instanceCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  instanceCreators.get(rawType);	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	51	None	replace
328	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                          ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
329	[BUG]  [BUGGY]  (InstanceCreator  <  T>)  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  (InstanceCreator  <  T>)  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    new    ObjectConstructor    <    T>()    {    return    rawType.createInstance(type);    }    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
330	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  context.get(rawType);  [CE]  cannot  find  symbol  context  [FE]                            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  context.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  context.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  context	19	None	replace
331	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  typeToken.get(rawType);  [CE]  incompatible  types  [FE]                              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  typeToken.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  typeToken.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instances.get(rawType);    	non-compiled	[CE]  incompatible  types	19	None	replace
332	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(typeToken);  [CE]  inconvertible  types  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(typeToken);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(typeToken);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(type);    	non-compiled	[CE]  inconvertible  types	36	None	replace
333	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  this.defaultConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  this.defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	59	None	replace
334	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  objectConstructor);  [CE]  cannot  find  symbol  objectConstructor  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  objectConstructor);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  objectConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  objectConstructor	59	None	replace
335	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  newDefaultConstructor());  [CE]  method  newDefaultConstructor  in  class  ConstructorConstructor  cannot  be  applied  to  given  types;  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  newDefaultConstructor());  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  newDefaultConstructor());	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  newDefaultConstructor  in  class  ConstructorConstructor  cannot  be  applied  to  given  types;	33	None	replace
336	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
337	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
338	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
339	[BUG]  [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isInterface())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType.isInterface())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType    ==    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
340	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)unknownTypeCreators.get(rawType);  [CE]  cannot  find  symbol  unknownTypeCreators  [FE]                ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)unknownTypeCreators.get(rawType);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)unknownTypeCreators.get(rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)typeCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  unknownTypeCreators	34	None	replace
341	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  default);  [CE]  illegal  start  of  expression  [FE]              ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  default);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  default);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken,    factory);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
342	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);  [CE]  incompatible  types  [FE]                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(0);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	15	None	replace
343	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  factory);  [CE]  cannot  find  symbol  factory  [FE]                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  factory);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  factory);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  factory	16	None	replace
344	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  implicitImplementation);  [CE]  cannot  find  symbol  implicitImplementation  [FE]                        ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  implicitImplementation);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken,  implicitImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators    ==    null)?    null    :    instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  implicitImplementation	16	None	replace
345	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  instanceCreators);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  instanceCreators);  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken,  instanceCreators);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	32	None	replace
346	[BUG]  [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                  ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
347	[BUG]  [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                    ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType.isPrimitive())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType.isPrimitive())  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
348	[BUG]  [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                                      ClassCastException      [CONTEXT]      if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(     "unchecked     ")  //  types  must  agree      [BUGGY]  if(rawType  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]      (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(rawType  ==  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	  if(instanceCreators!=    null)    {    Class    <?>    rawType    =    instanceCreators.get(rawType);    if(rawType!=    null)    {    return    defaultConstructor;    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
