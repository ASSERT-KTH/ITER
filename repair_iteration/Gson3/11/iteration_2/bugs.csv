bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]        ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	1	None	replace
2	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	1	None	replace
3	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)  [FE]            ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType,  instanceCreators);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  no  suitable  method  found  for  get(Class<CAP#1>,Map<Type,InstanceCreator<?>>)	1	None	replace
4	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]              ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken,  rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	1	None	replace
5	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  null);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	1	None	replace
6	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  ObjectConstructor.class);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	1	None	replace
7	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  this);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	1	None	replace
8	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawType  =  instanceCreators.get(rawType);	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	6	None	replace
9	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(rawType);	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	6	None	replace
10	[BUG]  [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  illegal  start  of  type  [FE]                      ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  (InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	(InstanceCreator  <  T>)instanceCreators.get(rawType);	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                        ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);	      	non-compiled	[CE]  incompatible  types	6	None	replace
12	[BUG]  [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Class  <?>  rawType  =  typeToken.getRawClass();  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <?>  rawType  =  typeToken.getRawClass();	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	6	None	replace
13	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                            ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType  ==  null)  {  return  defaultConstructor;  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [CE]  illegal  start  of  type  [FE]                              ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  defaultConstructor;  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	5	None	replace
16	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	5	None	replace
17	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                    ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  typeToken);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	5	None	replace
18	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	5	None	replace
19	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                        ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instances.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	5	None	replace
20	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(rawType  ==  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	5	None	replace
21	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	4	None	replace
22	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  type);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	4	None	replace
23	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  null);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	4	None	replace
24	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]                    ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultImplementation);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	4	None	replace
25	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                      ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  this.defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    defaultConstructor);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	4	None	replace
26	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	2	None	replace
27	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	2	None	replace
28	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]              ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeToken.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	2	None	replace
29	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]                ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	2	None	replace
30	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(type);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	2	None	replace
31	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                    ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(typeToken);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	2	None	replace
32	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  typeToken);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	8	None	replace
33	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  defaultConstructor);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	8	None	replace
34	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]            ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)typeCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)typeCreators.get(rawType);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	8	None	replace
35	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [CE]  cannot  find  symbol  defaultImplementation  [FE]              ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  defaultImplementation);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultImplementation	8	None	replace
36	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(type);  [CE]  inconvertible  types  [FE]                ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(type);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(type);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  inconvertible  types	8	None	replace
37	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  modifier  static  not  allowed  here  [FE]        ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	7	None	replace
38	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [CE]  modifier  static  not  allowed  here  [FE]          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	7	None	replace
39	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]            ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)typeCreators.get(rawType);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	7	None	replace
40	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [CE]  modifier  static  not  allowed  here  [FE]              ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	7	None	replace
41	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [CE]  modifier  static  not  allowed  here  [FE]                ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultImplementation);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	7	None	replace
42	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  defaultConstructor);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	3	None	replace
43	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(rawType);  [CE]  cannot  find  symbol  typeCreators  [FE]              ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeCreators.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  typeCreators	3	None	replace
44	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]                ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType,  typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	3	None	replace
45	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(type);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	3	None	replace
46	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(rawType);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                    ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)typeToken.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	3	None	replace
47	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]                      ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(typeToken);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	3	None	replace
48	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]        ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  false);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType,  false);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	8	None	replace
49	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  1);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType  -  1);	  Class    <    T>    rawTypeCreator    =(Class    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	8	None	replace
50	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [CE]  modifier  static  not  allowed  here  [FE]        ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  instanceCreators);	  static    final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	7	None	replace
51	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(rawType);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
52	[BUG]  [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [CE]  illegal  start  of  type  [FE]                    ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	if(instanceCreators!=  null)  {  Class  <?>  rawType  =  instanceCreators.get(typeToken);  if(rawType!=  null)  {  return  new  ObjectConstructor  <  T>()  {  return  rawType.createInstance(type);  }  }	      	non-compiled	[CE]  illegal  start  of  type	6	None	replace
53	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType  -  1);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	2	None	replace
54	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [CE]  cannot  find  symbol  unsafeAllocator  [FE]        ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  unsafeAllocator);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  unsafeAllocator	1	None	replace
55	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  factory);  [CE]  cannot  find  symbol  factory  [FE]          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  factory);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  factory);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  factory	1	None	replace
56	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  false);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]            ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  false);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  false);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	1	None	replace
57	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)defaultConstructor.get(rawType);  [CE]  cannot  find  symbol  defaultConstructor  [FE]            ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)defaultConstructor.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)defaultConstructor.get(rawType);	  ObjectConstructor    <    T>    rawTypeCreator    =(ObjectConstructor    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	3	None	replace
58	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]                ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(rawType!=  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	5	None	replace
59	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	5	None	replace
60	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instances.get(rawType);  [CE]  cannot  find  symbol  instances  [FE]                    ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instances.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instances.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  cannot  find  symbol  instances	5	None	replace
61	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	6	None	replace
62	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                    ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(type);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(type);	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	6	None	replace
63	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);  [CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)  [FE]                      ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawType  =  instanceCreators.get(typeToken);	      	non-compiled	[CE]  variable  rawType  is  already  defined  in  method  <T>get(TypeToken<T>)	6	None	replace
64	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	5	None	replace
65	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]                  ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators  ==  null)?  null  :  instanceCreators.get(rawType);	  final    InstanceCreator    <    T>    rawTypeCreator    =(instanceCreators!=    null)?    null    :    instanceCreators.get(rawType);    	non-compiled	[CE]  modifier  static  not  allowed  here	5	None	replace
66	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]          ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =  instanceCreators.get(rawType);	  InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType);    	non-compiled	[CE]  incompatible  types	2	None	replace
67	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]        ClassCastException    [CONTEXT]    if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings(   "unchecked   ")  //  types  must  agree    [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);  [BUGGY]    (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken,  defaultConstructor);	  final    InstanceCreator    <    T>    rawTypeCreator    =(InstanceCreator    <    T>)instanceCreators.get(rawType,    typeToken);    	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	1	None	replace
