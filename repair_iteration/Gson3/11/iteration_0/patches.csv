bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;  [FE]    ClassCastException  [CONTEXT]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);  [BUGGY]  (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  typeToken);	final  InstanceCreator<T>  rawTypeCreator  =  (InstanceCreator<T>)  instanceCreators.get(rawType);  	non-compiled	[CE]  method  get  in  interface  Map<K,V>  cannot  be  applied  to  given  types;	21	None	replace
2	[BUG]  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]      ClassCastException  [CONTEXT]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]  (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	final  InstanceCreator<T>  rawTypeCreator  =  (InstanceCreator<T>)  instanceCreators.get(rawType);  	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	21	None	replace
3	[BUG]  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final  [FE]        ClassCastException  [CONTEXT]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);  [BUGGY]  (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	ObjectConstructor  <  T>  rawTypeCreator  =(ObjectConstructor  <  T>)instanceCreators.get(rawType);	final  InstanceCreator<T>  rawTypeCreator  =  (InstanceCreator<T>)  instanceCreators.get(rawType);  	non-compiled	[CE]  local  variable  rawTypeCreator  is  accessed  from  within  inner  class;  needs  to  be  declared  final	21	None	replace
4	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [CE]  cannot  find  symbol  defaultConstructor  [FE]          ClassCastException  [CONTEXT]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);  [BUGGY]  (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType,  defaultConstructor);	final  InstanceCreator<T>  rawTypeCreator  =  (InstanceCreator<T>)  instanceCreators.get(rawType);  	non-compiled	[CE]  cannot  find  symbol  defaultConstructor	21	None	replace
5	[BUG]  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [CE]  incompatible  types  [FE]            ClassCastException  [CONTEXT]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);  [BUGGY]  (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	final  InstanceCreator  <  T>  rawTypeCreator  =(instanceCreators!=  null)?  null  :  instanceCreators.get(rawType);	final  InstanceCreator<T>  rawTypeCreator  =  (InstanceCreator<T>)  instanceCreators.get(rawType);  	non-compiled	[CE]  incompatible  types	21	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              ClassCastException  [CONTEXT]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]    [BUGGY]  (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	  	final  InstanceCreator<T>  rawTypeCreator  =  (InstanceCreator<T>)  instanceCreators.get(rawType);  	non-compiled	[CE]  illegal  start  of  type	21	None	replace
7	[BUG]  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [CE]  modifier  static  not  allowed  here  [FE]    ClassCastException  [CONTEXT]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);  [BUGGY]  (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	static  final  InstanceCreator  <  T>  rawTypeCreator  =(InstanceCreator  <  T>)instanceCreators.get(rawType);	final  InstanceCreator<T>  rawTypeCreator  =  (InstanceCreator<T>)  instanceCreators.get(rawType);  	non-compiled	[CE]  modifier  static  not  allowed  here	21	None	replace
8	[BUG]  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType);  [CE]  inconvertible  types  [FE]    ClassCastException  [CONTEXT]  if  (typeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  typeCreator.createInstance(type);  }  };  }  @SuppressWarnings( "unchecked ")  //  types  must  agree  [BUGGY]  Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType);  [BUGGY]  (InstanceCreator<T>)  instanceCreators.get(rawType);  if  (rawTypeCreator  !=  null)  {  return  new  ObjectConstructor<T>()  {  @Override  public  T  construct()  {  return  rawTypeCreator.createInstance(type);  }  };  }  ObjectConstructor<T>  defaultConstructor  =  newDefaultConstructor(rawType);  [CLASS]  ConstructorConstructor  1  2  3  4  5  6  7  8  9  10  11  12  [METHOD]  get  [RETURN_TYPE]  <T>  TypeToken<T>  typeToken  [VARIABLES]  Type  type  UnsafeAllocator  unsafeAllocator  boolean  InstanceCreator  rawTypeCreator  typeCreator  TypeToken  typeToken  ObjectConstructor  defaultConstructor  defaultImplementation  Class  rawType  Map  instanceCreators  	projects/Gson3/gson/src/main/java/com/google/gson/internal/ConstructorConstructor.java	0.21566554640687682	69	70	2	replace	Class  <  T>  rawTypeCreator  =(Class  <  T>)instanceCreators.get(rawType);	final  InstanceCreator<T>  rawTypeCreator  =  (InstanceCreator<T>)  instanceCreators.get(rawType);  	non-compiled	[CE]  inconvertible  types	21	None	replace
