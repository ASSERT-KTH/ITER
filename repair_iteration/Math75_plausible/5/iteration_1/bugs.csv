bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  getCumFreq(Long.parseLong(v));  [CE]  no  suitable  method  found  for  parseLong(long)  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]  return  getCumFreq(Long.parseLong(v));  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.parseLong(v));	return  getCumFreq(Long.valueOf(v));  	non-compiled	[CE]  no  suitable  method  found  for  parseLong(long)	9	None	replace
2	[BUG]  [BUGGY]  return  getFreq(Long.valueOf(v));  [CE]  cannot  find  symbol  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]  return  getFreq(Long.valueOf(v));  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getFreq(Long.valueOf(v));	return  getCumFreq(Long.valueOf(v));  	non-compiled	[CE]  cannot  find  symbol	9	None	replace
3	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]        AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]  return  getCumFreq(Long.MAX_VALUE);  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  getCumFreq(Long.MAX_VALUE);	return  getCumFreq(Long.valueOf(v));  	compilable	  [FE]  StackOverflowError  	9	3	replace
4	[BUG]  [BUGGY]  return  getCumFreq(Long.MAX_VALUE);  [FE]  StackOverflowError  [FE]        AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]  return  getCumFreq(Long.MAX_VALUE);  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(Long.MAX_VALUE);	return  getCumFreq(Long.valueOf(v));  	compilable	  [FE]  StackOverflowError  	9	3	replace
5	[BUG]  [BUGGY]    [CE]  missing  return  statement  [FE]          AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	  	return  getCumFreq(Long.valueOf(v));  	non-compiled	[CE]  missing  return  statement	9	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  sumFreq  =  getCumFreq(Long.valueOf(v));  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	    long  sumFreq  =  getCumFreq(Long.valueOf(v));		compilable	  [FE]  AssertionFailedError  	10	1	add
7	[BUG]  [BUGGY]    long  sumFreq  =  getCumFreq(Long.valueOf(v));  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  sumFreq  =  getCumFreq(Long.valueOf(v));  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    long  sumFreq  =  getCumFreq(Long.valueOf(v));		compilable	  [FE]  AssertionFailedError  	10	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	    long  result  =  getCumFreq(Long.valueOf(v));		compilable	  [FE]  AssertionFailedError  	10	1	add
9	[BUG]  [BUGGY]    long  result  =  getCumFreq(Long.valueOf(v));  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  result  =  getCumFreq(Long.valueOf(v));  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    long  result  =  getCumFreq(Long.valueOf(v));		compilable	  [FE]  AssertionFailedError  	10	1	add
10	[BUG]  [BUGGY]    long  v  =  getCumFreq(Long.valueOf(v));  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]        AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  v  =  getCumFreq(Long.valueOf(v));  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    long  v  =  getCumFreq(Long.valueOf(v));		non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	10	None	add
11	[BUG]  [BUGGY]    this.sumFreq  =  getCumFreq(v);  [CE]  cannot  find  symbol  sumFreq  [FE]          AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    this.sumFreq  =  getCumFreq(v);  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    this.sumFreq  =  getCumFreq(v);		non-compiled	[CE]  cannot  find  symbol  sumFreq	10	None	add
12	[BUG]  [BUGGY]    long  sumFreq  =  getSumFreq(v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  sumFreq  =  getSumFreq(v);  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    long  sumFreq  =  getSumFreq(v);		non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	10	None	add
13	[BUG]  [BUGGY]  return  getCumFreq(long.valueOf(v));  [CE]  class  expected  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]  return  getCumFreq(long.valueOf(v));  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(long.valueOf(v));	return  getCumFreq(Long.valueOf(v));  	non-compiled	[CE]  class  expected	9	None	replace
14	[BUG]  [BUGGY]    long  sumFreq  =  freqTable.getCumFreq(v);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  sumFreq  =  freqTable.getCumFreq(v);  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    long  sumFreq  =  freqTable.getCumFreq(v);		non-compiled	[CE]  cannot  find  symbol	10	None	add
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  sumFreq  =  getCumFreq(new  Long(v));  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	    long  sumFreq  =  getCumFreq(new  Long(v));		compilable	  [FE]  AssertionFailedError  	10	1	add
16	[BUG]  [BUGGY]    long  sumFreq  =  getCumFreq(new  Long(v));  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  sumFreq  =  getCumFreq(new  Long(v));  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    long  sumFreq  =  getCumFreq(new  Long(v));		compilable	  [FE]  AssertionFailedError  	10	1	add
17	[BUG]  [BUGGY]    int  v  =  freqTable.size();  [CE]  variable  v  is  already  defined  in  method  getCumFreq(long)  [FE]        AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    int  v  =  freqTable.size();  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    int  v  =  freqTable.size();		non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(long)	10	None	add
18	[BUG]  [BUGGY]    return  sumFreq.longValue();  [CE]  cannot  find  symbol  sumFreq  [FE]          AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    return  sumFreq.longValue();  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    return  sumFreq.longValue();		non-compiled	[CE]  cannot  find  symbol  sumFreq	10	None	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]  return  getCumFreq(new  Long(v));  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	return  getCumFreq(new  Long(v));	return  getCumFreq(Long.valueOf(v));  	compilable	  [FE]  AssertionFailedError  	9	1	replace
20	[BUG]  [BUGGY]  return  getCumFreq(new  Long(v));  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]  return  getCumFreq(new  Long(v));  [BUGGY]  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	return  getCumFreq(new  Long(v));	return  getCumFreq(Long.valueOf(v));  	compilable	  [FE]  AssertionFailedError  	9	1	replace
21	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  sumFreq  =  getCumFreq(v);  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	add	    long  sumFreq  =  getCumFreq(v);		compilable	  [FE]  StackOverflowError  	10	3	add
22	[BUG]  [BUGGY]    long  sumFreq  =  getCumFreq(v);  [FE]  StackOverflowError  [FE]    AssertionFailedError  [CONTEXT]  public  long  getCumFreq(long  v)  {  [BUGGY]    long  sumFreq  =  getCumFreq(v);  [BUGGY]  return  getCumFreq(Long.valueOf(v));  }  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  long  v  [VARIABLES]  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  boolean  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	444	444	1	replace	    long  sumFreq  =  getCumFreq(v);		compilable	  [FE]  StackOverflowError  	10	3	add
