bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	        ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();	  	compilable	  [FE]  AssertionFailedError  	8	1	add
2	[BUG]  [BUGGY]      ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();	  	compilable	  [FE]  AssertionFailedError  	8	1	add
3	[BUG]  [BUGGY]      ((  Integer)v).doubleValue();  (1(  Integer)v).doubleValue();  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).doubleValue();  (1(  Integer)v).doubleValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).doubleValue();    (1(  Integer)v).doubleValue();	  	non-compiled	[CE]  ')'  expected	8	None	add
4	[BUG]  [BUGGY]      ((  Integer)v).doubleValue();  (  Integer)v).doubleValue();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).doubleValue();  (  Integer)v).doubleValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).doubleValue();    (  Integer)v).doubleValue();	  	non-compiled	[CE]  not  a  statement	8	None	add
5	[BUG]  [BUGGY]      (Integer)freqTable.get(v);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      (Integer)freqTable.get(v);  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        (Integer)freqTable.get(v);	  	non-compiled	[CE]  not  a  statement	6	None	add
6	[BUG]  [BUGGY]      return  sumFreq.longValue();  [CE]  cannot  find  symbol  sumFreq  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      return  sumFreq.longValue();  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        return  sumFreq.longValue();	  	non-compiled	[CE]  cannot  find  symbol  sumFreq	6	None	add
7	[BUG]  [BUGGY]      Integer  nextValue  =  getNextValue();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      Integer  nextValue  =  getNextValue();  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        Integer  nextValue  =  getNextValue();	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
8	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  values);  [CE]  cannot  find  symbol  values  [FE]            AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  values);  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  values);	      Iterator    <    Long>    freqTable    =    getFreqTable(v);    	non-compiled	[CE]  cannot  find  symbol  values	19	None	replace
9	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v.longValue());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v.longValue());  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v.longValue());	      Iterator    <    Long>    freqTable    =    getFreqTable(v);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
10	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v.intValue());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v.intValue());  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v.intValue());	      Iterator    <    Long>    freqTable    =    getFreqTable(v);    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
11	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =((  Integer)v).doubleValue();  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Iterator  <  Long>  freqTable  =((  Integer)v).doubleValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =((  Integer)v).doubleValue();	      Iterator    <    Long>    freqTable    =((    Integer)v).intValue();    	non-compiled	[CE]  incompatible  types	20	None	replace
12	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =((  Long)v).longValue();  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Iterator  <  Long>  freqTable  =((  Long)v).longValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =((  Long)v).longValue();	      Iterator    <    Long>    freqTable    =((    Integer)v).intValue();    	non-compiled	[CE]  incompatible  types	20	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  ((  Integer)v).floatValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	((  Integer)v).floatValue();	      ((    Integer)v).longValue();    	compilable	  [FE]  AssertionFailedError  	11	3	replace
14	[BUG]  [BUGGY]  ((  Integer)v).floatValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  ((  Integer)v).floatValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).floatValue();	      ((    Integer)v).longValue();    	compilable	  [FE]  AssertionFailedError  	11	3	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).intValue();  ((  Integer)v).intValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	        ((    Integer)v).intValue();    ((  Integer)v).intValue();	  	compilable	  [FE]  AssertionFailedError  	16	1	add
16	[BUG]  [BUGGY]      ((  Integer)v).intValue();  ((  Integer)v).intValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).intValue();  ((  Integer)v).intValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).intValue();    ((  Integer)v).intValue();	  	compilable	  [FE]  AssertionFailedError  	16	1	add
17	[BUG]  [BUGGY]      ((  Integer)v).intValue();  (1(  Integer)v).intValue();  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).intValue();  (1(  Integer)v).intValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).intValue();    (1(  Integer)v).intValue();	  	non-compiled	[CE]  ')'  expected	16	None	add
18	[BUG]  [BUGGY]  ((  Integer)v).intValue());  [CE]  ';'  expected  [FE]                AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  ((  Integer)v).intValue());  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).intValue());	      ((    Integer)v).longValue());    	non-compiled	[CE]  ';'  expected	15	None	replace
19	[BUG]  [BUGGY]  ((  Integer)v).floatValue());  [CE]  ';'  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  ((  Integer)v).floatValue());  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).floatValue());	      ((    Integer)v).longValue());    	non-compiled	[CE]  ';'  expected	15	None	replace
20	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).doubleValue());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getMeanValue(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).doubleValue());	  return    getMeanValue(((Integer)v).longValue());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
21	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).intValue());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getMeanValue(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).intValue());	  return    getMeanValue(((Integer)v).longValue());    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
22	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  value);  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  value);  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).longValue(),  value);	  return    getMeanValue(((Integer)v).longValue());    	non-compiled	[CE]  cannot  find  symbol  value	22	None	replace
23	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue());  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getSumFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue());	  return    getSumFreq(((Integer)v).longValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	5	None	replace
24	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  value);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  value);  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  value);	  return    getSumFreq(((Integer)v).longValue());    	non-compiled	[CE]  cannot  find  symbol  value	5	None	replace
25	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  0);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  0);  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  0);	  return    getSumFreq(((Integer)v).longValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	5	None	replace
26	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  0);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  0);  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  0);	  return    getSumFreq(((Integer)v).longValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	5	None	replace
27	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  return  getCumFreq(((Integer)v).doubleValue());  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    return  getCumFreq(((Integer)v).doubleValue());	  	non-compiled	[CE]  unreachable  statement	3	None	add
28	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());	  	non-compiled	[CE]  not  a  statement	3	None	add
29	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).doubleValue());  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).doubleValue());	  	non-compiled	[CE]  >  expected	3	None	add
30	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  }  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  }	  	non-compiled	[CE]  not  a  statement	3	None	add
31	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).doubleValue());  }  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).doubleValue());  }  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).doubleValue());  }	  	non-compiled	[CE]  >  expected	3	None	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).longValue();  ((  Integer)v).longValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	        ((    Integer)v).longValue();    ((  Integer)v).longValue();	  	compilable	  [FE]  AssertionFailedError  	10	1	add
33	[BUG]  [BUGGY]      ((  Integer)v).longValue();  ((  Integer)v).longValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).longValue();  ((  Integer)v).longValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).longValue();    ((  Integer)v).longValue();	  	compilable	  [FE]  AssertionFailedError  	10	1	add
34	[BUG]  [BUGGY]      ((  Integer)v).longValue();  (1(  Integer)v).longValue();  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).longValue();  (1(  Integer)v).longValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).longValue();    (1(  Integer)v).longValue();	  	non-compiled	[CE]  ')'  expected	10	None	add
35	[BUG]  [BUGGY]      ((  Integer)v).longValue();  (  Integer)v).longValue();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).longValue();  (  Integer)v).longValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).longValue();    (  Integer)v).longValue();	  	non-compiled	[CE]  not  a  statement	10	None	add
36	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v.intValue();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Integer  nextValue  =(Integer)v.intValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v.intValue();	      Integer    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
37	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)values.get(v);  [CE]  cannot  find  symbol  values  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Integer  nextValue  =(Integer)values.get(v);  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)values.get(v);	      Integer    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol  values	13	None	replace
38	[BUG]  [BUGGY]  Integer  nextValue  =(int)v;  [CE]  inconvertible  types  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Integer  nextValue  =(int)v;  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(int)v;	      Integer    nextValue    =(Integer)v;    	non-compiled	[CE]  inconvertible  types	13	None	replace
39	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  return  getCumFreq(((Integer)v).intValue());  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  return  getCumFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    return  getCumFreq(((Integer)v).intValue());	  	non-compiled	[CE]  unreachable  statement	1	None	add
40	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue());  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue());	  	non-compiled	[CE]  not  a  statement	1	None	add
41	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).intValue());  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).intValue());	  	non-compiled	[CE]  >  expected	1	None	add
42	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue());  }  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue());  }  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue());  }	  	non-compiled	[CE]  not  a  statement	1	None	add
43	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <  Comparable  <?  >=  :  getCumFreq(((Integer)v).intValue());  [CE]  >  expected  [FE]            AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <  Comparable  <?  >=  :  getCumFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Comparator  <  Comparable  <?  >=  :  getCumFreq(((Integer)v).intValue());	  	non-compiled	[CE]  >  expected	1	None	add
44	[BUG]  [BUGGY]  ((  Integer)v).doubleValue()  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  ((  Integer)v).doubleValue()  -  1);  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue()  -  1);	      ((    Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	14	None	replace
45	[BUG]  [BUGGY]  (Integer)v).doubleValue();  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  (Integer)v).doubleValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(Integer)v).doubleValue();	      ((    Integer)v).doubleValue();    	non-compiled	[CE]  not  a  statement	9	None	replace
46	[BUG]  [BUGGY]  ((  Integer)v).doubleValue()  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  ((  Integer)v).doubleValue()  +  1;  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue()  +  1;	      ((    Integer)v).doubleValue();    	non-compiled	[CE]  not  a  statement	9	None	replace
47	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).doubleValue());  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getSumFreq(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	4	None	replace
48	[BUG]  [BUGGY]      Integer  nextValue  =(Integer)v;  Integer  nextValue  =(Integer)v;  [CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      Integer  nextValue  =(Integer)v;  Integer  nextValue  =(Integer)v;  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        Integer    nextValue    =(Integer)v;    Integer  nextValue  =(Integer)v;	  	non-compiled	[CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)	12	None	add
49	[BUG]  [BUGGY]      Integer  nextValue  =(Integer)v;  Long  nextValue  =(Integer)v;  [CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      Integer  nextValue  =(Integer)v;  Long  nextValue  =(Integer)v;  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        Integer    nextValue    =(Integer)v;    Long  nextValue  =(Integer)v;	  	non-compiled	[CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)	12	None	add
50	[BUG]  [BUGGY]      Integer  nextValue  =(Integer)v;  Atteger  nextValue  =(Integer)v;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      Integer  nextValue  =(Integer)v;  Atteger  nextValue  =(Integer)v;  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        Integer    nextValue    =(Integer)v;    Atteger  nextValue  =(Integer)v;	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
51	[BUG]  [BUGGY]      Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)v;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)v;  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        Integer    nextValue    =(Integer)v;    Theger  nextValue  =(Integer)v;	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
52	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable().iterator();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable().iterator();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable().iterator();	      Iterator    <    Long>    freqTable    =    getFreqTable();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
53	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getSumFreqTable();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Iterator  <  Long>  freqTable  =  getSumFreqTable();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getSumFreqTable();	      Iterator    <    Long>    freqTable    =    getFreqTable();    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
54	[BUG]  [BUGGY]      Integer  nextValue  =(Integer)v;  Forteger  nextValue  =(Integer)v;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      Integer  nextValue  =(Integer)v;  Forteger  nextValue  =(Integer)v;  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        Integer    nextValue    =(Integer)v;    Forteger  nextValue  =(Integer)v;	  	non-compiled	[CE]  cannot  find  symbol	12	None	add
55	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  v);  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  v);	  return    getSumFreq(((Integer)v).longValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	5	None	replace
56	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Return  getCumFreq(((Integer)v).doubleValue());  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Return  getCumFreq(((Integer)v).doubleValue());	  	non-compiled	[CE]  ';'  expected	3	None	add
57	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  }  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  }  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  }	  	non-compiled	[CE]  not  a  statement	3	None	add
58	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());	  	non-compiled	[CE]  not  a  statement	3	None	add
59	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());	  	non-compiled	[CE]  cannot  find  symbol	3	None	add
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      Integer  freqTable  =(Integer)v;  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	        Integer  freqTable  =(Integer)v;	  	compilable	  [FE]  AssertionFailedError  	6	1	add
61	[BUG]  [BUGGY]      Integer  freqTable  =(Integer)v;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      Integer  freqTable  =(Integer)v;  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        Integer  freqTable  =(Integer)v;	  	compilable	  [FE]  AssertionFailedError  	6	1	add
62	[BUG]  [BUGGY]      ((  Integer)v).intValue();  ((  Integer)v).intValue());  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).intValue();  ((  Integer)v).intValue());  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).intValue();    ((  Integer)v).intValue());	  	non-compiled	[CE]  ';'  expected	16	None	add
63	[BUG]  [BUGGY]      ((  Integer)v).intValue();  [(  Integer)v).intValue();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).intValue();  [(  Integer)v).intValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).intValue();    [(  Integer)v).intValue();	  	non-compiled	[CE]  illegal  start  of  expression	16	None	add
64	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Return  getCumFreq(((Integer)v).intValue());  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Return  getCumFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Return  getCumFreq(((Integer)v).intValue());	  	non-compiled	[CE]  ';'  expected	1	None	add
65	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparable  <?  >>  return  getCumFreq(((Integer)v).intValue());  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparable  <?  >>  return  getCumFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Comparable  <?  >>  return  getCumFreq(((Integer)v).intValue());	  	non-compiled	[CE]  not  a  statement	1	None	add
66	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
67	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue();  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue();  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue();	  	non-compiled	[CE]  ')'  expected	1	None	add
68	[BUG]  [BUGGY]      ((  Integer)v).longValue();  ((  Integer)v2).longValue();  [CE]  cannot  find  symbol  v2  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).longValue();  ((  Integer)v2).longValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).longValue();    ((  Integer)v2).longValue();	  	non-compiled	[CE]  cannot  find  symbol  v2	10	None	add
69	[BUG]  [BUGGY]      ((  Integer)v).doubleValue();  [(  Integer)v).doubleValue();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).doubleValue();  [(  Integer)v).doubleValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).doubleValue();    [(  Integer)v).doubleValue();	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	return  getCumFreq(((Integer)v).intValue()  -  1);	  return    getCumFreq(((Integer)v).intValue());    	compilable	  [FE]  AssertionFailedError  	2	3	replace
71	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getCumFreq(((Integer)v).intValue()  -  1);	  return    getCumFreq(((Integer)v).intValue());    	compilable	  [FE]  AssertionFailedError  	2	3	replace
72	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <?  >>  return  getCumFreq(((Integer)v).intValue());  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Comparator  <?  >>  return  getCumFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Comparator  <?  >>  return  getCumFreq(((Integer)v).intValue());	  	non-compiled	[CE]  not  a  statement	1	None	add
73	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  getCumFreq(((Integer)v).intValue());  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  getCumFreq(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    getCumFreq(((Integer)v).intValue());	  	non-compiled	[CE]  unreachable  statement	1	None	add
74	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Iterator  <  Long>  freqTable  =  getFreqTable(((Integer)v).intValue());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).intValue());  Iterator  <  Long>  freqTable  =  getFreqTable(((Integer)v).intValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue());    Iterator  <  Long>  freqTable  =  getFreqTable(((Integer)v).intValue());	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
75	[BUG]  [BUGGY]      ((  Integer)v).intValue();  (1  <  Integer)v).intValue();  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).intValue();  (1  <  Integer)v).intValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).intValue();    (1  <  Integer)v).intValue();	  	non-compiled	[CE]  not  a  statement	16	None	add
76	[BUG]  [BUGGY]      ((  Integer)v).doubleValue();  (1  ((  Integer)v).doubleValue();  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).doubleValue();  (1  ((  Integer)v).doubleValue();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).doubleValue();    (1  ((  Integer)v).doubleValue();	  	non-compiled	[CE]  ')'  expected	8	None	add
77	[BUG]  [BUGGY]      ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue());	  	non-compiled	[CE]  ';'  expected	8	None	add
78	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparable  <?  >>  return  getCumFreq(((Integer)v).doubleValue());  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparable  <?  >>  return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Comparable  <?  >>  return  getCumFreq(((Integer)v).doubleValue());	  	non-compiled	[CE]  not  a  statement	3	None	add
79	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  getCumFreq(((Integer)v).doubleValue());  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  getCumFreq(((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    getCumFreq(((Integer)v).doubleValue());	  	non-compiled	[CE]  unreachable  statement	3	None	add
80	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  ((Integer)v).doubleValue());  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  return  getCumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  ((Integer)v).doubleValue());  [BUGGY]    }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).doubleValue());    Comparator  <  Comparable  <?  >>  ((Integer)v).doubleValue());	  	non-compiled	[CE]  not  a  statement	3	None	add
81	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  values.iterator().next();  [CE]  cannot  find  symbol  values  [FE]        AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]  Iterator  <  Long>  freqTable  =  values.iterator().next();  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  values.iterator().next();	      Iterator    <    Long>    freqTable    =((    Integer)v).intValue();    	non-compiled	[CE]  cannot  find  symbol  values	20	None	replace
82	[BUG]  [BUGGY]      ((  Integer)v).longValue();  ((  Integer)v).longValue());  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {    [BUGGY]      ((  Integer)v).longValue();  ((  Integer)v).longValue());  [BUGGY]    return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	        ((    Integer)v).longValue();    ((  Integer)v).longValue());	  	non-compiled	[CE]  ';'  expected	10	None	add
