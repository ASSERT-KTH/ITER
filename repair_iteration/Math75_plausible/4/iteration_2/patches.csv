bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).intValue();  ((  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	                ((        Integer)v).intValue();        ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).intValue();	  	compilable	  [FE]  AssertionFailedError  	15	1	add
2	[BUG]  [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).intValue();  ((  Integer)v).intValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).intValue();  ((  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).intValue();        ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).intValue();	  	compilable	  [FE]  AssertionFailedError  	15	1	add
3	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getSumFreqTable().iterator();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getSumFreqTable().iterator();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getSumFreqTable().iterator();	  Iterator    <    Long>    freqTable    =    getFreqTable().iterator();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
4	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  values.iterator();  [CE]  cannot  find  symbol  values  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  values.iterator();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  values.iterator();	  Iterator    <    Long>    freqTable    =    getFreqTable().iterator();    	non-compiled	[CE]  cannot  find  symbol  values	52	None	replace
5	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable().entrySet().iterator();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable().entrySet().iterator();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable().entrySet().iterator();	  Iterator    <    Long>    freqTable    =    getFreqTable().iterator();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
6	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).doubleValue();  }  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).doubleValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).doubleValue();  }	  return    getCumFreq(((Integer)v).doubleValue());    Return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	56	None	replace
7	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).doubleValue();  }  else  {  return  getSumFreq((  Integer)v);  }  [CE]  long  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).doubleValue();  }  else  {  return  getSumFreq((  Integer)v);  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).doubleValue();  }  else  {  return  getSumFreq((  Integer)v);  }	  return    getCumFreq(((Integer)v).doubleValue());    Return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	56	None	replace
8	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >>  ((  Integer)v).doubleValue());  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >>  ((  Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >>  ((  Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >>    ((Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	80	None	replace
9	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >=  ((  Integer)v).doubleValue());  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >=  ((  Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >=  ((  Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >>    ((Integer)v).doubleValue());    	non-compiled	[CE]  >  expected	80	None	replace
10	[BUG]  [BUGGY]  ((  Integer)v2).doubleValue();  [CE]  cannot  find  symbol  v2  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v2).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v2).doubleValue();	          ((    Integer)v).longValue();    ((    Integer)v2).longValue();    	non-compiled	[CE]  cannot  find  symbol  v2	68	None	replace
11	[BUG]  [BUGGY]  return  getFreq(((Integer)v).intValue());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparator    <    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
12	[BUG]  [BUGGY]  ((  Integer)v).doubleValue().doubleValue());  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue().doubleValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue().doubleValue());	  ((    Integer)v).doubleValue()    -    1);    	non-compiled	[CE]  ';'  expected	44	None	replace
13	[BUG]  [BUGGY]  ((  Integer)v).doubleValue().longValue());  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue().longValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue().longValue());	  ((    Integer)v).doubleValue()    -    1);    	non-compiled	[CE]  ';'  expected	44	None	replace
14	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  freqTable.iterator().next();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  freqTable.iterator().next();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  freqTable.iterator().next();	  Iterator    <    Long>    freqTable    =    values.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
15	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  v.iterator().next();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  v.iterator().next();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  v.iterator().next();	  Iterator    <    Long>    freqTable    =    values.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
16	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  this.freqTable.iterator().next();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  this.freqTable.iterator().next();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  this.freqTable.iterator().next();	  Iterator    <    Long>    freqTable    =    values.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
17	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  sumFreqTable.iterator().next();  [CE]  cannot  find  symbol  sumFreqTable  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  sumFreqTable.iterator().next();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  sumFreqTable.iterator().next();	  Iterator    <    Long>    freqTable    =    values.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  sumFreqTable	81	None	replace
18	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Long  nextValue  =(Long)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	Long  nextValue  =(Long)v;	  Integer    nextValue    =(int)v;    	compilable	  [FE]  ClassCastException  	38	3	replace
19	[BUG]  [BUGGY]  Long  nextValue  =(Long)v;  [FE]  ClassCastException  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Long  nextValue  =(Long)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Long  nextValue  =(Long)v;	  Integer    nextValue    =(int)v;    	compilable	  [FE]  ClassCastException  	38	3	replace
20	[BUG]  [BUGGY]  Integer  nextValue  =(int)v.intValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(int)v.intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(int)v.intValue();	  Integer    nextValue    =(int)v;    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
21	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  }  else  {  getCumFreq((  Integer)v).intValue());  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  }  else  {  getCumFreq((  Integer)v).intValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  }  else  {  getCumFreq((  Integer)v).intValue());  }	  return    getCumFreq(((Integer)v).intValue());    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  ';'  expected	73	None	replace
22	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).intValue();  }  [CE]  long  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).intValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).intValue();  }	  return    getCumFreq(((Integer)v).intValue());    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	73	None	replace
23	[BUG]  [BUGGY]  getSumFreq((  Integer)v).intValue());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  getSumFreq((  Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	getSumFreq((  Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  ';'  expected	73	None	replace
24	[BUG]  [BUGGY]  return  getFreqTable(((Integer)v).intValue());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getFreqTable(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getFreqTable(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreqTable(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
25	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable((  Integer)v).intValue());  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable((  Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable((  Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreqTable(((Integer)v).intValue());    	non-compiled	[CE]  ';'  expected	74	None	replace
26	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable((  Integer)v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable((  Integer)v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable((  Integer)v);	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreqTable(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
27	[BUG]  [BUGGY]  (Integer)v).longValue();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (Integer)v).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(Integer)v).longValue();	          ((    Integer)v).longValue();    (    Integer)v).longValue();    	non-compiled	[CE]  not  a  statement	35	None	replace
28	[BUG]  [BUGGY]  Comparator  <?  >>  return  getSumFreq(((Integer)v).intValue());  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <?  >>  return  getSumFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <?  >>  return  getSumFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparator    <?    >>    return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  not  a  statement	72	None	replace
29	[BUG]  [BUGGY]          Integer  freqTable  =(Integer)v;  Integer  freqTable  =(Integer)v;  [CE]  variable  freqTable  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          Integer  freqTable  =(Integer)v;  Integer  freqTable  =(Integer)v;  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                Integer    freqTable    =(Integer)v;    Integer  freqTable  =(Integer)v;	  	non-compiled	[CE]  variable  freqTable  is  already  defined  in  method  getCumFreq(Comparable<?>)	60	None	add
30	[BUG]  [BUGGY]          Integer  freqTable  =(Integer)v;  Long  freqTable  =(Integer)v;  [CE]  variable  freqTable  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          Integer  freqTable  =(Integer)v;  Long  freqTable  =(Integer)v;  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                Integer    freqTable    =(Integer)v;    Long  freqTable  =(Integer)v;	  	non-compiled	[CE]  variable  freqTable  is  already  defined  in  method  getCumFreq(Comparable<?>)	60	None	add
31	[BUG]  [BUGGY]          Integer  freqTable  =(Integer)v;  Atteger  freqTable  =(Integer)v;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          Integer  freqTable  =(Integer)v;  Atteger  freqTable  =(Integer)v;  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                Integer    freqTable    =(Integer)v;    Atteger  freqTable  =(Integer)v;	  	non-compiled	[CE]  cannot  find  symbol	60	None	add
32	[BUG]  [BUGGY]          Integer  freqTable  =(Integer)v;  integer  freqTable  =(Integer)v;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          Integer  freqTable  =(Integer)v;  integer  freqTable  =(Integer)v;  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                Integer    freqTable    =(Integer)v;    integer  freqTable  =(Integer)v;	  	non-compiled	[CE]  cannot  find  symbol	60	None	add
33	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >>  :  getCumFreq((  Integer)v).intValue());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >>  :  getCumFreq((  Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >>  :  getCumFreq((  Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparator    <    Comparable    <?    >=    :    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  not  a  statement	43	None	replace
34	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >>  :  getCumFreq((  Integer)v);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >>  :  getCumFreq((  Integer)v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >>  :  getCumFreq((  Integer)v);	  return    getCumFreq(((Integer)v).intValue());    Comparator    <    Comparable    <?    >=    :    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  not  a  statement	43	None	replace
35	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >=  :  getCumFreq((  Integer)v).intValue());  [CE]  >  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >=  :  getCumFreq((  Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >=  :  getCumFreq((  Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparator    <    Comparable    <?    >=    :    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  >  expected	43	None	replace
36	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreq((  Integer)v);	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).intValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).intValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).intValue();	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
38	[BUG]  [BUGGY]  Comparable  <?  >>  return  getCumFreq(((Integer)v).doubleValue());  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  return  getCumFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Comparable    <?    >>    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	78	None	replace
39	[BUG]  [BUGGY]  Comparable  <?  >>  return  getSumFreq(((Integer)v).doubleValue());  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  return  getSumFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  return  getSumFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Comparable    <?    >>    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	78	None	replace
40	[BUG]  [BUGGY]  Comparable  <?  >>  return  getCumFreq((  Integer)v).doubleValue());  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  return  getCumFreq((  Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  return  getCumFreq((  Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Comparable    <?    >>    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	78	None	replace
41	[BUG]  [BUGGY]  (1(Integer)v).doubleValue();  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1(Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1(Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    (1(    Integer)v).doubleValue();    	non-compiled	[CE]  ')'  expected	3	None	replace
42	[BUG]  [BUGGY]  (1  <  <  Integer)v).doubleValue();  [CE]  >  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  <  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  <  Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    (1(    Integer)v).doubleValue();    	non-compiled	[CE]  >  expected	3	None	replace
43	[BUG]  [BUGGY]  (1  <  <  (Integer)v).doubleValue();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  <  (Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  <  (Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    (1(    Integer)v).doubleValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Atteger  nextValue  =(Integer)nextValue;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Atteger  nextValue  =(Integer)nextValue;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Atteger  nextValue  =(Integer)nextValue;	          Integer    nextValue    =(Integer)v;    Atteger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
45	[BUG]  [BUGGY]  Atteger  nextValue  =(Integer)v;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Atteger  nextValue  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Atteger  nextValue  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Atteger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
46	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Atteger  v  =(Integer)v;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Atteger  v  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Atteger  v  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Atteger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
47	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  }	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    }    	non-compiled	[CE]  not  a  statement	30	None	replace
48	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue());  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue());  }	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    }    	non-compiled	[CE]  not  a  statement	30	None	replace
49	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  value,  0);  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  value,  0);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  value,  0);	  return    getSumFreq(((Integer)v).longValue(),    0);    	non-compiled	[CE]  cannot  find  symbol  value	25	None	replace
50	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  1);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  1);	  return    getSumFreq(((Integer)v).longValue(),    0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	25	None	replace
51	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  0,  value);  [CE]  cannot  find  symbol  value  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  0,  value);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  0,  value);	  return    getSumFreq(((Integer)v).longValue(),    0);    	non-compiled	[CE]  cannot  find  symbol  value	25	None	replace
52	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  0,  v.intValue());  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  0,  v.intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  0,  v.intValue());	  return    getSumFreq(((Integer)v).longValue(),    0);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
53	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getSumFreqTable(v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getSumFreqTable(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getSumFreqTable(v);	  Iterator    <    Long>    freqTable    =    getSumFreqTable();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
54	[BUG]  [BUGGY]  (Integer)freqTable.get(v  -  1);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (Integer)freqTable.get(v  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(Integer)freqTable.get(v  -  1);	          (Integer)freqTable.get(v);    	non-compiled	[CE]  not  a  statement	5	None	replace
55	[BUG]  [BUGGY]  (Integer)this.values.get(v);  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (Integer)this.values.get(v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(Integer)this.values.get(v);	          (Integer)freqTable.get(v);    	non-compiled	[CE]  not  a  statement	5	None	replace
56	[BUG]  [BUGGY]  Comparable  <?  >>  return  getCumFreq(((Integer)v).intValue());  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  return  getCumFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  return  getCumFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparable    <?    >>    return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  not  a  statement	65	None	replace
57	[BUG]  [BUGGY]  Comparable  <?  >>  return  getSumFreq(((Integer)v).intValue());  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  return  getSumFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  return  getSumFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparable    <?    >>    return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  not  a  statement	65	None	replace
58	[BUG]  [BUGGY]  Comparable  <?  >>  return  getSumFreq((  Integer)v).intValue());  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  return  getSumFreq((  Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  return  getSumFreq((  Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparable    <?    >>    return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  not  a  statement	65	None	replace
59	[BUG]  [BUGGY]  return  v.longValue();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  v.longValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  v.longValue();	          return    sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
60	[BUG]  [BUGGY]  return  Integer.valueOf(v.longValue());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  Integer.valueOf(v.longValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  Integer.valueOf(v.longValue());	          return    sumFreq.longValue();    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
61	[BUG]  [BUGGY]  return  Integer.parseInt(v);  [CE]  no  suitable  method  found  for  parseInt(Comparable<CAP#1>)  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  Integer.parseInt(v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  Integer.parseInt(v);	          return    sumFreq.longValue();    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(Comparable<CAP#1>)	6	None	replace
62	[BUG]  [BUGGY]  return  Integer.parseInt(v).longValue();  [CE]  no  suitable  method  found  for  parseInt(Comparable<CAP#1>)  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  Integer.parseInt(v).longValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  Integer.parseInt(v).longValue();	          return    sumFreq.longValue();    	non-compiled	[CE]  no  suitable  method  found  for  parseInt(Comparable<CAP#1>)	6	None	replace
63	[BUG]  [BUGGY]  Integer  nextValue  =  getNextInteger();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =  getNextInteger();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =  getNextInteger();	          Integer    nextValue    =    getNextValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
64	[BUG]  [BUGGY]  Integer  nextValue  =  getNumberValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =  getNumberValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =  getNumberValue();	          Integer    nextValue    =    getNextValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
65	[BUG]  [BUGGY]  Integer  nextValue  =  getNextValue()  -  1;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =  getNextValue()  -  1;  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =  getNextValue()  -  1;	          Integer    nextValue    =    getNextValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
66	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =((  Long)v).doubleValue();  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =((  Long)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =((  Long)v).doubleValue();	  Iterator    <    Long>    freqTable    =((    Long)v).longValue();    	non-compiled	[CE]  incompatible  types	12	None	replace
67	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =((  Long)v).longValue().intValue();  [CE]  long  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =((  Long)v).longValue().intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =((  Long)v).longValue().intValue();	  Iterator    <    Long>    freqTable    =((    Long)v).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	12	None	replace
68	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =((  Long)v).longValue().longValue();  [CE]  long  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =((  Long)v).longValue().longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =((  Long)v).longValue().longValue();	  Iterator    <    Long>    freqTable    =((    Long)v).longValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	12	None	replace
69	[BUG]  [BUGGY]  (Integer)((  Integer)v).doubleValue();  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (Integer)((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(Integer)((  Integer)v).doubleValue();	  (Integer)v).doubleValue();    	non-compiled	[CE]  not  a  statement	45	None	replace
70	[BUG]  [BUGGY]  (Integer)((  Integer)v).doubleValue());  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (Integer)((  Integer)v).doubleValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(Integer)((  Integer)v).doubleValue());	  (Integer)v).doubleValue();    	non-compiled	[CE]  not  a  statement	45	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue());    	compilable	  [FE]  AssertionFailedError  	77	3	replace
72	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue());    	compilable	  [FE]  AssertionFailedError  	77	3	replace
73	[BUG]  [BUGGY]  ((  Integer)v).doubleValue()  -  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue()  -  1;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue()  -  1;	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	77	None	replace
74	[BUG]  [BUGGY]  getSumFreq((  Integer)v).doubleValue());  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  getSumFreq((  Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	getSumFreq((  Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  ';'  expected	79	None	replace
75	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  getCumFreq((  Integer)v).doubleValue());  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  getCumFreq((  Integer)v).doubleValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  getCumFreq((  Integer)v).doubleValue());  }	  return    getCumFreq(((Integer)v).doubleValue());    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  ';'  expected	79	None	replace
76	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).doubleValue(),  value);  [CE]  cannot  find  symbol  value  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getMeanValue(((Integer)v).doubleValue(),  value);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).doubleValue(),  value);	  return    getMeanValue(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol  value	20	None	replace
77	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).doubleValue(),  Integer.MAX_VALUE);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getMeanValue(((Integer)v).doubleValue(),  Integer.MAX_VALUE);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).doubleValue(),  Integer.MAX_VALUE);	  return    getMeanValue(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
78	[BUG]  [BUGGY]  return  getSumFreq((  Integer)v).intValue());  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq((  Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq((  Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparator    <    Comparable    <?    >=    )    {    return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  ';'  expected	41	None	replace
79	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  values.longValue());  [CE]  cannot  find  symbol  values  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  values.longValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  values.longValue());	  Iterator    <    Long>    freqTable    =    getFreqTable(v.longValue());    	non-compiled	[CE]  cannot  find  symbol  values	9	None	replace
80	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v.doubleValue());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v.doubleValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v.doubleValue());	  Iterator    <    Long>    freqTable    =    getFreqTable(v.longValue());    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
81	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  value.longValue());  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  value.longValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  value.longValue());	  Iterator    <    Long>    freqTable    =    getFreqTable(v.longValue());    	non-compiled	[CE]  cannot  find  symbol  value	9	None	replace
82	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  value);  [CE]  cannot  find  symbol  value  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  value);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).doubleValue(),  value);	  return    getSumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol  value	47	None	replace
83	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  0);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  0);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).doubleValue(),  0);	  return    getSumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	47	None	replace
84	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  sumFreq);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).doubleValue(),  sumFreq);	  return    getSumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol  sumFreq	47	None	replace
85	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).doubleValue()  +  1);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).doubleValue()  +  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).doubleValue()  +  1);	  return    getSumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	47	None	replace
86	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v.longValue();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v.longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v.longValue();	          Integer    nextValue    =(Integer)v;    Integer    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
87	[BUG]  [BUGGY]  Integer  v  =(Integer)v;  Long  nextValue  =(Integer)v;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  v  =(Integer)v;  Long  nextValue  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  v  =(Integer)v;  Long  nextValue  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Long    nextValue    =(Integer)v;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)	49	None	replace
88	[BUG]  [BUGGY]  Integer  v  =(Integer)v;  Long  nextValue  =(Integer)v.longValue();  [CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  v  =(Integer)v;  Long  nextValue  =(Integer)v.longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  v  =(Integer)v;  Long  nextValue  =(Integer)v.longValue();	          Integer    nextValue    =(Integer)v;    Long    nextValue    =(Integer)v;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)	49	None	replace
89	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
90	[BUG]  [BUGGY]  Comparator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
91	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).doubleValue();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).doubleValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).doubleValue();	  return    getCumFreq(((Integer)v).doubleValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
92	[BUG]  [BUGGY]  ((  Integer)v).longValue();  (1  <  Integer)v).intValue();  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).longValue();  (1  <  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).longValue();  (1  <  Integer)v).intValue();	          ((    Integer)v).intValue();    (1    <    Integer)v).intValue();    	non-compiled	[CE]  not  a  statement	75	None	replace
93	[BUG]  [BUGGY]  ((  Integer)v).floatValue();  (1  <  Integer)v).floatValue();  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).floatValue();  (1  <  Integer)v).floatValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).floatValue();  (1  <  Integer)v).floatValue();	          ((    Integer)v).intValue();    (1    <    Integer)v).intValue();    	non-compiled	[CE]  not  a  statement	75	None	replace
94	[BUG]  [BUGGY]  (1  <  <  ((  Integer)v).doubleValue())+  1;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  <  ((  Integer)v).doubleValue())+  1;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  <  ((  Integer)v).doubleValue())+  1;	  ((    Integer)v).doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
95	[BUG]  [BUGGY]  ((  Integer)v).doubleValue().doubleValue();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue().doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue().doubleValue();	  ((    Integer)v).doubleValue()    +    1;    	non-compiled	[CE]  double  cannot  be  dereferenced	46	None	replace
96	[BUG]  [BUGGY]  ((  Integer)v).doubleValue()  /  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue()  /  1;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue()  /  1;	  ((    Integer)v).doubleValue()    +    1;    	non-compiled	[CE]  not  a  statement	46	None	replace
97	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  value,  v);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  value,  v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  value,  v);	  return    getSumFreq(((Integer)v).longValue(),    v);    	non-compiled	[CE]  cannot  find  symbol  value	55	None	replace
98	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  value,  v);  [CE]  cannot  find  symbol  value  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  value,  v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).doubleValue(),  value,  v);	  return    getSumFreq(((Integer)v).longValue(),    v);    	non-compiled	[CE]  cannot  find  symbol  value	55	None	replace
99	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  sumFreq,  v);  [CE]  cannot  find  symbol  sumFreq  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  sumFreq,  v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  sumFreq,  v);	  return    getSumFreq(((Integer)v).longValue(),    v);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	55	None	replace
100	[BUG]  [BUGGY]  return  getSumFreq((  Integer)v).doubleValue();  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq((  Integer)v).doubleValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq((  Integer)v).doubleValue();	  return    getCumFreq(((Integer)v).doubleValue());    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	27	None	replace
101	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  return  getCumFreq(((Integer)v).intValue()  -  1);  [CE]  unreachable  statement  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  return  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    return  getCumFreq(((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  unreachable  statement	70	None	add
102	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  not  a  statement	70	None	add
103	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);  [CE]  >  expected  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    Comparator  <  Comparable  <?  >=  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  >  expected	70	None	add
104	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparator  <  Comparable  <?  >>  )  return  getCumFreq(((Integer)v).intValue()  -  1);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparator  <  Comparable  <?  >>  )  return  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    Comparator  <  Comparable  <?  >>  )  return  getCumFreq(((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  not  a  statement	70	None	add
105	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Return  getCumFreq(((Integer)v).intValue()  -  1);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Return  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    Return  getCumFreq(((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  ';'  expected	70	None	add
106	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  nextValue);  [CE]  cannot  find  symbol  nextValue  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  nextValue);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  nextValue);	  return    getSumFreq(((Integer)v).longValue(),    value);    	non-compiled	[CE]  cannot  find  symbol  nextValue	24	None	replace
107	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  result);  [CE]  cannot  find  symbol  result  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  result);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  result);	  return    getSumFreq(((Integer)v).longValue(),    value);    	non-compiled	[CE]  cannot  find  symbol  result	24	None	replace
108	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)v.intValue();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  freqTable  =(Integer)v.intValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  freqTable  =(Integer)v.intValue();	          Integer    freqTable    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
109	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)values.get(v);  [CE]  cannot  find  symbol  values  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  freqTable  =(Integer)values.get(v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  freqTable  =(Integer)values.get(v);	          Integer    freqTable    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol  values	61	None	replace
110	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)this.values.get(v);  [CE]  cannot  find  symbol  values  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  freqTable  =(Integer)this.values.get(v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  freqTable  =(Integer)this.values.get(v);	          Integer    freqTable    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol  values	61	None	replace
111	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)nextValue;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)nextValue;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)nextValue;	          Integer    nextValue    =(Integer)v;    Theger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
112	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)this.values.get(v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)this.values.get(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)this.values.get(v);	          Integer    nextValue    =(Integer)v;    Theger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
113	[BUG]  [BUGGY]  result  =  getSumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  result  =  getSumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	result  =  getSumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  }	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >=    )    {    return    getCumFreq(((Integer)v).doubleValue());    }    	non-compiled	[CE]  not  a  statement	31	None	replace
114	[BUG]  [BUGGY]  result  =  getSumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue());  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  result  =  getSumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	result  =  getSumFreq(((Integer)v).doubleValue());  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue());  }	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >=    )    {    return    getCumFreq(((Integer)v).doubleValue());    }    	non-compiled	[CE]  not  a  statement	31	None	replace
115	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	28	None	replace
116	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >>  )  {  return  getSumFreq((  Integer)v).doubleValue();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >>  )  {  return  getSumFreq((  Integer)v).doubleValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >>  )  {  return  getSumFreq((  Integer)v).doubleValue();	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	28	None	replace
117	[BUG]  [BUGGY]  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();	  return    getCumFreq(((Integer)v).doubleValue());    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	58	None	replace
118	[BUG]  [BUGGY]  Comparable  <?  >>  )  {  return  getSumFreq((  Integer)v).doubleValue();  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  )  {  return  getSumFreq((  Integer)v).doubleValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  )  {  return  getSumFreq((  Integer)v).doubleValue();	  return    getCumFreq(((Integer)v).doubleValue());    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	58	None	replace
119	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)this.values.get(v);  [CE]  cannot  find  symbol  values  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)this.values.get(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)this.values.get(v);	  Integer    nextValue    =(Integer)values.get(v);    	non-compiled	[CE]  cannot  find  symbol  values	37	None	replace
120	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)values.get(v  -  1);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)values.get(v  -  1);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)values.get(v  -  1);	  Integer    nextValue    =(Integer)values.get(v);    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	37	None	replace
121	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)super.values.get(v);  [CE]  cannot  find  symbol  values  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)super.values.get(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)super.values.get(v);	  Integer    nextValue    =(Integer)values.get(v);    	non-compiled	[CE]  cannot  find  symbol  values	37	None	replace
122	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).floatValue();  ((  Integer)v).floatValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	((    Integer)v).floatValue();    ((  Integer)v).floatValue();	  	compilable	  [FE]  AssertionFailedError  	13	1	add
123	[BUG]  [BUGGY]  ((  Integer)v).floatValue();  ((  Integer)v).floatValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).floatValue();  ((  Integer)v).floatValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((    Integer)v).floatValue();    ((  Integer)v).floatValue();	  	compilable	  [FE]  AssertionFailedError  	13	1	add
124	[BUG]  [BUGGY]  ((  Integer)v).floatValue();  (1(  Integer)v).floatValue();  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).floatValue();  (1(  Integer)v).floatValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((    Integer)v).floatValue();    (1(  Integer)v).floatValue();	  	non-compiled	[CE]  ')'  expected	13	None	add
125	[BUG]  [BUGGY]  ((  Integer)v).floatValue();  (  Integer)v).floatValue();  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).floatValue();  (  Integer)v).floatValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((    Integer)v).floatValue();    (  Integer)v).floatValue();	  	non-compiled	[CE]  not  a  statement	13	None	add
126	[BUG]  [BUGGY]  (1  ((  Integer)v).doubleValue();  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  ((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  ((  Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    (1    ((    Integer)v).doubleValue();    	non-compiled	[CE]  ')'  expected	76	None	replace
127	[BUG]  [BUGGY]  (1  <  <  ((  Integer)v).doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  <  ((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  <  ((  Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    (1    ((    Integer)v).doubleValue();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).longValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	return  getCumFreq(((Integer)v).longValue()  -  1);	  return    getCumFreq(((Integer)v).intValue()    -    1);    	compilable	  [FE]  AssertionFailedError  	71	3	replace
129	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).longValue()  -  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).longValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getCumFreq(((Integer)v).longValue()  -  1);	  return    getCumFreq(((Integer)v).intValue()    -    1);    	compilable	  [FE]  AssertionFailedError  	71	3	replace
130	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue()  -  1);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue()  -  1);	  return    getCumFreq(((Integer)v).intValue()    -    1);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	71	None	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  +  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	return  getCumFreq(((Integer)v).intValue()  +  1);	  return    getCumFreq(((Integer)v).intValue()    -    1);    	compilable	  [FE]  AssertionFailedError  	71	2	replace
132	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  +  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  +  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getCumFreq(((Integer)v).intValue()  +  1);	  return    getCumFreq(((Integer)v).intValue()    -    1);    	compilable	  [FE]  AssertionFailedError  	71	2	replace
133	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Number  nextValue  =(Integer)v;  [CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Number  nextValue  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Number  nextValue  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Forteger    nextValue    =(Integer)v;    	non-compiled	[CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)	54	None	replace
134	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Foreger  nextValue  =(Integer)v;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Foreger  nextValue  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Foreger  nextValue  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Forteger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
135	[BUG]  [BUGGY]  return  getSumFreq((  Integer)v).intValue();  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq((  Integer)v).intValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq((  Integer)v).intValue();	  return    getCumFreq(((Integer)v).intValue());    return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	39	None	replace
136	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v.doubleValue();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v.doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v.doubleValue();	  Integer    nextValue    =(Integer)v.intValue();    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
137	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)this.values.intValue();  [CE]  cannot  find  symbol  values  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)this.values.intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)this.values.intValue();	  Integer    nextValue    =(Integer)v.intValue();    	non-compiled	[CE]  cannot  find  symbol  values	36	None	replace
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	                ((        Integer)v).doubleValue();        ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();	  	compilable	  [FE]  AssertionFailedError  	1	1	add
139	[BUG]  [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).doubleValue();        ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();	  	compilable	  [FE]  AssertionFailedError  	1	1	add
140	[BUG]  [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue()  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue()  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).doubleValue();        ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue()	  	non-compiled	[CE]  ';'  expected	1	None	add
141	[BUG]  [BUGGY]  [(Integer)v).doubleValue();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  [(Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	[(Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    [(    Integer)v).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
142	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).intValue(),  value);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getMeanValue(((Integer)v).intValue(),  value);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).intValue(),  value);	  return    getMeanValue(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol  value	21	None	replace
143	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  v);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  v);	  Iterator    <    Long>    freqTable    =    getFreqTable(v,    values);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
144	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  sumFreq);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  sumFreq);	  Iterator    <    Long>    freqTable    =    getFreqTable(v,    values);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	8	None	replace
145	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  v.longValue());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  v.longValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  v.longValue());	  Iterator    <    Long>    freqTable    =    getFreqTable(v,    values);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
146	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  v.intValue);  [CE]  cannot  find  symbol  intValue  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  v.intValue);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  v.intValue);	  Iterator    <    Long>    freqTable    =    getFreqTable(v,    values);    	non-compiled	[CE]  cannot  find  symbol  intValue	8	None	replace
147	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  sumFreq);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).longValue(),  sumFreq);	  return    getMeanValue(((Integer)v).longValue(),    value);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	22	None	replace
148	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  v);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).longValue(),  v);	  return    getMeanValue(((Integer)v).longValue(),    value);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
149	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  nextValue);  [CE]  cannot  find  symbol  nextValue  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  nextValue);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).longValue(),  nextValue);	  return    getMeanValue(((Integer)v).longValue(),    value);    	non-compiled	[CE]  cannot  find  symbol  nextValue	22	None	replace
150	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).intValue();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).intValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).intValue();  }	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).intValue();    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
151	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).intValue();  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).intValue();  }  [CE]  long  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).intValue();  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).intValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).intValue();  Iterator  <  Long>  freqTable  =  getFreq((  Integer)v).intValue();  }	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).intValue();    	non-compiled	[CE]  long  cannot  be  dereferenced	67	None	replace
152	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  value);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  value);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  value);	  return    getSumFreq(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol  value	23	None	replace
153	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  Integer.MAX_VALUE);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  Integer.MAX_VALUE);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  Integer.MAX_VALUE);	  return    getSumFreq(((Integer)v).intValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	23	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).longValue();  ((  Integer)v).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	                ((        Integer)v).longValue();        ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).longValue();	  	compilable	  [FE]  AssertionFailedError  	32	1	add
155	[BUG]  [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).longValue();  ((  Integer)v).longValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).longValue();  ((  Integer)v).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).longValue();        ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).longValue();	  	compilable	  [FE]  AssertionFailedError  	32	1	add
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).doubleValue();  ((  Integer)v).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	                ((        Integer)v).longValue();        ((    Integer)v).longValue();    ((  Integer)v).doubleValue();  ((  Integer)v).longValue();	  	compilable	  [FE]  AssertionFailedError  	32	1	add
157	[BUG]  [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).doubleValue();  ((  Integer)v).longValue();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).doubleValue();  ((  Integer)v).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).longValue();        ((    Integer)v).longValue();    ((  Integer)v).doubleValue();  ((  Integer)v).longValue();	  	compilable	  [FE]  AssertionFailedError  	32	1	add
158	[BUG]  [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).longValue();  ((  Integer)v).longValue()  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).longValue();  ((  Integer)v).longValue()  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).longValue();        ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v).longValue()	  	non-compiled	[CE]  ';'  expected	32	None	add
159	[BUG]  [BUGGY]  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue();  }	  return    getCumFreq(((Integer)v).doubleValue());    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    }    	non-compiled	[CE]  not  a  statement	57	None	replace
160	[BUG]  [BUGGY]  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue());  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  )  {  return  getCumFreq((  Integer)v).doubleValue());  }	  return    getCumFreq(((Integer)v).doubleValue());    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    }    	non-compiled	[CE]  not  a  statement	57	None	replace
161	[BUG]  [BUGGY]  (Integer)v).intValue();  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(Integer)v).intValue();	          ((    Integer)v).intValue();    [(    Integer)v).intValue();    	non-compiled	[CE]  not  a  statement	63	None	replace
162	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  1);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  1);	  return    getSumFreq(((Integer)v).intValue(),    0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	26	None	replace
163	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  0,  v.intValue());  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  0,  v.intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  0,  v.intValue());	  return    getSumFreq(((Integer)v).intValue(),    0);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
164	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  value,  0);  [CE]  cannot  find  symbol  value  [FE]                          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  value,  0);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  value,  0);	  return    getSumFreq(((Integer)v).intValue(),    0);    	non-compiled	[CE]  cannot  find  symbol  value	26	None	replace
165	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  10);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  10);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  10);	  return    getSumFreq(((Integer)v).intValue(),    0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	26	None	replace
166	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  values.intValue());  [CE]  cannot  find  symbol  values  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  values.intValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  values.intValue());	  Iterator    <    Long>    freqTable    =    getFreqTable(v.intValue());    	non-compiled	[CE]  cannot  find  symbol  values	10	None	replace
167	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  v.intValue());  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  v.intValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  v.intValue());	  Iterator    <    Long>    freqTable    =    getFreqTable(v.intValue());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
168	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).intValue(),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getMeanValue(((Integer)v).intValue(),  sumFreq);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).intValue(),  sumFreq);	  return    getMeanValue(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol  sumFreq	21	None	replace
169	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  long  nextValue  =(Integer)v;  [CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  long  nextValue  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  long  nextValue  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Long    nextValue    =(Integer)v;    	non-compiled	[CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)	49	None	replace
170	[BUG]  [BUGGY]  (0,  ((  Integer)v).doubleValue();  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (0,  ((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(0,  ((  Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    (1    ((    Integer)v).doubleValue();    	non-compiled	[CE]  ')'  expected	76	None	replace
171	[BUG]  [BUGGY]  return  getNumberFreq(((Integer)v).doubleValue());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getNumberFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getNumberFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
172	[BUG]  [BUGGY]  Integer  v  =(Integer)v;  Integer  nextValue  =(Integer)v;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  v  =(Integer)v;  Integer  nextValue  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  v  =(Integer)v;  Integer  nextValue  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Integer    nextValue    =(Integer)v;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)	48	None	replace
173	[BUG]  [BUGGY]  Long  nextValue  =(Long)v;  Integer  nextValue  =(Integer)v;  [CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Long  nextValue  =(Long)v;  Integer  nextValue  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Long  nextValue  =(Long)v;  Integer  nextValue  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Integer    nextValue    =(Integer)v;    	non-compiled	[CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)	48	None	replace
174	[BUG]  [BUGGY]  Comparator  <?  >>  return  getCumFreq(((Integer)v).intValue());  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <?  >>  return  getCumFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <?  >>  return  getCumFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparator    <?    >>    return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  not  a  statement	72	None	replace
175	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  getCumFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	getCumFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    getCumFreq(((Integer)v).doubleValue());    	compilable	  [FE]  AssertionFailedError  	79	3	replace
176	[BUG]  [BUGGY]  getCumFreq(((Integer)v).doubleValue());  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  getCumFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	getCumFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    getCumFreq(((Integer)v).doubleValue());    	compilable	  [FE]  AssertionFailedError  	79	3	replace
177	[BUG]  [BUGGY]  getSumFreq(((Integer)v).doubleValue());  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  getSumFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	getSumFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	79	None	replace
178	[BUG]  [BUGGY]  Integer  nextValue  =(int)values.get(v);  [CE]  cannot  find  symbol  values  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(int)values.get(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(int)values.get(v);	  Integer    nextValue    =(int)v;    	non-compiled	[CE]  cannot  find  symbol  values	38	None	replace
179	[BUG]  [BUGGY]  ((  Integer)v).longValue();  [(  Integer)v).intValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).longValue();  [(  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).longValue();  [(  Integer)v).intValue();	          ((    Integer)v).intValue();    [(    Integer)v).intValue();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
180	[BUG]  [BUGGY]  ((  Integer)v).doubleValue();  (1  <  <  4)v).doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue();  (1  <  <  4)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue();  (1  <  <  4)v).doubleValue();	          ((    Integer)v).doubleValue();    (1(    Integer)v).doubleValue();    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
181	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  v,  value);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  v,  value);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  v,  value);	  return    getSumFreq(((Integer)v).longValue(),    v);    	non-compiled	[CE]  cannot  find  symbol  value	55	None	replace
182	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  }  else  {  return  getCumFreq((  Integer)v).intValue();  }  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  }  else  {  return  getCumFreq((  Integer)v).intValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v);  }  else  {  return  getCumFreq((  Integer)v).intValue();  }	  return    getCumFreq(((Integer)v).intValue());    return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	39	None	replace
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).intValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).intValue());  }	  return    getCumFreq(((Integer)v).intValue());    Return    getCumFreq(((Integer)v).intValue());    	compilable	  [FE]  AssertionFailedError  	64	1	replace
184	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).intValue());  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).intValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).intValue());  }	  return    getCumFreq(((Integer)v).intValue());    Return    getCumFreq(((Integer)v).intValue());    	compilable	  [FE]  AssertionFailedError  	64	1	replace
185	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  sumFreq);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  sumFreq);	  return    getSumFreq(((Integer)v).longValue(),    value);    	non-compiled	[CE]  cannot  find  symbol  sumFreq	24	None	replace
186	[BUG]  [BUGGY]  Integer  freqTable  =(int)v;  [CE]  inconvertible  types  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  freqTable  =(int)v;  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  freqTable  =(int)v;	          Integer    freqTable    =(Integer)v;    	non-compiled	[CE]  inconvertible  types	61	None	replace
187	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  freqTable  =(Integer)freqTable.get(v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  freqTable  =(Integer)freqTable.get(v);	          Integer    freqTable    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
188	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)values.intValue();  [CE]  cannot  find  symbol  values  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)values.intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)values.intValue();	  Integer    nextValue    =(Integer)v.intValue();    	non-compiled	[CE]  cannot  find  symbol  values	36	None	replace
189	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).intValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue();  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).intValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).intValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue();  }	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).intValue();    	non-compiled	[CE]  ')'  expected	67	None	replace
190	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue();  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue();	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).intValue();    	non-compiled	[CE]  ')'  expected	67	None	replace
191	[BUG]  [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).intValue();  ((  Integer)v).intValue()  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).intValue();  ((  Integer)v).intValue()  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).intValue();        ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).intValue()	  	non-compiled	[CE]  ';'  expected	15	None	add
192	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  not  a  statement	70	None	add
193	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Long  v  =  getCumFreq(((Integer)v).intValue()  -  1);  [CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Long  v  =  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    Long  v  =  getCumFreq(((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)	70	None	add
194	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).intValue()  -  1);  }	  	non-compiled	[CE]  not  a  statement	70	None	add
195	[BUG]  [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  [(  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  [(  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).doubleValue();        ((    Integer)v).doubleValue();    [(  Integer)v).doubleValue();  ((  Integer)v).doubleValue();	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
196	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  result);  [CE]  cannot  find  symbol  result  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getMeanValue(((Integer)v).longValue(),  result);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).longValue(),  result);	  return    getMeanValue(((Integer)v).longValue(),    value);    	non-compiled	[CE]  cannot  find  symbol  result	22	None	replace
197	[BUG]  [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v2).longValue();  ((  Integer)v).longValue();  [CE]  cannot  find  symbol  v2  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Integer)v2).longValue();  ((  Integer)v).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).longValue();        ((    Integer)v).longValue();    ((  Integer)v2).longValue();  ((  Integer)v).longValue();	  	non-compiled	[CE]  cannot  find  symbol  v2	32	None	add
198	[BUG]  [BUGGY]  ((  Integer)v).floatValue();  ((  Integer)v).floatValue());  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).floatValue();  ((  Integer)v).floatValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((    Integer)v).floatValue();    ((  Integer)v).floatValue());	  	non-compiled	[CE]  ';'  expected	13	None	add
199	[BUG]  [BUGGY]  ((  Integer)v).floatValue();  [(  Integer)v).floatValue();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).floatValue();  [(  Integer)v).floatValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((    Integer)v).floatValue();    [(  Integer)v).floatValue();	  	non-compiled	[CE]  illegal  start  of  expression	13	None	add
200	[BUG]  [BUGGY]  ((  Integer)v).floatValue();  ((  Integer)v).floatValue()  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).floatValue();  ((  Integer)v).floatValue()  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((    Integer)v).floatValue();    ((  Integer)v).floatValue()	  	non-compiled	[CE]  ';'  expected	13	None	add
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  getCumFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	getCumFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    getCumFreq(((Integer)v).intValue());    	compilable	  [FE]  AssertionFailedError  	73	3	replace
202	[BUG]  [BUGGY]  getCumFreq(((Integer)v).intValue());  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  getCumFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	getCumFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    getCumFreq(((Integer)v).intValue());    	compilable	  [FE]  AssertionFailedError  	73	3	replace
203	[BUG]  [BUGGY]  getSumFreq(((Integer)v).intValue());  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  getSumFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	getSumFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	73	None	replace
204	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getCumFreqTable();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getCumFreqTable();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getCumFreqTable();	  Iterator    <    Long>    freqTable    =    getSumFreqTable();    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
205	[BUG]  [BUGGY]  ((  Integer)v).doubleValue();  (1  <  Integer)v).doubleValue();  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue();  (1  <  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue();  (1  <  Integer)v).doubleValue();	          ((    Integer)v).intValue();    (1    <    Integer)v).intValue();    	non-compiled	[CE]  not  a  statement	75	None	replace
206	[BUG]  [BUGGY]  ((  Integer)v).intValue();  (1  <  =  Integer)v).intValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).intValue();  (1  <  =  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).intValue();  (1  <  =  Integer)v).intValue();	          ((    Integer)v).intValue();    (1    <    Integer)v).intValue();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
207	[BUG]  [BUGGY]  (Integer)values.get(v);  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (Integer)values.get(v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(Integer)values.get(v);	          (Integer)freqTable.get(v);    	non-compiled	[CE]  not  a  statement	5	None	replace
208	[BUG]  [BUGGY]  (Integer)freqTable.get(v  +  1);  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (Integer)freqTable.get(v  +  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(Integer)freqTable.get(v  +  1);	          (Integer)freqTable.get(v);    	non-compiled	[CE]  not  a  statement	5	None	replace
209	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).doubleValue(),  v);	  return    getSumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	47	None	replace
210	[BUG]  [BUGGY]  Integer  nextValue  =  getNextValue(v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =  getNextValue(v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =  getNextValue(v);	          Integer    nextValue    =    getNextValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
211	[BUG]  [BUGGY]  Integer  nextValue  =  getNextValue().longValue();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =  getNextValue().longValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =  getNextValue().longValue();	          Integer    nextValue    =    getNextValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
212	[BUG]  [BUGGY]  Integer  nextValue  =  getNextValue().intValue();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =  getNextValue().intValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =  getNextValue().intValue();	          Integer    nextValue    =    getNextValue();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
213	[BUG]  [BUGGY]          Integer  freqTable  =(Integer)v;  Theger  freqTable  =(Integer)v;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          Integer  freqTable  =(Integer)v;  Theger  freqTable  =(Integer)v;  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                Integer    freqTable    =(Integer)v;    Theger  freqTable  =(Integer)v;	  	non-compiled	[CE]  cannot  find  symbol	60	None	add
214	[BUG]  [BUGGY]  return  getMeanValue(((Integer)v).doubleValue(),  sumFreq);  [CE]  cannot  find  symbol  sumFreq  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getMeanValue(((Integer)v).doubleValue(),  sumFreq);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getMeanValue(((Integer)v).doubleValue(),  sumFreq);	  return    getMeanValue(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol  sumFreq	20	None	replace
215	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(((Integer)v).intValue());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreqTable(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue();    	compilable	  [FE]  AssertionFailedError  	2	3	replace
217	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue();    	compilable	  [FE]  AssertionFailedError  	2	3	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).longValue());  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).longValue());  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue();    	compilable	  [FE]  AssertionFailedError  	2	3	replace
219	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).longValue());  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).longValue());  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).longValue());  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue();    	compilable	  [FE]  AssertionFailedError  	2	3	replace
220	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).longValu  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).longValu  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).longValu	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue();    	non-compiled	[CE]  ')'  expected	2	None	replace
221	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  }  else  {  return  getCumFreq((  Integer)v).doubleValue();  }  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  }  else  {  return  getCumFreq((  Integer)v).doubleValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  }  else  {  return  getCumFreq((  Integer)v).doubleValue();  }	  return    getCumFreq(((Integer)v).doubleValue());    Return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	56	None	replace
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  }	  return    getCumFreq(((Integer)v).doubleValue());    Return    getCumFreq(((Integer)v).doubleValue());    	compilable	  [FE]  AssertionFailedError  	56	3	replace
223	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  }	  return    getCumFreq(((Integer)v).doubleValue());    Return    getCumFreq(((Integer)v).doubleValue());    	compilable	  [FE]  AssertionFailedError  	56	3	replace
224	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  v);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  v);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  v);	  return    getSumFreq(((Integer)v).intValue());    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	23	None	replace
225	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  v.intValue());  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  v.intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  v.intValue());	  return    getSumFreq(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
226	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue());    	non-compiled	[CE]  ';'  expected	77	None	replace
227	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  else  {  return  getCumFreq(((Integer)  v).longValue());  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  else  {  return  getCumFreq(((Integer)  v).longValue());  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  else  {  return  getCumFreq(((Integer)  v).longValue());  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue());    	non-compiled	[CE]  ';'  expected	77	None	replace
228	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  else  {  return  getCumFreq(((Integer)  v).longValu  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  else  {  return  getCumFreq(((Integer)  v).longValu  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  else  {  return  getCumFreq(((Integer)  v).longValu	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue());    	non-compiled	[CE]  ';'  expected	77	None	replace
229	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Atteger  nextValue  =(Integer)values.get(v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Atteger  nextValue  =(Integer)values.get(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Atteger  nextValue  =(Integer)values.get(v);	          Integer    nextValue    =(Integer)v;    Atteger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
230	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)values.get(v);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)values.get(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Theger  nextValue  =(Integer)values.get(v);	          Integer    nextValue    =(Integer)v;    Theger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
231	[BUG]  [BUGGY]  ((  Integer)v).doubleValue()  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue()  +  1);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue()  +  1);	  ((    Integer)v).doubleValue()    -    1);    	non-compiled	[CE]  not  a  statement	44	None	replace
232	[BUG]  [BUGGY]  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparable  <?  >>  )  {  return  getCumFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  not  a  statement	58	None	replace
233	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable().values.iterator();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable().values.iterator();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable().values.iterator();	  Iterator    <    Long>    freqTable    =    getFreqTable().iterator();    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
234	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
235	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue(),  value);  [CE]  cannot  find  symbol  value  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue(),  value);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getCumFreq(((Integer)v).intValue(),  value);	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol  value	66	None	replace
236	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  0,  value);  [CE]  cannot  find  symbol  value  [FE]                      AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).intValue(),  0,  value);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).intValue(),  0,  value);	  return    getSumFreq(((Integer)v).intValue(),    0);    	non-compiled	[CE]  cannot  find  symbol  value	26	None	replace
237	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Object  nextValue  =(Integer)v;  [CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Object  nextValue  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Object  nextValue  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Forteger    nextValue    =(Integer)v;    	non-compiled	[CE]  variable  nextValue  is  already  defined  in  method  getCumFreq(Comparable<?>)	54	None	replace
238	[BUG]  [BUGGY]  (1  <  <  ((  Integer)v).doubleValue();  (Integer)v).doubleValue();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  <  ((  Integer)v).doubleValue();  (Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  <  ((  Integer)v).doubleValue();  (Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    (    Integer)v).doubleValue();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
239	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)freqTable.get(v);  [CE]  inconvertible  types  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)freqTable.get(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)freqTable.get(v);	  Integer    nextValue    =(Integer)values.get(v);    	non-compiled	[CE]  inconvertible  types	37	None	replace
240	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)getValue(v);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)getValue(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)getValue(v);	  Integer    nextValue    =(Integer)values.get(v);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
241	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  this.values.iterator().next();  [CE]  cannot  find  symbol  values  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  this.values.iterator().next();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  this.values.iterator().next();	  Iterator    <    Long>    freqTable    =    values.iterator().next();    	non-compiled	[CE]  cannot  find  symbol  values	81	None	replace
242	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  freqTable.iterator();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  freqTable.iterator();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  freqTable.iterator();	  Iterator    <    Long>    freqTable    =    values.iterator().next();    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
243	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq(((Integer)v).doubleValue());  Iterator  <  Long>  freqTable  =  getFreq(((Integer)v).doubleValue());  }	  return    getCumFreq(((Integer)v).doubleValue());    Iterator    <    Long>    freqTable    =    getFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
244	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  value);  [CE]  cannot  find  symbol  value  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  value);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  value);	  Iterator    <    Long>    freqTable    =    getFreqTable(v,    values);    	non-compiled	[CE]  cannot  find  symbol  value	8	None	replace
245	[BUG]  [BUGGY]  ((  Integer)v).doubleValue();  [Integer)v).doubleValue();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue();  [Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue();  [Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    [(    Integer)v).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
246	[BUG]  [BUGGY]  Comparator  <  Comparable  <?  >>  :  getCumFreq(((Integer)v).intValue());  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Comparator  <  Comparable  <?  >>  :  getCumFreq(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Comparator  <  Comparable  <?  >>  :  getCumFreq(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Comparator    <    Comparable    <?    >=    :    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  not  a  statement	43	None	replace
247	[BUG]  [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  value.intValue());  [CE]  cannot  find  symbol  value  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Iterator  <  Long>  freqTable  =  getFreqTable(v,  value.intValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Iterator  <  Long>  freqTable  =  getFreqTable(v,  value.intValue());	  Iterator    <    Long>    freqTable    =    getFreqTable(v.intValue());    	non-compiled	[CE]  cannot  find  symbol  value	10	None	replace
248	[BUG]  [BUGGY]  ((  Integer)v).doubleValue();  ((  Integer)v2).doubleValue();  [CE]  cannot  find  symbol  v2  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).doubleValue();  ((  Integer)v2).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).doubleValue();  ((  Integer)v2).doubleValue();	          ((    Integer)v).longValue();    ((    Integer)v2).longValue();    	non-compiled	[CE]  cannot  find  symbol  v2	68	None	replace
249	[BUG]  [BUGGY]  ((  Integer)v).longValue();  ((  Integer)v2).doubleValue();  [CE]  cannot  find  symbol  v2  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).longValue();  ((  Integer)v2).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).longValue();  ((  Integer)v2).doubleValue();	          ((    Integer)v).longValue();    ((    Integer)v2).longValue();    	non-compiled	[CE]  cannot  find  symbol  v2	68	None	replace
250	[BUG]  [BUGGY]  ((  Integer)v).intValue();  ((  Integer)v2).intValue();  [CE]  cannot  find  symbol  v2  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).intValue();  ((  Integer)v2).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v).intValue();  ((  Integer)v2).intValue();	          ((    Integer)v).longValue();    ((    Integer)v2).longValue();    	non-compiled	[CE]  cannot  find  symbol  v2	68	None	replace
251	[BUG]  [BUGGY]  Integer  v  =(Integer)v;  [CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  v  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  v  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Long    nextValue    =(Integer)v;    	non-compiled	[CE]  variable  v  is  already  defined  in  method  getCumFreq(Comparable<?>)	49	None	replace
252	[BUG]  [BUGGY]  (1  <  Integer>)v).intValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  Integer>)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  Integer>)v).intValue();	          ((    Integer)v).intValue();    (1(    Integer)v).intValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
253	[BUG]  [BUGGY]  Integer  freqTable  =  new  Integer(v.intValue());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  freqTable  =  new  Integer(v.intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  freqTable  =  new  Integer(v.intValue());	          Integer    freqTable    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
254	[BUG]  [BUGGY]  Integer  freqTable  =(Integer)v.clone();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  freqTable  =(Integer)v.clone();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  freqTable  =(Integer)v.clone();	          Integer    freqTable    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
255	[BUG]  [BUGGY]  (1  <  <  ((  Integer)v).doubleValue();  [1  <  =  Integer)v).doubleValue();  [CE]  illegal  start  of  type  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  <  ((  Integer)v).doubleValue();  [1  <  =  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  <  ((  Integer)v).doubleValue();  [1  <  =  Integer)v).doubleValue();	          ((    Integer)v).doubleValue();    [(    Integer)v).doubleValue();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
256	[BUG]  [BUGGY]  (1  <  <  ((  Integer)v).doubleValue();  [1  <  =  Integer>)v).doubleValue();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  <  ((  Integer)v).doubleValue();  [1  <  =  Integer>)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  <  ((  Integer)v).doubleValue();  [1  <  =  Integer>)v).doubleValue();	          ((    Integer)v).doubleValue();    [(    Integer)v).doubleValue();    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
257	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Long)v).longValue();  ((  Integer)v).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	                ((        Integer)v).longValue();        ((    Integer)v).longValue();    ((  Long)v).longValue();  ((  Integer)v).longValue();	  	compilable	  [FE]  ClassCastException  	32	3	add
258	[BUG]  [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Long)v).longValue();  ((  Integer)v).longValue();  [FE]  ClassCastException  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).longValue();    ((  Integer)v).longValue();  ((  Long)v).longValue();  ((  Integer)v).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).longValue();        ((    Integer)v).longValue();    ((  Long)v).longValue();  ((  Integer)v).longValue();	  	compilable	  [FE]  ClassCastException  	32	3	add
259	[BUG]  [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  (0,  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  (0,  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).doubleValue();        ((    Integer)v).doubleValue();    (0,  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();	  	non-compiled	[CE]  ')'  expected	1	None	add
260	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Long)v).doubleValue();  ((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	                ((        Integer)v).doubleValue();        ((    Integer)v).doubleValue();    ((  Long)v).doubleValue();  ((  Integer)v).doubleValue();	  	compilable	  [FE]  ClassCastException  	1	3	add
261	[BUG]  [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Long)v).doubleValue();  ((  Integer)v).doubleValue();  [FE]  ClassCastException  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).doubleValue();    ((  Integer)v).doubleValue();  ((  Long)v).doubleValue();  ((  Integer)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).doubleValue();        ((    Integer)v).doubleValue();    ((  Long)v).doubleValue();  ((  Integer)v).doubleValue();	  	compilable	  [FE]  ClassCastException  	1	3	add
262	[BUG]  [BUGGY]  return  Integer.MAX_VALUE.longValue();  [CE]  int  cannot  be  dereferenced  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  Integer.MAX_VALUE.longValue();  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  Integer.MAX_VALUE.longValue();	          return    sumFreq.longValue();    	non-compiled	[CE]  int  cannot  be  dereferenced	6	None	replace
263	[BUG]  [BUGGY]  return  getFreq(((Integer)v).doubleValue());  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getFreq(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getFreq(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >>    )    {    return    getCumFreq(((Integer)v).doubleValue());    }    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
264	[BUG]  [BUGGY]  return  getCumFreqTable(((Integer)v).intValue());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreqTable(((Integer)v).intValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getCumFreqTable(((Integer)v).intValue());	  return    getCumFreq(((Integer)v).intValue());    Iterator    <    Long>    freqTable    =    getFreqTable(((Integer)v).intValue());    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
265	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).doubleValue();  }  else  {  return  getSumFreq((  Integer)v).doubleValue();  }  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).doubleValue();  }  else  {  return  getSumFreq((  Integer)v).doubleValue();  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).doubleValue();  }  else  {  return  getSumFreq((  Integer)v).doubleValue();  }	  return    getCumFreq(((Integer)v).doubleValue());    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	27	None	replace
266	[BUG]  [BUGGY]  (1  <  <  ((  Integer)v).doubleValue());  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  <  ((  Integer)v).doubleValue());  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  <  ((  Integer)v).doubleValue());	  ((    Integer)v).doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
267	[BUG]  [BUGGY]  (1  <  Integer>)v).doubleValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  Integer>)v).doubleValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  Integer>)v).doubleValue();	          ((    Integer)v).doubleValue();    (1(    Integer)v).doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
268	[BUG]  [BUGGY]  ((  Integer)v2).longValue();  [CE]  cannot  find  symbol  v2  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v2).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((  Integer)v2).longValue();	          ((    Integer)v).longValue();    ((    Integer)v2).longValue();    	non-compiled	[CE]  cannot  find  symbol  v2	68	None	replace
269	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)super.get(v);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)super.get(v);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)super.get(v);	  Integer    nextValue    =(Integer)values.get(v);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
270	[BUG]  [BUGGY]  (1  <  Integer)v).intValue();  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  Integer)v).intValue();	          ((    Integer)v).intValue();    (1    <    Integer)v).intValue();    	non-compiled	[CE]  not  a  statement	75	None	replace
271	[BUG]  [BUGGY]  Integer  nextValue  =(Integer)v;  Preconditions.checkState(v  instanceof  Integer);  [CE]  cannot  find  symbol  Preconditions  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Integer  nextValue  =(Integer)v;  Preconditions.checkState(v  instanceof  Integer);  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Integer  nextValue  =(Integer)v;  Preconditions.checkState(v  instanceof  Integer);	          Integer    nextValue    =(Integer)v;    Forteger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol  Preconditions	54	None	replace
272	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  v.doubleValue());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).doubleValue(),  v.doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).doubleValue(),  v.doubleValue());	  return    getSumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
273	[BUG]  [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  v,  0);  [CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;  [FE]                    AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getSumFreq(((Integer)v).longValue(),  v,  0);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getSumFreq(((Integer)v).longValue(),  v,  0);	  return    getSumFreq(((Integer)v).longValue(),    0);    	non-compiled	[CE]  method  getSumFreq  in  class  Frequency  cannot  be  applied  to  given  types;	25	None	replace
274	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparator  <?  >>  return  getCumFreq(((Integer)v).intValue()  -  1);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  Comparator  <?  >>  return  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    Comparator  <?  >>  return  getCumFreq(((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  not  a  statement	70	None	add
275	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  getCumFreq(((Integer)v).intValue()  -  1);  [CE]  unreachable  statement  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  getCumFreq(((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    getCumFreq(((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  unreachable  statement	70	None	add
276	[BUG]  [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  ((Integer)v).intValue()  -  1);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getCumFreq(((Integer)v).intValue()  -  1);  ((Integer)v).intValue()  -  1);  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return    getCumFreq(((Integer)v).intValue()    -    1);    ((Integer)v).intValue()  -  1);	  	non-compiled	[CE]  not  a  statement	70	None	add
277	[BUG]  [BUGGY]  ((  Integer)v).floatValue();  (1  ((  Integer)v).floatValue();  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  ((  Integer)v).floatValue();  (1  ((  Integer)v).floatValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	((    Integer)v).floatValue();    (1  ((  Integer)v).floatValue();	  	non-compiled	[CE]  ')'  expected	13	None	add
278	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  else  {  return  getCumFreq(((Integer)  v).doubleValue());  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  else  {  return  getCumFreq(((Integer)  v).doubleValue());  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue());  }  else  {  return  getCumFreq(((Integer)  v).doubleValue());  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue());    	non-compiled	[CE]  ';'  expected	77	None	replace
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).longValue();  ((  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	                ((        Integer)v).intValue();        ((    Integer)v).intValue();    ((  Integer)v).longValue();  ((  Integer)v).intValue();	  	compilable	  [FE]  AssertionFailedError  	15	1	add
280	[BUG]  [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).longValue();  ((  Integer)v).intValue();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Integer)v).longValue();  ((  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).intValue();        ((    Integer)v).intValue();    ((  Integer)v).longValue();  ((  Integer)v).intValue();	  	compilable	  [FE]  AssertionFailedError  	15	1	add
281	[BUG]  [BUGGY]  [FE]  ClassCastException  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Long)v).intValue();  ((  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	                ((        Integer)v).intValue();        ((    Integer)v).intValue();    ((  Long)v).intValue();  ((  Integer)v).intValue();	  	compilable	  [FE]  ClassCastException  	15	3	add
282	[BUG]  [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Long)v).intValue();  ((  Integer)v).intValue();  [FE]  ClassCastException  [FE]      AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          ((    Integer)v).intValue();    ((  Integer)v).intValue();  ((  Long)v).intValue();  ((  Integer)v).intValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                ((        Integer)v).intValue();        ((    Integer)v).intValue();    ((  Long)v).intValue();  ((  Integer)v).intValue();	  	compilable	  [FE]  ClassCastException  	15	3	add
283	[BUG]  [BUGGY]  (1  <  <  (Integer)v).longValue();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  (1  <  <  (Integer)v).longValue();  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	(1  <  <  (Integer)v).longValue();	          ((    Integer)v).longValue();    (1(    Integer)v).longValue();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
284	[BUG]  [BUGGY]  return  getNumberValue(((Integer)v).doubleValue());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  return  getNumberValue(((Integer)v).doubleValue());  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	return  getNumberValue(((Integer)v).doubleValue());	  return    getCumFreq(((Integer)v).doubleValue());    Comparator    <    Comparable    <?    >=    )    {    return    getCumFreq(((Integer)v).doubleValue());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
285	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).doubleValue());  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	add	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).doubleValue());  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue();    	compilable	  [FE]  AssertionFailedError  	2	3	replace
286	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).doubleValue());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).doubleValue());  }  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  ((  Integer)v).doubleValue();  ((  Integer)v).doubleValue();  }  else  {  return  getCumFreq(((Integer)  v).doubleValue());  }	          ((    Integer)v).doubleValue();    ((    Integer)v).doubleValue();    	compilable	  [FE]  AssertionFailedError  	2	3	replace
287	[BUG]  [BUGGY]  Theger  nextValue  =(Integer)v;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  Theger  nextValue  =(Integer)v;  [BUGGY]      return  getCumFreq(((Integer)  v).longValue());  }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	Theger  nextValue  =(Integer)v;	          Integer    nextValue    =(Integer)v;    Theger    nextValue    =(Integer)v;    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
288	[BUG]  [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).intValue();  }  else  {  return  getSumFreq((  Integer)v);  }  [CE]  long  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]  if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).intValue();  }  else  {  return  getSumFreq((  Integer)v);  }  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	if(v  instanceof  Integer)  {  return  getCumFreq((  Integer)v).intValue();  }  else  {  return  getSumFreq((  Integer)v);  }	  return    getCumFreq(((Integer)v).intValue());    Return    getCumFreq(((Integer)v).intValue());    	non-compiled	[CE]  long  cannot  be  dereferenced	64	None	replace
289	[BUG]  [BUGGY]          Integer  freqTable  =(Integer)v;  Iterator  freqTable  =(Integer)v;  [CE]  variable  freqTable  is  already  defined  in  method  getCumFreq(Comparable<?>)  [FE]    AssertionFailedError    [CONTEXT]      public  long  getCumFreq(Comparable<?>  v)  {  if  (getSumFreq()  ==  0)  {  return  0;  }  if  (v  instanceof  Integer)  {      [BUGGY]          Integer  freqTable  =(Integer)v;  Iterator  freqTable  =(Integer)v;  [BUGGY]      }  Comparator<Comparable<?>>  c  =  (Comparator<Comparable<?>>)  freqTable.comparator();  if  (c  ==  null)  {  c  =  new  NaturalComparator();  }  long  result  =  0;  try  {  Long  value  =  freqTable.get(v);  if  (value  !=  null)  {  [CLASS]  Frequency  NaturalComparator  [METHOD]  getCumFreq  [RETURN_TYPE]  long  Comparable<?>  v  [VARIABLES]  Comparable  nextValue  v  boolean  ClassCastException  ex  Long  value  Iterator  values  TreeMap  freqTable  long  result  serialVersionUID  sumFreq  v  Comparator  c  	projects/Math75/src/main/java/org/apache/commons/math/stat/Frequency.java	0.5773502691896258	386	386	1	replace	                Integer    freqTable    =(Integer)v;    Iterator  freqTable  =(Integer)v;	  	non-compiled	[CE]  variable  freqTable  is  already  defined  in  method  getCumFreq(Comparable<?>)	60	None	add
