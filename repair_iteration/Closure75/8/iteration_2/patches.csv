bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "-)||  s.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "-)||  s.equals( "-   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "-)||  s.equals( "-   "))  {	  if(s.equals(   "-   ")||    s.equals(   "-)||    s.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
2	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-)||  s.equals( "-infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-)||    s.equals(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
3	[BUG]  [BUGGY]  if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "-infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
4	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-infinity))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-infinity))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
5	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-Infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-Infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-Infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
6	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "+1 "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "+1 "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "+1 "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+1))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
7	[BUG]  [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+1))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+1))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+1))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
8	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-1 "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-1 "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-1 "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+1))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
9	[BUG]  [BUGGY]  if(s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+1))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+1))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+1))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
10	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+Infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+Infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+Infinity   "))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+Infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  if(s.equals( "-infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+Infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+Infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+Infinity   "))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+Infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-- ")||  s.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-- ")||  s.equals( "-- "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-- ")||  s.equals( "-- "))  {	  if(s.equals(   "--   ")||    s.equals(   "--   ")||    s.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
14	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "--))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "--))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "--))  {	  if(s.equals(   "--   ")||    s.equals(   "--   ")||    s.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
15	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "--)||  s.equals( "-- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "--)||  s.equals( "-- "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "--)||  s.equals( "-- "))  {	  if(s.equals(   "--   ")||    s.equals(   "--   ")||    s.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
16	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "--   ")||  s.equals( "--   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "--   ")||  s.equals( "--   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "--   ")||  s.equals( "--   "))  {	  if(s.equals(   "--   ")||    s.equals(   "--   ")||    s.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
17	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+- "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+- "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+- "))  {	  if(s.equals(   "--   ")||    s.equals(   "--   ")||    s.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
18	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-- ")||  s.equals( "--))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-- ")||  s.equals( "--))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-- ")||  s.equals( "--))  {	  if(s.equals(   "--   ")||    s.equals(   "--   ")||    s.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
19	[BUG]  [BUGGY]  if(s.length()  >  3  ||  s.equals( "-   ")||  s.equals( "-   ")||  s.equals( "+   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||  s.equals( "-   ")||  s.equals( "-   ")||  s.equals( "+   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||  s.equals( "-   ")||  s.equals( "-   ")||  s.equals( "+   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
20	[BUG]  [BUGGY]  if(s.length()  >=  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >=  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >=  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "+ "))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
21	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "+))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
22	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '-'  ||  s.charAt(2)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '-'  ||  s.charAt(2)  ==  '+')  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '-'  ||  s.charAt(2)  ==  '+')  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
23	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "- "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "- "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "- "))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
24	[BUG]  [BUGGY]  if(s.length()!=  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()!=  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()!=  3  ||  s.equals( "- ")||  s.equals( "- ")||  s.equals( "+ "))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
25	[BUG]  [BUGGY]  if(s.length()  >  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
26	[BUG]  [BUGGY]  if(s.length()  ==  3  &&  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  &&  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  &&  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
27	[BUG]  [BUGGY]  if(s.length()  >=  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >=  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >=  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
28	[BUG]  [BUGGY]  s  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =  s.substring(0,  s.length());  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =  s.substring(0,  s.length());	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
29	[BUG]  [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(0,  s.length()  -  3):  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(0,  s.length()  -  3):  s.substring(0,  s.length());  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(0,  s.length()  -  3):  s.substring(0,  s.length());	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
30	[BUG]  [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(0,  s.length()  -  1):  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(0,  s.length()  -  1):  s.substring(0,  s.length());  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(0,  s.length()  -  1):  s.substring(0,  s.length());	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
31	[BUG]  [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(0,  s.length()  -  2):  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(0,  s.length()  -  2):  s.substring(0,  s.length());  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(0,  s.length()  -  2):  s.substring(0,  s.length());	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
32	[BUG]  [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+',  s.charAt(2)  ==  'x');  s  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+',  s.charAt(2)  ==  'x');  s  =  s.substring(0,  s.length());  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+',  s.charAt(2)  ==  'x');  s  =  s.substring(0,  s.length());	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
33	[BUG]  [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+');  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+');  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+');	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
34	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( ".-Infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( ".-Infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( ".-Infinity ")||  s.equals( "+infinity))  {	  if(s.equals(   "Infinity   ")||    s.equals(   ".-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
35	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {	  if(s.equals(   "-Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
36	[BUG]  [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "-infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "-infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "-infinity   "))  {	  if(s.equals(   "-Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
37	[BUG]  [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity))  {	  if(s.equals(   "-Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
38	[BUG]  [BUGGY]  if(s.length()  >  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "-infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "-infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "-infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  1  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  1  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  if(s.length()  >=  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >=  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >=  3  ||  s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {	  if(s.equals(   "infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
43	[BUG]  [BUGGY]  String  s  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  String  s  =  s.substring(0,  s.length());  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	String  s  =  s.substring(0,  s.length());	  String    s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  String  s  =  s.substring(0,  s.length();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  String  s  =  s.substring(0,  s.length();  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	String  s  =  s.substring(0,  s.length();	  String    s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  String  s  =  s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  String  s  =  s.substring(0,  s.length()));  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	String  s  =  s.substring(0,  s.length()));	  String    s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  String  s  =  s,  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  String  s  =  s,  s.substring(0,  s.length());  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	String  s  =  s,  s.substring(0,  s.length());	  String    s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  String  s  =  s.substring(0,  s.length()  +  3);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  String  s  =  s.substring(0,  s.length()  +  3);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	String  s  =  s.substring(0,  s.length()  +  3);	  String    s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  if(s.length()  ==  3  ||!s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||!s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||!s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(!s.equals(   "-Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
49	[BUG]  [BUGGY]  if(!s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "-infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "-infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "-Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "-infinity   "))  {	  if(!s.equals(   "-Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
50	[BUG]  [BUGGY]  if(s.length()  ==  3  ||!s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||!s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||!s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
51	[BUG]  [BUGGY]  if(s.length()  >  3  ||!s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||!s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||!s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
52	[BUG]  [BUGGY]  if(!s.equals( "infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
53	[BUG]  [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "-1 "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "-1 "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "-1 "))  {	  if(s.equals(   "-1   ")||    s.equals(   "-1   ")||    s.equals(   "+1   "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
54	[BUG]  [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "-1))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "-1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "-1))  {	  if(s.equals(   "-1   ")||    s.equals(   "-1   ")||    s.equals(   "+1   "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
55	[BUG]  [BUGGY]  if(s.equals( "-1- ")||  s.equals( "-1- ")||  s.equals( "+1- "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-1- ")||  s.equals( "-1- ")||  s.equals( "+1- "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-1- ")||  s.equals( "-1- ")||  s.equals( "+1- "))  {	  if(s.equals(   "-1   ")||    s.equals(   "-1   ")||    s.equals(   "+1   "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
56	[BUG]  [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "1 "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "1 "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "1 "))  {	  if(s.equals(   "-1   ")||    s.equals(   "-1   ")||    s.equals(   "+1   "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
57	[BUG]  [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
58	[BUG]  [BUGGY]  if(s.startsWith( "- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "-infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "-infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "-infinity   "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
59	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
60	[BUG]  [BUGGY]  if(s.startsWith( "- ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "- ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "- ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
61	[BUG]  [BUGGY]  if(s.startsWith( ".java ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( ".java ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( ".java ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
62	[BUG]  [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-- ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
63	[BUG]  [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  return  null;  }  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  return  null;  }	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
64	[BUG]  [BUGGY]  |  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  |  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  return  null;  }  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	|  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  return  null;  }	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
65	[BUG]  [BUGGY]  ||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  return  null;  }  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  return  null;  }	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
66	[BUG]  [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {  return  null;  }  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {  return  null;  }	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
67	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-n ")||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-n ")||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-n ")||  s.equals( "+ "))  {	  if(s.equals(   "-)||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
68	[BUG]  [BUGGY]  s.append(JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append(JSC_PROPERTY_NAME_FN);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append(JSC_PROPERTY_NAME_FN);	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
69	[BUG]  [BUGGY]  s.append(rawJsString,  JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append(rawJsString,  JSC_PROPERTY_NAME_FN);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append(rawJsString,  JSC_PROPERTY_NAME_FN);	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
70	[BUG]  [BUGGY]  s.append(JSC_PROPERTY_NAME_FN).append(rawJsString);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append(JSC_PROPERTY_NAME_FN).append(rawJsString);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append(JSC_PROPERTY_NAME_FN).append(rawJsString);	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
71	[BUG]  [BUGGY]  s.append(rawJsString,  value);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append(rawJsString,  value);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append(rawJsString,  value);	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
72	[BUG]  [BUGGY]  s.append(JSC_PROPERTY_NAME_FN).append(value);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append(JSC_PROPERTY_NAME_FN).append(value);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append(JSC_PROPERTY_NAME_FN).append(value);	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
73	[BUG]  [BUGGY]  if(s.length()  >  3  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
74	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
75	[BUG]  [BUGGY]  if(s.length()  ==  3  &&  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  &&  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  &&  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
76	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  1  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  1  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
77	[BUG]  [BUGGY]  s  =  rawJsString.trim();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =  rawJsString.trim();  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =  rawJsString.trim();	  s    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
78	[BUG]  [BUGGY]  s  =  s.substring(0,  s.length()  -  2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =  s.substring(0,  s.length()  -  2);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =  s.substring(0,  s.length()  -  2);	  s    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
79	[BUG]  [BUGGY]  s  =  s.substring(0,  s.length()  -1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =  s.substring(0,  s.length()  -1);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =  s.substring(0,  s.length()  -1);	  s    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
80	[BUG]  [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(2):  s.trim();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(2):  s.trim();  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.substring(2):  s.trim();	  s    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
81	[BUG]  [BUGGY]  if(s.length()  >  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
82	[BUG]  [BUGGY]  if(s.length()  >=  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >=  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >=  3  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
83	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  1  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  1  ||  s.equals( "-infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
84	[BUG]  [BUGGY]  if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "+))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
85	[BUG]  [BUGGY]  if(s.equals( "-0 ")||  s.equals( "-0 ")||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-0 ")||  s.equals( "-0 ")||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-0 ")||  s.equals( "-0 ")||  s.equals( "+))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
86	[BUG]  [BUGGY]  if(s.length()  ==  3  ||!s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||!s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||!s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
87	[BUG]  [BUGGY]  if(s.length()  >  3  ||!s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||!s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||!s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
88	[BUG]  [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "Infinity ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
89	[BUG]  [BUGGY]  String  s  =  s.substring(0,  s.length()  -2);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  String  s  =  s.substring(0,  s.length()  -2);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	String  s  =  s.substring(0,  s.length()  -2);	  String    s    =    s.substring(0,    s.length()    -1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
90	[BUG]  [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  return  null;	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
91	[BUG]  [BUGGY]  |  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  |  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	|  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  return  null;	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
92	[BUG]  [BUGGY]  ||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  return  null;	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
93	[BUG]  [BUGGY]  ||  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  return  null;	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
94	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "+infinity))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
95	[BUG]  [BUGGY]  if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "+infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
96	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
97	[BUG]  [BUGGY]  if(s.length()  >  3  &&  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  &&  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  &&  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    >    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
98	[BUG]  [BUGGY]  if(s.length()  >  1  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  1  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  1  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    >    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
99	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  0  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  0  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    >    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
100	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  2  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  2  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    >    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
101	[BUG]  [BUGGY]  if(s.length()  >  1  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  1  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  1  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(s.length()    >    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
102	[BUG]  [BUGGY]  if(s.equals( "-x ")||  s.equals( "-xml   ")||  s.equals( "+x "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-x ")||  s.equals( "-xml   ")||  s.equals( "+x "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-x ")||  s.equals( "-xml   ")||  s.equals( "+x "))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
103	[BUG]  [BUGGY]  if(s.equals( "x   ")||  s.equals( "x   ")||  s.equals( "+x "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "x   ")||  s.equals( "x   ")||  s.equals( "+x "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "x   ")||  s.equals( "x   ")||  s.equals( "+x "))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
104	[BUG]  [BUGGY]  if(s.equals( "-xyz ")||  s.equals( "-xyz ")||  s.equals( "+x "))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-xyz ")||  s.equals( "-xyz ")||  s.equals( "+x "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-xyz ")||  s.equals( "-xyz ")||  s.equals( "+x "))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
105	[BUG]  [BUGGY]  if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+x "))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+x "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+x "))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
106	[BUG]  [BUGGY]  ||  s.equals(JSC_PROPERTY_NAME_FN))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals(JSC_PROPERTY_NAME_FN))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals(JSC_PROPERTY_NAME_FN))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
107	[BUG]  [BUGGY]  ||  s.equals( "- "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "- "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "- "))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
108	[BUG]  [BUGGY]  ||  s.equals(rawJsString))  {  return  this;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals(rawJsString))  {  return  this;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals(rawJsString))  {  return  this;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
109	[BUG]  [BUGGY]  ||  s.equals( "-size   "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-size   "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-size   "))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
110	[BUG]  [BUGGY]  ||  s.equals( "-scale   "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-scale   "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-scale   "))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
111	[BUG]  [BUGGY]  if(s.startsWith( "-Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "Infinity       ")||    s.startsWith(   "-Infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
112	[BUG]  [BUGGY]  if(s.startsWith( "Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "-infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "-infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "-infinity   "))  {	  if(s.startsWith(   "Infinity       ")||    s.startsWith(   "-Infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
113	[BUG]  [BUGGY]  if(s.endsWith( "Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.endsWith( "Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.endsWith( "Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "Infinity       ")||    s.startsWith(   "-Infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
114	[BUG]  [BUGGY]  if(s.equals( "Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity   ")||  s.startsWith( "-Infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "Infinity       ")||    s.startsWith(   "-Infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
115	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "-)||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "-)||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "- ")||  s.equals( "-)||  s.equals( "+ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-)||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
116	[BUG]  [BUGGY]  if(s.startsWith( "- ")||  s.startsWith( "-)||  s.startsWith( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "- ")||  s.startsWith( "-)||  s.startsWith( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "- ")||  s.startsWith( "-)||  s.startsWith( "+ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-)||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
117	[BUG]  [BUGGY]  if(s.equals( "-)||  s.equals( "-)||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-)||  s.equals( "-)||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-)||  s.equals( "-)||  s.equals( "+ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-)||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
118	[BUG]  [BUGGY]  if(s.equals( "-null   ")||  s.equals( "-null   ")||  s.equals( "+null   "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-null   ")||  s.equals( "-null   ")||  s.equals( "+null   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-null   ")||  s.equals( "-null   ")||  s.equals( "+null   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
119	[BUG]  [BUGGY]  if(s.equals( "-N   ")||  s.equals( "-N   ")||  s.equals( "+N   "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-N   ")||  s.equals( "-N   ")||  s.equals( "+N   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-N   ")||  s.equals( "-N   ")||  s.equals( "+N   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
120	[BUG]  [BUGGY]  if(s.equals( "-n   ")||  s.equals( "-n   ")||  s.equals( "+N   "))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-n   ")||  s.equals( "-n   ")||  s.equals( "+N   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-n   ")||  s.equals( "-n   ")||  s.equals( "+N   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
121	[BUG]  [BUGGY]  if(s.equals( "-n   ")||  s.equals( "-n   ")||  s.equals( "+next   "))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-n   ")||  s.equals( "-n   ")||  s.equals( "+next   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-n   ")||  s.equals( "-n   ")||  s.equals( "+next   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
122	[BUG]  [BUGGY]  if(s.equals( "-n   ")||  s.equals( "-n   ")||  s.equals( "+x "))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-n   ")||  s.equals( "-n   ")||  s.equals( "+x "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-n   ")||  s.equals( "-n   ")||  s.equals( "+x "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
123	[BUG]  [BUGGY]  if(s.startsWith( "-Infinity   ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-Infinity   ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-Infinity   ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "Infinity   ")||    s.startsWith(   "-infinity   ")||    s.startsWith(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
124	[BUG]  [BUGGY]  if(s.startsWith( "Infinity   ")||  s.startsWith( "-infinity   ")||  s.startsWith( "-infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "Infinity   ")||  s.startsWith( "-infinity   ")||  s.startsWith( "-infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "Infinity   ")||  s.startsWith( "-infinity   ")||  s.startsWith( "-infinity   "))  {	  if(s.startsWith(   "Infinity   ")||    s.startsWith(   "-infinity   ")||    s.startsWith(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
125	[BUG]  [BUGGY]  if(s.endsWith( "Infinity   ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.endsWith( "Infinity   ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.endsWith( "Infinity   ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "Infinity   ")||    s.startsWith(   "-infinity   ")||    s.startsWith(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
126	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "-+ "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "-+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "-+ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
127	[BUG]  [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "-+Infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "-+Infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "-+Infinity   "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
128	[BUG]  [BUGGY]  if(s.equals( "-+ ")||  s.equals( "-+ ")||  s.equals( "-+ "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-+ ")||  s.equals( "-+ ")||  s.equals( "-+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-+ ")||  s.equals( "-+ ")||  s.equals( "-+ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
129	[BUG]  [BUGGY]  if(s.equals( "-+ ")||  s.equals( "-+ ")||  s.equals( "++ "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-+ ")||  s.equals( "-+ ")||  s.equals( "++ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-+ ")||  s.equals( "-+ ")||  s.equals( "++ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-+   ")||    s.equals(   "++   "))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
130	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "++))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "++))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "++))  {	  if(s.equals(   "-   ")||    s.equals(   "-+   ")||    s.equals(   "++   "))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
131	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-+ ")||  s.equals( "-+ ")||  s.equals( "++++ "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-+ ")||  s.equals( "-+ ")||  s.equals( "++++ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-+ ")||  s.equals( "-+ ")||  s.equals( "++++ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-+   ")||    s.equals(   "++   "))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
132	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( ".+ ")||  s.equals( "++ "))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( ".+ ")||  s.equals( "++ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( ".+ ")||  s.equals( "++ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-+   ")||    s.equals(   "++   "))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
133	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "-infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "-infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "Infinity   ")||  s.equals( "-infinity   ")||  s.equals( "-infinity   "))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
134	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-infinity)||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-infinity)||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( "-infinity)||  s.equals( "-infinity "))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
135	[BUG]  [BUGGY]  if(s.length()  >  3  ||  s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||  s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||  s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
136	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
137	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  1  ||  s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  1  ||  s.equals( "Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
138	[BUG]  [BUGGY]  if(s.length()  >=  3  ||  s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >=  3  ||  s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >=  3  ||  s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
139	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "-infinity "))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
140	[BUG]  [BUGGY]  if(s.length()  >  3  ||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
141	[BUG]  [BUGGY]  if(s.length()  >=  3  ||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >=  3  ||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >=  3  ||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
142	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  2  ||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  2  ||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
143	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  1  ||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  1  ||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
144	[BUG]  [BUGGY]  if(s.length()!=  3  ||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()!=  3  ||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()!=  3  ||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
145	[BUG]  [BUGGY]  if(s.length()  >=  3  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >=  3  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >=  3  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity   "))  {	  if(s.length()    <    3    ||    s.equals(   "infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
146	[BUG]  [BUGGY]  if(s.length()  <  3  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  <  3  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  <  3  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(s.length()    <    3    ||    s.equals(   "infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
147	[BUG]  [BUGGY]  if(s.equals( "-null   ")||  s.equals( "-null   ")||  s.equals( "-null   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-null   ")||  s.equals( "-null   ")||  s.equals( "-null   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-null   ")||  s.equals( "-null   ")||  s.equals( "-null   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "-n   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
148	[BUG]  [BUGGY]  if(s.equals( "-N   ")||  s.equals( "-N   ")||  s.equals( "-N   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-N   ")||  s.equals( "-N   ")||  s.equals( "-N   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-N   ")||  s.equals( "-N   ")||  s.equals( "-N   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "-n   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
149	[BUG]  [BUGGY]  if(s.equals( "-NaN ")||  s.equals( "-NaN   ")||  s.equals( "-NaN   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-NaN ")||  s.equals( "-NaN   ")||  s.equals( "-NaN   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-NaN ")||  s.equals( "-NaN   ")||  s.equals( "-NaN   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "-n   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
150	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-2))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-2))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+2))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
151	[BUG]  [BUGGY]  if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "+2))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "+2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-n ")||  s.equals( "-n ")||  s.equals( "+2))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+2))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
152	[BUG]  [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+2))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "+2))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+2))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
153	[BUG]  [BUGGY]  if(s.equals( "-0 ")||  s.equals( "-0 ")||  s.equals( "+2))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-0 ")||  s.equals( "-0 ")||  s.equals( "+2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-0 ")||  s.equals( "-0 ")||  s.equals( "+2))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+2))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
154	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-1))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "- ")||  s.equals( "-1))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
155	[BUG]  [BUGGY]  if(s.length()  >  3  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  3  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  3  ||  s.equals( "infinity   ")||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(s.length()    ==    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
156	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-infinity   ")||  s.equals( "+infinity))  {	  if(s.length()    ==    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
157	[BUG]  [BUGGY]  if(s.equals( "-infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "-Infinity   "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "-Infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-infinity   ")||  s.equals( "-Infinity   ")||  s.equals( "-Infinity   "))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "-Infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
158	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( ".-infinity ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( ".-infinity ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( ".-infinity ")||  s.equals( "-infinity "))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
159	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "-infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "-infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "-infinity))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
160	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
161	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  2  ||  s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  2  ||  s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
162	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( ".-infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( ".-infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( ".-infinity ")||  s.equals( "+infinity))  {	  if(s.equals(   "Infinity   ")||    s.equals(   ".-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
163	[BUG]  [BUGGY]  if(s.equals( "infinity ")||  s.equals( ".-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "infinity ")||  s.equals( ".-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "infinity ")||  s.equals( ".-infinity ")||  s.equals( "+infinity "))  {	  if(s.equals(   "Infinity   ")||    s.equals(   ".-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
164	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >  0  ||  s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >  0  ||  s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {	  if(s.length()    >    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
165	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( ".+ "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "- ")||  s.equals( ".+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "- ")||  s.equals( ".+ "))  {	  if(s.equals(   "-)||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
166	[BUG]  [BUGGY]  if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+xml   "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+xml   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+xml   "))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
167	[BUG]  [BUGGY]  if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+xml))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+xml))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+xml))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
168	[BUG]  [BUGGY]  if(s.equals( "-x ")||  s.equals( "-x ")||  s.equals( "+x))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-x ")||  s.equals( "-x ")||  s.equals( "+x))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-x ")||  s.equals( "-x ")||  s.equals( "+x))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
169	[BUG]  [BUGGY]  if(s.equals( "-x0 ")||  s.equals( "-x0 ")||  s.equals( "+x0 "))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-x0 ")||  s.equals( "-x0 ")||  s.equals( "+x0 "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-x0 ")||  s.equals( "-x0 ")||  s.equals( "+x0 "))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
170	[BUG]  [BUGGY]  if(s.equals( "-x ")||  s.equals( "-x ")||  s.equals( "+x1))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-x ")||  s.equals( "-x ")||  s.equals( "+x1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-x ")||  s.equals( "-x ")||  s.equals( "+x1))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
171	[BUG]  [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity2))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity2))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-infinity ")||  s.equals( "+infinity2))  {  return  null;	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
172	[BUG]  [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity1))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity1))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-infinity ")||  s.equals( "+infinity1))  {  return  null;	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
173	[BUG]  [BUGGY]  s.append(JSC_PROPERTY_NAME_FN  +  rawJsString);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append(JSC_PROPERTY_NAME_FN  +  rawJsString);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append(JSC_PROPERTY_NAME_FN  +  rawJsString);	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
174	[BUG]  [BUGGY]  s.append(JSC_PROPERTY_NAME_FN  name);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append(JSC_PROPERTY_NAME_FN  name);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append(JSC_PROPERTY_NAME_FN  name);	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
175	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
176	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
177	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "+))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
178	[BUG]  [BUGGY]  if(s.equals( "-x ")||  s.equals( "-x ")||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-x ")||  s.equals( "-x ")||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-x ")||  s.equals( "-x ")||  s.equals( "+))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
179	[BUG]  [BUGGY]  if(s.equals( "-)||  s.equals( "- ")||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-)||  s.equals( "- ")||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-)||  s.equals( "- ")||  s.equals( "+))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
180	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "-+ "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "-+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-)||  s.equals( "-+ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
181	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "-+ "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "-+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "-+ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
182	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-index ")||  s.equals( "-index ")||  s.equals( "+index))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-index ")||  s.equals( "-index ")||  s.equals( "+index))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-index ")||  s.equals( "-index ")||  s.equals( "+index))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
183	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-long ")||  s.equals( "-long ")||  s.equals( "+long))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-long ")||  s.equals( "-long ")||  s.equals( "+long))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-long ")||  s.equals( "-long ")||  s.equals( "+long))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
184	[BUG]  [BUGGY]  if(s.equals( "-index ")||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-index ")||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-index ")||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {	  if(s.equals(   "-infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "-infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
185	[BUG]  [BUGGY]  if(s.equals( "-infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {	  if(s.equals(   "-Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
186	[BUG]  [BUGGY]  if(s.equals( "infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
187	[BUG]  [BUGGY]  if(s.startsWith( "Infinity ")||  s.startsWith( "-Infinity ")||  s.startsWith( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "Infinity ")||  s.startsWith( "-Infinity ")||  s.startsWith( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "Infinity ")||  s.startsWith( "-Infinity ")||  s.startsWith( "+infinity))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
188	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity1))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity1))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
189	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity2))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity2))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
190	[BUG]  [BUGGY]  if(s.equals( "-native   ")||  s.equals( "-native   ")||  s.equals( "+   "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-native   ")||  s.equals( "-native   ")||  s.equals( "+   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-native   ")||  s.equals( "-native   ")||  s.equals( "+   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
191	[BUG]  [BUGGY]  if(s.equals( "-node   ")||  s.equals( "-node   ")||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-node   ")||  s.equals( "-node   ")||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-node   ")||  s.equals( "-node   ")||  s.equals( "+ "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
192	[BUG]  [BUGGY]  if(s.equals( "-node   ")||  s.equals( "-node   ")||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-node   ")||  s.equals( "-node   ")||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-node   ")||  s.equals( "-node   ")||  s.equals( "+))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
193	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+x "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+x "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+x "))  {	  if(s.equals(   "-   ")||    s.equals(   "-)||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
194	[BUG]  [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "+1))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "+1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "+1))  {	  if(s.equals(   "-1   ")||    s.equals(   "-1   ")||    s.equals(   "+1   "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
195	[BUG]  [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "--infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "--infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-- ")||  s.startsWith( "--infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
196	[BUG]  [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-- ")||  s.startsWith( "+-- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-- ")||  s.startsWith( "+-- "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-- ")||  s.startsWith( "-- ")||  s.startsWith( "+-- "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
197	[BUG]  [BUGGY]  if(s.startsWith( ".- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( ".- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( ".- ")||  s.startsWith( "-infinity   ")||  s.startsWith( "+infinity   "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
198	[BUG]  [BUGGY]  if(s.equals( "infinity ")||  s.equals( ".-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "infinity ")||  s.equals( ".-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "infinity ")||  s.equals( ".-Infinity ")||  s.equals( "+infinity "))  {	  if(s.equals(   "Infinity   ")||    s.equals(   ".-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
199	[BUG]  [BUGGY]  if(s.length()  <  3  ||  s.equals( "-infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  <  3  ||  s.equals( "-infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  <  3  ||  s.equals( "-infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    <    3    ||    s.equals(   "infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
200	[BUG]  [BUGGY]  if(s.length()  <  3  ||  s.equals( "-infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  <  3  ||  s.equals( "-infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  <  3  ||  s.equals( "-infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {	  if(s.length()    <    3    ||    s.equals(   "infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
201	[BUG]  [BUGGY]  String  s  =  s.substring(0,  s.length()  2);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  String  s  =  s.substring(0,  s.length()  2);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	String  s  =  s.substring(0,  s.length()  2);	  String    s    =    s.substring(0,    s.length()    -1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
202	[BUG]  [BUGGY]  if(!s.equals( "-infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "-infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "-infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(!s.equals(   "-Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
203	[BUG]  [BUGGY]  if(!s.equals( "-Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "-Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "-Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {	  if(!s.equals(   "-Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
204	[BUG]  [BUGGY]  if(!s.equals( "-Infinity ")&&  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "-Infinity ")&&  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "-Infinity ")&&  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(!s.equals(   "-Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
205	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.equals( "-Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  2  ||  s.equals( "-Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  2  ||  s.equals( "-Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "-Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
206	[BUG]  [BUGGY]  if(!s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
207	[BUG]  [BUGGY]  if(s.startsWith( "Infinity ")||  s.startsWith( ".-Infinity ")||  s.startsWith( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "Infinity ")||  s.startsWith( ".-Infinity ")||  s.startsWith( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "Infinity ")||  s.startsWith( ".-Infinity ")||  s.startsWith( "+infinity "))  {	  if(s.startsWith(   "Infinity       ")||    s.startsWith(   "-Infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
208	[BUG]  [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-',  s.charAt(1)  ==  '+');  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-',  s.charAt(1)  ==  '+');  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.charAt(0)  ==  '-',  s.charAt(1)  ==  '+');	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
209	[BUG]  [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+');  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+');  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+');	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
210	[BUG]  [BUGGY]  StaxUtil.checkState(s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.substring(0,  s.length()));  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.substring(0,  s.length()));	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
211	[BUG]  [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+'));  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+'));  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+'));	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
212	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "-infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
213	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "-infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
214	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "-infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
215	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "-))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "-))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-+ ")||  s.equals( "-))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
216	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
217	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
218	[BUG]  [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( ".-infinity ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( ".-infinity ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity ")||  s.equals( ".-infinity ")||  s.equals( "-infinity "))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "-infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
219	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
220	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-)||  s.equals( "- ")||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-)||  s.equals( "- ")||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-)||  s.equals( "- ")||  s.equals( "+ "))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
221	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-0 ")||  s.equals( "-0 ")||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-0 ")||  s.equals( "-0 ")||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-0 ")||  s.equals( "-0 ")||  s.equals( "+ "))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
222	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+ "))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
223	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
224	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  2  ||  s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  2  ||  s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {	  if(s.length()    ==    3    ||    s.equals(   "infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
225	[BUG]  [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')&&  s.charAt(2)  ==  '0'  &&  s.charAt(2)  ==  'x')  {  return  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')&&  s.charAt(2)  ==  '0'  &&  s.charAt(2)  ==  'x')  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')&&  s.charAt(2)  ==  '0'  &&  s.charAt(2)  ==  'x')  {  return  null;	  s    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
226	[BUG]  [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.charAt(2):  s.charAt(2);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.charAt(2):  s.charAt(2);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')?  s.charAt(2):  s.charAt(2);	  s    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
227	[BUG]  [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')&&  s.charAt(2)  ==  '0'  &&  s.charAt(2)  ==  'x')?  s  :  s.trim();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')&&  s.charAt(2)  ==  '0'  &&  s.charAt(2)  ==  'x')?  s  :  s.trim();  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')&&  s.charAt(2)  ==  '0'  &&  s.charAt(2)  ==  'x')?  s  :  s.trim();	  s    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
228	[BUG]  [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')&&  s.charAt(2)  ==  '0'  &&  s.charAt(2)  ==  'x')&&  s.charAt(2)  ==  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')&&  s.charAt(2)  ==  '0'  &&  s.charAt(2)  ==  'x')&&  s.charAt(2)  ==  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')&&  s.charAt(2)  ==  '0'  &&  s.charAt(2)  ==  'x')&&  s.charAt(2)  ==  	  s    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
229	[BUG]  [BUGGY]  if(s.startsWith( "Infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "Infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "Infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity))  {	  if(s.startsWith(   "Infinity   ")||    s.startsWith(   "-infinity   ")||    s.startsWith(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
230	[BUG]  [BUGGY]  if(s.startsWith( "infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity "))  {	  if(s.startsWith(   "Infinity   ")||    s.startsWith(   "-infinity   ")||    s.startsWith(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
231	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity "))  {	  if(s.startsWith(   "Infinity   ")||    s.startsWith(   "-infinity   ")||    s.startsWith(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
232	[BUG]  [BUGGY]  ||  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  return  null;  }  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  return  null;  }	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
233	[BUG]  [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity2))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-infinity ")||  s.equals( "+infinity2))  {  return  null;  }  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-infinity ")||  s.equals( "+infinity2))  {  return  null;  }	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
234	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "+ ")||  s.equals( "++ "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "+ ")||  s.equals( "++ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "+ ")||  s.equals( "++ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-+   ")||    s.equals(   "++   "))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
235	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "++ ")||  s.equals( "++ "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "++ ")||  s.equals( "++ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "++ ")||  s.equals( "++ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-+   ")||    s.equals(   "++   "))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
236	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  2  ||  s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  2  ||  s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
237	[BUG]  [BUGGY]  if(s.length()  >=  3  ||  s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  >=  3  ||  s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  >=  3  ||  s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
238	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
239	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "+infinity "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
240	[BUG]  [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+Infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
241	[BUG]  [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity1))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity1))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+Infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
242	[BUG]  [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity2))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity2))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+Infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
243	[BUG]  [BUGGY]  if(s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
244	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity1))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity1))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
245	[BUG]  [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity2))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity2))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
246	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+2))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+2))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+2))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
247	[BUG]  [BUGGY]  if(s.equals( "-)||  s.equals( "- ")||  s.equals( "+2))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-)||  s.equals( "- ")||  s.equals( "+2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-)||  s.equals( "- ")||  s.equals( "+2))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+2))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
248	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+2))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+2))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+2))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
249	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "+2))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "+2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "+2))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+2))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
250	[BUG]  [BUGGY]  String  s  =  s.substring(0,  s.length()1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  String  s  =  s.substring(0,  s.length()1);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	String  s  =  s.substring(0,  s.length()1);	  String    s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
251	[BUG]  [BUGGY]  ||  s.equals( "-+ "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-+ "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-+ "))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
252	[BUG]  [BUGGY]  ||  s.equals( "-finally   "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-finally   "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-finally   "))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
253	[BUG]  [BUGGY]  if(s.equals( "-node   ")||  s.equals( "-node   ")||  s.equals( "-node   "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-node   ")||  s.equals( "-node   ")||  s.equals( "-node   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-node   ")||  s.equals( "-node   ")||  s.equals( "-node   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "-n   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
254	[BUG]  [BUGGY]  if(s.equals( "-next   ")||  s.equals( "-next   ")||  s.equals( "-next   "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-next   ")||  s.equals( "-next   ")||  s.equals( "-next   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-next   ")||  s.equals( "-next   ")||  s.equals( "-next   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "-n   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
255	[BUG]  [BUGGY]  if(s.equals( "-native   ")||  s.equals( "-native   ")||  s.equals( "-native   "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-native   ")||  s.equals( "-native   ")||  s.equals( "-native   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-native   ")||  s.equals( "-native   ")||  s.equals( "-native   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "-n   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
256	[BUG]  [BUGGY]  if(s.equals( "-naN ")||  s.equals( "-naN ")||  s.equals( "-naN "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-naN ")||  s.equals( "-naN ")||  s.equals( "-naN "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-naN ")||  s.equals( "-naN ")||  s.equals( "-naN "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "-n   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
257	[BUG]  [BUGGY]  if(s.equals( "-node ")||  s.equals( "-node ")||  s.equals( "-node))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-node ")||  s.equals( "-node ")||  s.equals( "-node))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-node ")||  s.equals( "-node ")||  s.equals( "-node))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "-n   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
258	[BUG]  [BUGGY]  if(!s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
259	[BUG]  [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
260	[BUG]  [BUGGY]  if(s.equals( "-X ")||  s.equals( "-X ")||  s.equals( "-X "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-X ")||  s.equals( "-X ")||  s.equals( "-X "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-X ")||  s.equals( "-X ")||  s.equals( "-X "))  {	  if(s.equals(   "--   ")||    s.equals(   "--   ")||    s.equals(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
261	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-/ ")||  s.equals( "- ")||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-/ ")||  s.equals( "- ")||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-/ ")||  s.equals( "- ")||  s.equals( "+ "))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
262	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+- "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+- "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+- "))  {	  if(s.length()    ==    3    ||    s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
263	[BUG]  [BUGGY]  if(s.startsWith( "-Infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-Infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-Infinity ")||  s.startsWith( "-infinity ")||  s.startsWith( "+infinity))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
264	[BUG]  [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( ".-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( ".-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "Infinity ")||  s.equals( ".-infinity ")||  s.equals( "+infinity "))  {	  if(s.equals(   "Infinity   ")||    s.equals(   ".-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
265	[BUG]  [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "-infinity "))  {	  if(s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
266	[BUG]  [BUGGY]  if(s.length()  <  3  ||  s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  <  3  ||  s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  <  3  ||  s.equals( "Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
267	[BUG]  [BUGGY]  if(s.equals( "-xmlns ")||  s.equals( "-xmlns ")||  s.equals( "+xmlns))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-xmlns ")||  s.equals( "-xmlns ")||  s.equals( "+xmlns))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-xmlns ")||  s.equals( "-xmlns ")||  s.equals( "+xmlns))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
268	[BUG]  [BUGGY]  if(s.equals( "-x ")||  s.equals( "+x ")||  s.equals( "+x "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-x ")||  s.equals( "+x ")||  s.equals( "+x "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-x ")||  s.equals( "+x ")||  s.equals( "+x "))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
269	[BUG]  [BUGGY]  if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+xhtml "))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+xhtml "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-xml   ")||  s.equals( "-xml   ")||  s.equals( "+xhtml "))  {	  if(s.equals(   "-x   ")||    s.equals(   "-x   ")||    s.equals(   "+x   "))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
270	[BUG]  [BUGGY]  if(s.length()  <  3  ||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  <  3  ||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  <  3  ||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
271	[BUG]  [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( "+Infinity ")||  s.equals( "+Infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-Infinity ")||  s.equals( "+Infinity ")||  s.equals( "+Infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-Infinity ")||  s.equals( "+Infinity ")||  s.equals( "+Infinity "))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+Infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
272	[BUG]  [BUGGY]  if(!s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+Infinity "))  {	  if(s.equals(   "-Infinity       ")||    s.equals(   "-Infinity       ")||    s.equals(   "+Infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
273	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-Infinity ")||  s.equals( "-Infinity ")||  s.equals( "+infinity))  {	  if(s.length()    ==    3    ||    s.equals(   "-infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
274	[BUG]  [BUGGY]  s.append(JSC_PROPERTY_NAME_FN).append('0');  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append(JSC_PROPERTY_NAME_FN).append('0');  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append(JSC_PROPERTY_NAME_FN).append('0');	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
275	[BUG]  [BUGGY]  s.append( ", ");  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append( ", ");  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append( ", ");	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
276	[BUG]  [BUGGY]  s.append(JSC_PROPERTY_NAME_FN).append('-');  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s.append(JSC_PROPERTY_NAME_FN).append('-');  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s.append(JSC_PROPERTY_NAME_FN).append('-');	  s.append(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
277	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "-+ "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "-+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "-+ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "-+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
278	[BUG]  [BUGGY]  if(s.length()  <  3  ||  s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  <  3  ||  s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  <  3  ||  s.equals( "Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
279	[BUG]  [BUGGY]  if(s.startsWith( ".Infinity ")||  s.startsWith( ".-Infinity ")||  s.startsWith( ".+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( ".Infinity ")||  s.startsWith( ".-Infinity ")||  s.startsWith( ".+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( ".Infinity ")||  s.startsWith( ".-Infinity ")||  s.startsWith( ".+infinity "))  {	  if(s.startsWith(   "Infinity   ")||    s.startsWith(   "-infinity   ")||    s.startsWith(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
280	[BUG]  [BUGGY]  ||  s.equals( "-Infinity ")||  s.equals( "+Infinity "))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-Infinity ")||  s.equals( "+Infinity "))  {  return  null;  }  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-Infinity ")||  s.equals( "+Infinity "))  {  return  null;  }	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
281	[BUG]  [BUGGY]  if(s.equals( "-next   ")||  s.equals( "-next   ")||  s.equals( "+next   "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-next   ")||  s.equals( "-next   ")||  s.equals( "+next   "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-next   ")||  s.equals( "-next   ")||  s.equals( "+next   "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
282	[BUG]  [BUGGY]  if(s.equals( "-NaN ")||  s.equals( "-NaN ")||  s.equals( "+NaN))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-NaN ")||  s.equals( "-NaN ")||  s.equals( "+NaN))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-NaN ")||  s.equals( "-NaN ")||  s.equals( "+NaN))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
283	[BUG]  [BUGGY]  if(s.equals( "-naN ")||  s.equals( "-naN ")||  s.equals( "+node))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-naN ")||  s.equals( "-naN ")||  s.equals( "+node))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-naN ")||  s.equals( "-naN ")||  s.equals( "+node))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
284	[BUG]  [BUGGY]  if(s.equals( "-naN ")||  s.equals( "-naN ")||  s.equals( "+noN))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-naN ")||  s.equals( "-naN ")||  s.equals( "+noN))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-naN ")||  s.equals( "-naN ")||  s.equals( "+noN))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
285	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+1))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( "-)||  s.equals( "+1))  {	  if(s.equals(   "-   ")||    s.equals(   "-)||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
286	[BUG]  [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "+ "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "+ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "- ")||  s.equals( ".- ")||  s.equals( "+ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-)||    s.equals(   "+   "))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
287	[BUG]  [BUGGY]  if(s.equals( "-NaN ")||  s.equals( "-naN ")||  s.equals( "-naN "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-NaN ")||  s.equals( "-naN ")||  s.equals( "-naN "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-NaN ")||  s.equals( "-naN ")||  s.equals( "-naN "))  {	  if(s.equals(   "-n   ")||    s.equals(   "-n   ")||    s.equals(   "-n   "))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
288	[BUG]  [BUGGY]  String  s  =  s.substring(0,  s.length()  3);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  String  s  =  s.substring(0,  s.length()  3);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	String  s  =  s.substring(0,  s.length()  3);	  String    s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
289	[BUG]  [BUGGY]  StaxUtil.sanitizeString(s,  s.substring(0,  s.length()));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.sanitizeString(s,  s.substring(0,  s.length()));  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.sanitizeString(s,  s.substring(0,  s.length()));	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
290	[BUG]  [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-');  s  =  s.substring(0,  s.length());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  StaxUtil.checkState(s.charAt(0)  ==  '-');  s  =  s.substring(0,  s.length());  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	StaxUtil.checkState(s.charAt(0)  ==  '-');  s  =  s.substring(0,  s.length());	  s    =    s.substring(0,    s.length()    -    3);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
291	[BUG]  [BUGGY]  if(!s.equals( "Infinity ")&&  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "Infinity ")&&  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "Infinity ")&&  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
292	[BUG]  [BUGGY]  if(!s.equals( "Infinity ")&&  s.equals( "-Infinity ")&&  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "Infinity ")&&  s.equals( "-Infinity ")&&  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "Infinity ")&&  s.equals( "-Infinity ")&&  s.equals( "+infinity "))  {	  if(!s.equals(   "Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
293	[BUG]  [BUGGY]  if(!s.equals( "-Infinity ")&&  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "-Infinity ")&&  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "-Infinity ")&&  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {	  if(!s.equals(   "-Infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
294	[BUG]  [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-- ")||  s.startsWith( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-- ")||  s.startsWith( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-- ")||  s.startsWith( "-- ")||  s.startsWith( "+infinity "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
295	[BUG]  [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-- ")||  s.startsWith( "+- "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-- ")||  s.startsWith( "-- ")||  s.startsWith( "+- "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-- ")||  s.startsWith( "-- ")||  s.startsWith( "+- "))  {	  if(s.startsWith(   "-   ")||    s.startsWith(   "-infinity       ")||    s.startsWith(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
296	[BUG]  [BUGGY]  if(s.equals( "-+ ")||  s.equals( "-- ")||  s.equals( "+2))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-+ ")||  s.equals( "-- ")||  s.equals( "+2))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-+ ")||  s.equals( "-- ")||  s.equals( "+2))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+2))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
297	[BUG]  [BUGGY]  ||  s.equals( "rawJsString "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "rawJsString "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "rawJsString "))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
298	[BUG]  [BUGGY]  ||  s.equals( "-index   "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-index   "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-index   "))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
299	[BUG]  [BUGGY]  ||  s.equals( "* "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "* "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "* "))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
300	[BUG]  [BUGGY]  ||  s.equals( "-long "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( "-long "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( "-long "))  {  return  null;	  ||    s.equals(    rawJsString))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
301	[BUG]  [BUGGY]  if(s.length()  <  3  ||  s.equals( "-Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  <  3  ||  s.equals( "-Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  <  3  ||  s.equals( "-Infinity ")||  s.equals( "-infinity ")||  s.equals( "+infinity "))  {	  if(s.length()    <    3    ||    s.equals(   "infinity   ")||    s.equals(   "-infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
302	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity ")&&  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.length()  ==  3  ||  s.equals( "-Infinity ")&&  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.length()  ==  3  ||  s.equals( "-Infinity ")&&  s.equals( "-infinity ")&&  s.equals( "+infinity "))  {	  if(s.length()    ==    3    ||    s.equals(   "-Infinity       ")||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
303	[BUG]  [BUGGY]  if(s.equals( "0 ")||  s.equals( "0 ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "0 ")||  s.equals( "0 ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "0 ")||  s.equals( "0 ")||  s.equals( "-Infinity ")||  s.equals( "+infinity "))  {	  if(s.equals(   "-Infinity   ")||    s.equals(   "-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
304	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+infinity))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+infinity))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+infinity))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
305	[BUG]  [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( ".-Infinity ")||  s.equals( "+infinity "))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(!s.equals( "Infinity ")||  s.equals( ".-Infinity ")||  s.equals( "+infinity "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(!s.equals( "Infinity ")||  s.equals( ".-Infinity ")||  s.equals( "+infinity "))  {	  if(s.equals(   "Infinity   ")||    s.equals(   ".-Infinity   ")||    s.equals(   "+infinity   "))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
306	[BUG]  [BUGGY]  if(s.equals( ".-1 ")||  s.equals( "-1 ")||  s.equals( "+1 "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( ".-1 ")||  s.equals( "-1 ")||  s.equals( "+1 "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( ".-1 ")||  s.equals( "-1 ")||  s.equals( "+1 "))  {	  if(s.equals(   "-1   ")||    s.equals(   "-1   ")||    s.equals(   "+1   "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
307	[BUG]  [BUGGY]  if(s.equals( "-1 ")||  s.equals( "1 ")||  s.equals( "+1 "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-1 ")||  s.equals( "1 ")||  s.equals( "+1 "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-1 ")||  s.equals( "1 ")||  s.equals( "+1 "))  {	  if(s.equals(   "-1   ")||    s.equals(   "-1   ")||    s.equals(   "+1   "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
308	[BUG]  [BUGGY]  if(s.startsWith( "-1 ")||  s.startsWith( "-1 ")||  s.startsWith( "+1 "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.startsWith( "-1 ")||  s.startsWith( "-1 ")||  s.startsWith( "+1 "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.startsWith( "-1 ")||  s.startsWith( "-1 ")||  s.startsWith( "+1 "))  {	  if(s.equals(   "-1   ")||    s.equals(   "-1   ")||    s.equals(   "+1   "))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
309	[BUG]  [BUGGY]  ||  s.equals( ".-infinity ")||  s.equals( "+infinity "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  ||  s.equals( ".-infinity ")||  s.equals( "+infinity "))  {  return  null;  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	||  s.equals( ".-infinity ")||  s.equals( "+infinity "))  {  return  null;	  ||    s.equals(   "-infinity       ")||    s.equals(   "+infinity       "))    {    return    null;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
310	[BUG]  [BUGGY]  s  =  s.substring(0,  s.length()  -  4);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  s  =  s.substring(0,  s.length()  -  4);  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	s  =  s.substring(0,  s.length()  -  4);	  s    =    s.trim();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
311	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-+ ")||  s.equals( "++ "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-+ ")||  s.equals( "++ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-+ ")||  s.equals( "++ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-+   ")||    s.equals(   "++   "))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
312	[BUG]  [BUGGY]  if(s.equals( "-X ")||  s.equals( "-X ")||  s.equals( "++ "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-X ")||  s.equals( "-X ")||  s.equals( "++ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-X ")||  s.equals( "-X ")||  s.equals( "++ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-+   ")||    s.equals(   "++   "))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
313	[BUG]  [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "++ "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "++ "))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-1 ")||  s.equals( "-1 ")||  s.equals( "++ "))  {	  if(s.equals(   "-   ")||    s.equals(   "-+   ")||    s.equals(   "++   "))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
314	[BUG]  [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+1))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      if  (s.length()  >  3  &&  (s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  return  null;  }        [BUGGY]  if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+1))  {  [BUGGY]      ||  s.equals(     "-infinity     ")  ||  s.equals(     "+infinity     "))  {  return  null;  }  try  {  return  Double.parseDouble(s);  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	342	344	1	replace	if(s.equals( "-- ")||  s.equals( "-- ")||  s.equals( "+1))  {	  if(s.equals(   "-   ")||    s.equals(   "-   ")||    s.equals(   "+1))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
