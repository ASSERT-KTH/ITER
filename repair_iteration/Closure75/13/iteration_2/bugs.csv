bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  +  1))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start++))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start++))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start++))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(end))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  +  1))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start++))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start++))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start++))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
6	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))!=  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))!=  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  +  1))!=  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  ==  TernaryValue.STRING)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  ==  TernaryValue.STRING)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  +  1))  ==  TernaryValue.STRING)  {	  &&    isStrWhiteSpaceChar(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  +  1))  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start))  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  +  1))  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
11	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start++))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start++))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start++))  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start++))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start++))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start++))  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(0))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(0))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(0))  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start++))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start++))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start++))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpace(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(end))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(end))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(end))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpace(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  ||  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  ||  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	||  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpace(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  ||  isStrWhiteSpaceChar(s.charAt(end))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  ||  isStrWhiteSpaceChar(s.charAt(end))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	||  isStrWhiteSpaceChar(s.charAt(end))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start++))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start++))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start++))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpace(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))!=  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))!=  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  +  1))!=  TernaryValue.TRUE)  {	  &&    isStrWhiteSpace(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  ==  TernaryValue.STRING)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  ==  TernaryValue.STRING)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  +  1))  ==  TernaryValue.STRING)  {	  &&    isStrWhiteSpace(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  -  1))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  &&  isStrJsWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrJsWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrJsWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  &&  isJsWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isJsWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isJsWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1)))  {  start++;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1)))  {  start++;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  -  1)))  {  start++;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  s  =  s.substring(start,  end);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  s  =  s.substring(start,  end);  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	s  =  s.substring(start,  end);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1)))  {  end++;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1)))  {  end++;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  -  1)))  {  end++;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1)))  {  start++;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1)))  {  start++;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(end  -  1)))  {  start++;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  String  s  =  s.substring(start,  end);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  String  s  =  s.substring(start,  end);  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	String  s  =  s.substring(start,  end);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  String  value  =  s.substring(start,  end);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  String  value  =  s.substring(start,  end);  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	String  value  =  s.substring(start,  end);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1)))  {  start++;  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1)))  {  start++;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  +  1)))  {  start++;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  ||  isStrWhiteSpaceChar(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  ||  isStrWhiteSpaceChar(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	||  isStrWhiteSpaceChar(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.FIELD_NAME)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.FIELD_NAME)  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))!=  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))!=  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start))!=  TernaryValue.FALSE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))!=  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))!=  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start))!=  TernaryValue.FALSE)  {	  &&    isStrWhiteSpace(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.FIELD_NAME)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.FIELD_NAME)  {	  &&    isStrWhiteSpace(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))!=  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))!=  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start))!=  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start)))  {  end--;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start)))  {  end--;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start)))  {  end--;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start)))  {  start++;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start)))  {  start++;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start)))  {  start++;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start)))  {  start--;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start)))  {  start--;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start)))  {  start--;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1)))  {  end--;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1)))  {  end--;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  +  1)))  {  end--;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start)))  {  end++;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start)))  {  end++;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start)))  {  end++;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  >=  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  >=  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  +  1))  >=  TernaryValue.TRUE)  {	  &&    isStrWhiteSpace(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.STRING)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.STRING)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.STRING)  {	  &&    isStrWhiteSpaceChar(s.charAt(start    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))!=  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))!=  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start))!=  TernaryValue.TRUE)  {	  &&    isStrWhiteSpace(s.charAt(start))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.STRING)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.STRING)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.STRING)  {	  &&    isStrWhiteSpace(s.charAt(start))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  &&  isStringWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStringWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStringWhiteSpace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  &&  isStrWhitespace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhitespace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhitespace(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.FALSE)  {	  &&    isStrWhiteSpace(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  <  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  <  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  +  1))  <  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  >=  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  >=  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  +  1))  >=  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(end))  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(end  -  1))  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  <  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  <  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  +  1))  <  TernaryValue.TRUE)  {	  &&    isStrWhiteSpace(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
56	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  +  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  +  1))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(end  +  1))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpace(s.charAt(start    +    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
57	[BUG]  [BUGGY]  &&  isStrWhitespaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhitespaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhitespaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(end))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
58	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1)))  {  end--;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1)))  {  end--;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  -  1)))  {  end--;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
59	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1)))  {  end--;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1)))  {  end--;  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(end  -  1)))  {  end--;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
60	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1))  <  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1))  <  TernaryValue.TRUE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  -  1))  <  TernaryValue.TRUE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  -  1))  {	  &&    isStrWhiteSpaceChar(s.charAt(start    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  -  1))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  -  1))  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  -  1))  {	  &&    isStrWhiteSpaceChar(s.charAt(start    -    1))    ==    TernaryValue.TRUE)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))  <  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end    [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))  <  TernaryValue.FALSE)  {  [BUGGY]    start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start))  <  TernaryValue.FALSE)  {	  &&    isStrWhiteSpaceChar(s.charAt(start))    ==    TernaryValue.FALSE)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
