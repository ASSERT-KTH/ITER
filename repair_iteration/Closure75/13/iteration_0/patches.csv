bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  +  1))  ==  TernaryValue.TRUE)  {  [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  +  1))  ==  TernaryValue.TRUE)  {	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
2	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.FALSE)  {  [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.FALSE)  {	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
3	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {  [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start  -  1))  ==  TernaryValue.TRUE)  {	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
4	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start  +  1))  ==  TernaryValue.TRUE)  {  [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start  +  1))  ==  TernaryValue.TRUE)  {	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
5	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.TRUE)  {  [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.TRUE)  {	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
6	[BUG]  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.FALSE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]  &&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.FALSE)  {  [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpace(s.charAt(start))  ==  TernaryValue.FALSE)  {	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]    [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	  	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
8	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
9	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end))  ==  TernaryValue.TRUE)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(end))  ==  TernaryValue.TRUE)  {  [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(end))  ==  TernaryValue.TRUE)  {	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
10	[BUG]  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  static  String  trimJsWhiteSpace(String  s)  {  int  start  =  0;  int  end  =  s.length();  while  (end  >  0  &&  isStrWhiteSpaceChar(s.charAt(end  -  1))  ==  TernaryValue.TRUE)  {  end--;  }  while  (start  <  end  [BUGGY]  &&  isStrWhiteSpaceChar(s.charAt(start))  {  [BUGGY]  start++;  }  return  s.substring(start,  end);  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  trimJsWhiteSpace  [RETURN_TYPE]  String  String  s  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	363	363	1	replace	&&  isStrWhiteSpaceChar(s.charAt(start))  {	&&  isStrWhiteSpaceChar(s.charAt(start))  ==  TernaryValue.TRUE)  {  	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
