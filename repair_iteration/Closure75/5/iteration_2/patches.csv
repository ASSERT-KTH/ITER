bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  value);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  value);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsWhiteSpace(rawJsString,  value);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsWhiteSpace(rawJsString,  rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.trim());  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.trim());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsWhiteSpace(rawJsString.trim());	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
6	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(2)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
8	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(2)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(2)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(2)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(2)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
9	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(2)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(2)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
10	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(2)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(2)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
11	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    <    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
12	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {	  if(s.length()    <    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
13	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    <    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
14	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('-',  1);	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
15	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  16);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  16);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('-',  16);	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
16	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('-');  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('-');  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  rawJsString.lastIndexOf('-');	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
17	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  2);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  2);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('-',  2);	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
18	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  4);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  4);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('-',  4);	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
19	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  3);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  3);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('-',  3);	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
20	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('-',  rawJsString);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('-',  rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('-',  rawJsString);	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
21	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
22	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
23	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
24	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
25	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
26	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
27	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    <    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'X')  {	  if(s.length()    <    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
29	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    <    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
30	[BUG]  [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString,  s);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString,  s);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNextSlot(rawJsString,  s);	  int    nextSlot    =    getNextSlot(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
31	[BUG]  [BUGGY]  int  nextSlot  =  getNextSlot(s);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNextSlot(s);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNextSlot(s);	  int    nextSlot    =    getNextSlot(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
32	[BUG]  [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString.length());  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNextSlot(rawJsString.length());	  int    nextSlot    =    getNextSlot(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  trimJsWhiteSpace(rawJsString);	  int    nextSlot    =    getNextSlot(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString,  s.length());  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString,  s.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNextSlot(rawJsString,  s.length());	  int    nextSlot    =    getNextSlot(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  if(s  >=  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  >=  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  >=  null  ||  s.length()  ==  0)  {	  if(s!=    null    &&    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
36	[BUG]  [BUGGY]  if(s  ==  null  &&  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  &&  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  &&  s.length()  ==  0)  {	  if(s!=    null    &&    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
37	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('.',  1);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
38	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  16);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  16);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('.',  16);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
39	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.');  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  rawJsString.lastIndexOf('.');	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
40	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  2);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  2);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('.',  2);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  4);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  4);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('.',  4);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  3);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  3);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('.',  3);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  if(s.length()  <  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
46	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
48	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    <=    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
49	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
50	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
51	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
52	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
53	[BUG]  [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString,  s);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString,  s);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsWhiteSpace(rawJsString,  s);	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString.trim());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString.trim());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsWhiteSpace(rawJsString.trim());	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString,  s.length());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString,  s.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsWhiteSpace(rawJsString,  s.length());	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
57	[BUG]  [BUGGY]  String  value  =  getStringNumberValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  getStringNumberValue(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  getStringNumberValue(rawJsString);	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  2));  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  2));  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  2));	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
59	[BUG]  [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
60	[BUG]  [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
61	[BUG]  [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
62	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()!=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()!=  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
63	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  2)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  2)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
64	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
65	[BUG]  [BUGGY]  if(rawJsString!=  null  ||  rawJsString.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString!=  null  ||  rawJsString.length()  ==  1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString!=  null  ||  rawJsString.length()  ==  1)  {	  if(rawJsString.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
66	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  rawJsString.length()  ==  1)  {	  if(rawJsString.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
67	[BUG]  [BUGGY]  if(rawJsString.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString.length()  ==  2)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString.length()  ==  2)  {	  if(rawJsString.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
68	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  rawJsString.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  rawJsString.length()  ==  1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  rawJsString.length()  ==  1)  {	  if(rawJsString.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
69	[BUG]  [BUGGY]  if(s  ==  null  ||  rawJsString.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  rawJsString.length()  ==  1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  rawJsString.length()  ==  1)  {	  if(rawJsString.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
70	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'x')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
71	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
72	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
73	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
74	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
75	[BUG]  [BUGGY]  if(s.length()  <  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
76	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  	52	None	replace
77	[BUG]  [BUGGY]  if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  	52	None	replace
78	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  	52	None	replace
79	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s.  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s.  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s.	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  <identifier>  expected	52	None	replace
80	[BUG]  [BUGGY]  if(s.length()  >=  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  	52	None	replace
81	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
82	[BUG]  [BUGGY]  if(s.length()  <  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s  [CE]  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  	52	None	replace
83	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
84	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
85	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
86	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
87	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
88	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
89	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
90	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
91	[BUG]  [BUGGY]  if(s.length()!=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
92	[BUG]  [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.indexOf('.')  ==  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
93	[BUG]  [BUGGY]  if(s!=  null  ||  s.indexOf('.')  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.indexOf('.')  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.indexOf('.')  ==  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
94	[BUG]  [BUGGY]  if(s  ==  null  ||  s.indexOf('.')!=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.indexOf('.')!=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.indexOf('.')!=  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
95	[BUG]  [BUGGY]  if(s!=  null  ||  s.indexOf('.')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.indexOf('.')  >=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.indexOf('.')  >=  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
96	[BUG]  [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  <=  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  <=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.indexOf('.')  <=  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
97	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
98	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'x')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
99	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
100	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
101	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
102	[BUG]  [BUGGY]  if(s!=  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
103	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
104	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
105	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
106	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  <  2)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  <  2)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  <  2)  {	  if(s    ==    null    ||    s.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
107	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '.')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '.')  {	  if(s    ==    null    ||    s.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
108	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
109	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
110	[BUG]  [BUGGY]  if(s.length()  >=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
111	[BUG]  [BUGGY]  if(s.length()!=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
112	[BUG]  [BUGGY]  if(s.length()!=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
113	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
114	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'X')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
115	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '.')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '.')  {	  if(s    ==    null    ||    s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
116	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '.')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '.')  {	  if(s    ==    null    ||    s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
117	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
118	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
119	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(2)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
120	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
121	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
122	[BUG]  [BUGGY]  if(s!=  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
123	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
124	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
125	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(2)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(2)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(2)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
126	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  &&  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  &&  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  &&  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
127	[BUG]  [BUGGY]  if(s!=  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
128	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(3)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(3)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(3)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
129	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
130	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
131	[BUG]  [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
132	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  '+')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
133	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '+')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
134	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '+')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
135	[BUG]  [BUGGY]  if(s!=  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '+')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
136	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  3  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  3  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  3  ||  s.charAt(0)  ==  '+')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
137	[BUG]  [BUGGY]  if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
138	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
139	[BUG]  [BUGGY]  if(s.length()  >  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
140	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
141	[BUG]  [BUGGY]  if(s.length()  <  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
142	[BUG]  [BUGGY]  if(s.length()  <  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
143	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-'    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
144	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-'    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
145	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-'    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
146	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-'    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
147	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '-'  ||  s.charAt(2)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '-'  ||  s.charAt(2)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '-'  ||  s.charAt(2)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-'    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
148	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(2)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(2)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(2)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-'    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
149	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()!=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()!=  0)  {	  if(s    ==    null    ||    s.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
150	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()!=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()!=  0)  {	  if(s    ==    null    ||    s.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
151	[BUG]  [BUGGY]  if(s!=  null  ||  s.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.length()!=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.length()!=  0)  {	  if(s    ==    null    ||    s.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
152	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    >    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
153	[BUG]  [BUGGY]  if(s.length()  >  1  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  1  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  1  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    >    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
154	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    >    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
155	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '.')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '.')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '.')  {	  if(s    ==    null    ||    s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
156	[BUG]  [BUGGY]  if(s.length()!=  0  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  0  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  0  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
157	[BUG]  [BUGGY]  if(s.length()  >=  0  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  0  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  0  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
158	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
159	[BUG]  [BUGGY]  if(s.length()  <  0  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  0  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  0  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
160	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
161	[BUG]  [BUGGY]  if(s.length()  <  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
162	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
163	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
164	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
165	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
166	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('.',  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('.',  1);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
167	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  16);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('.',  16);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('.',  16);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
168	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.indexOf('.');  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  rawJsString.indexOf('.');  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  rawJsString.indexOf('.');	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
169	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  0);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('.',  0);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('.',  0);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
170	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  4);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('.',  4);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('.',  4);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
171	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  2);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('.',  2);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('.',  2);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
172	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
173	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(2)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(2)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(2)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
174	[BUG]  [BUGGY]  if(s!=  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
175	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
176	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
177	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
178	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
179	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
180	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
181	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  3  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  3  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  3  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
182	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
183	[BUG]  [BUGGY]  if(s  ==  null  ||  rawJsString.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  rawJsString.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  rawJsString.length()  ==  0)  {	  if(rawJsString!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
184	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
185	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
186	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
187	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
188	[BUG]  [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString,  s);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString,  s);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNumberValue(rawJsString,  s);	  int    nextSlot    =    getNumberValue(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
189	[BUG]  [BUGGY]  int  nextSlot  =  getNumberValue(s);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNumberValue(s);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNumberValue(s);	  int    nextSlot    =    getNumberValue(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
190	[BUG]  [BUGGY]  int  nextSlot  =  getStringNumberValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getStringNumberValue(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getStringNumberValue(rawJsString);	  int    nextSlot    =    getNumberValue(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
191	[BUG]  [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString,  s.length());  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString,  s.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNumberValue(rawJsString,  s.length());	  int    nextSlot    =    getNumberValue(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
192	[BUG]  [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString.length());  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNumberValue(rawJsString.length());	  int    nextSlot    =    getNumberValue(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
193	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [CE]  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  	53	None	replace
194	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [CE]  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  	53	None	replace
195	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  <identifier>  expected	53	None	replace
196	[BUG]  [BUGGY]  if(s.length()  >  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  	53	None	replace
197	[BUG]  [BUGGY]  if(s.length()  >=  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [CE]  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  	53	None	replace
198	[BUG]  [BUGGY]  if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
199	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
200	[BUG]  [BUGGY]  if(s.length()!=  0  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  0  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
201	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
202	[BUG]  [BUGGY]  if(s.length()  >=  0  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  0  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
203	[BUG]  [BUGGY]  if(s.length()  <  0  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  0  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
204	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
205	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf(':',  1);	  int    nextSlot    =    s.lastIndexOf(':');    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
206	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf(':');  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf(':');  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  rawJsString.lastIndexOf(':');	  int    nextSlot    =    s.lastIndexOf(':');    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
207	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  16);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  16);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf(':',  16);	  int    nextSlot    =    s.lastIndexOf(':');    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
208	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  2);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  2);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf(':',  2);	  int    nextSlot    =    s.lastIndexOf(':');    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
209	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  rawJsString);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf(':',  rawJsString);	  int    nextSlot    =    s.lastIndexOf(':');    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
210	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  4);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  4);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf(':',  4);	  int    nextSlot    =    s.lastIndexOf(':');    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
211	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  3);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  3);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf(':',  3);	  int    nextSlot    =    s.lastIndexOf(':');    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
212	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.indexOf(s);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  rawJsString.indexOf(s);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  rawJsString.indexOf(s);	  int    nextSlot    =    s.indexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
213	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf(rawJsString);	  int    nextSlot    =    s.indexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
214	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString,  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString,  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf(rawJsString,  1);	  int    nextSlot    =    s.indexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
215	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString,  0);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString,  0);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf(rawJsString,  0);	  int    nextSlot    =    s.indexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
216	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString,  JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString,  JSC_PROPERTY_NAME_FN);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf(rawJsString,  JSC_PROPERTY_NAME_FN);	  int    nextSlot    =    s.indexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
217	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString)+  1;  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString)+  1;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf(rawJsString)+  1;	  int    nextSlot    =    s.indexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
218	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString,  value);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString,  value);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf(rawJsString,  value);	  int    nextSlot    =    s.indexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
219	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
220	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
221	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
222	[BUG]  [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  1  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
223	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(2)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
224	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(2)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
225	[BUG]  [BUGGY]  if(s.length()  >  1  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  1  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  1  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    >    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
226	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    >    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
227	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
228	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
229	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
230	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
231	[BUG]  [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
232	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(2)  ==  '-')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
233	[BUG]  [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  1  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    >    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
234	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
235	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
236	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
237	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
238	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
239	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
240	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
241	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
242	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
243	[BUG]  [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  1  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
244	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(2)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
245	[BUG]  [BUGGY]  if(s.length()  <  1  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  1  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  1  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
246	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
247	[BUG]  [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    <=    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
248	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
249	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
250	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
251	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
252	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
253	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(1)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
254	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
255	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
256	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
257	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
258	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
259	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
260	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
261	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
262	[BUG]  [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
263	[BUG]  [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
264	[BUG]  [BUGGY]  if(s  ==  null  ||  s!=  JSC_PROPERTY_NAME_FN.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s!=  JSC_PROPERTY_NAME_FN.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s!=  JSC_PROPERTY_NAME_FN.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
265	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  2)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  2)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
266	[BUG]  [BUGGY]  int  nextSlot  =  s.length()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.length()  +  1;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.length()  +  1;	  int    nextSlot    =    s.length();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
267	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.length();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  rawJsString.length();  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  rawJsString.length();	  int    nextSlot    =    s.length();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
268	[BUG]  [BUGGY]  int  nextSlot  =  s.length()  *  2;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.length()  *  2;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.length()  *  2;	  int    nextSlot    =    s.length();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
269	[BUG]  [BUGGY]  int  nextSlot  =  s.length()  +  2;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.length()  +  2;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.length()  +  2;	  int    nextSlot    =    s.length();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
270	[BUG]  [BUGGY]  int  nextSlot  =  s.length()  -  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.length()  -  1;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.length()  -  1;	  int    nextSlot    =    s.length();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
271	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  value);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  value);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
272	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
273	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
274	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  1);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  1);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
275	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
276	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
277	[BUG]  [BUGGY]  if(s.length()  <  1  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  1  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  1  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
278	[BUG]  [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  1  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    >    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
279	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
280	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '-')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
281	[BUG]  [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
282	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(2)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(2)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(2)  ==  '-')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
283	[BUG]  [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '-')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
284	[BUG]  [BUGGY]  if(s  ==  null  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
285	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '0')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
286	[BUG]  [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '0')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
287	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(2)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(2)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(2)  ==  '0')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
288	[BUG]  [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  JSC_PROPERTY_NAME_FN  ||  s.charAt(1)  ==  '0')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
289	[BUG]  [BUGGY]  if(s  ==  null  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.charAt(0)  ==  '0')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
290	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
291	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
292	[BUG]  [BUGGY]  if(s.length()!=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
293	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(2)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
294	[BUG]  [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
295	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
296	[BUG]  [BUGGY]  if(s.length()  <  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
297	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(1)    ==    'e'    ||    s.charAt(2)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
298	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(1)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
299	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  2)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  2)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
300	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  1)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
301	[BUG]  [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
302	[BUG]  [BUGGY]  if(s.length()  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
303	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
304	[BUG]  [BUGGY]  int  nextSlot  =  vars.size()  +  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  vars.size()  +  1;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  vars.size()  +  1;	  int    nextSlot    =    vars.size();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
305	[BUG]  [BUGGY]  int  nextSlot  =  vars.size()  -  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  vars.size()  -  1;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  vars.size()  -  1;	  int    nextSlot    =    vars.size();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
306	[BUG]  [BUGGY]  int  nextSlot  =  vars.size()  *  2;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  vars.size()  *  2;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  vars.size()  *  2;	  int    nextSlot    =    vars.size();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
307	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.size();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  rawJsString.size();  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  rawJsString.size();	  int    nextSlot    =    vars.size();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
308	[BUG]  [BUGGY]  int  nextSlot  =  vars.size()  -  2;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  vars.size()  -  2;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  vars.size()  -  2;	  int    nextSlot    =    vars.size();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
309	[BUG]  [BUGGY]  int  nextSlot  =  s.size();  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.size();  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.size();	  int    nextSlot    =    vars.size();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
310	[BUG]  [BUGGY]  int  value  =  s.lastIndexOf('.',  16);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  value  =  s.lastIndexOf('.',  16);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  s.lastIndexOf('.',  16);	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
311	[BUG]  [BUGGY]  int  value  =  s.lastIndexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  value  =  s.lastIndexOf('.',  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  s.lastIndexOf('.',  1);	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
312	[BUG]  [BUGGY]  int  value  =  s.lastIndexOf('.',  2);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  value  =  s.lastIndexOf('.',  2);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  s.lastIndexOf('.',  2);	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
313	[BUG]  [BUGGY]  int  value  =  rawJsString.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  value  =  rawJsString.lastIndexOf('.');  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  rawJsString.lastIndexOf('.');	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
314	[BUG]  [BUGGY]  int  value  =  s.lastIndexOf('.',  4);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  value  =  s.lastIndexOf('.',  4);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  s.lastIndexOf('.',  4);	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
315	[BUG]  [BUGGY]  double  value  =  s.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  double  value  =  s.lastIndexOf('.');  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	double  value  =  s.lastIndexOf('.');	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
316	[BUG]  [BUGGY]  int  value  =  s.lastIndexOf('.',  3);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  value  =  s.lastIndexOf('.',  3);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  s.lastIndexOf('.',  3);	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
317	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
318	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
319	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
320	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  >  0  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  >  0  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  >  0  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
321	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  3  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
322	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
323	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
324	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
325	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
326	[BUG]  [BUGGY]  if(s.length()!=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    <    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
327	[BUG]  [BUGGY]  if(s.length()!=  2  &&  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  &&  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  &&  s.charAt(0)  ==  '-')  {	  if(s.length()    >=    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
328	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
329	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
330	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
331	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(1)    ==    'e'    ||    s.charAt(2)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
332	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  >=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  >=  0)  {	  if(s    ==    null    ||    s.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
333	[BUG]  [BUGGY]  if(s.length()  >=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
334	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
335	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(1)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
336	[BUG]  [BUGGY]  if(s.length()!=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    >    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
337	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    >    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
338	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  childValue!=  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  childValue!=  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  childValue!=  null  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
339	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  1)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
340	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  s.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString  ==  null  ||  s.length()!=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  s.length()!=  0)  {	  if(s    ==    null    ||    s.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
341	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  rawJsString.length()  ==  0)  {	  if(rawJsString!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
342	[BUG]  [BUGGY]  if(s!=  null  ||  rawJsString.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  rawJsString.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  rawJsString.length()  ==  0)  {	  if(rawJsString!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
343	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  rawJsString.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  rawJsString.equals( " "))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  rawJsString.equals( " "))  {	  if(s    ==    null    ||    s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
344	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  rawJsString.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  rawJsString.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  rawJsString.length()  ==  0)  {	  if(s    ==    null    ||    s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
345	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  rawJsString.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  rawJsString.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  rawJsString.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
346	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString  +  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString  +  1);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
347	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  16);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  16);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  16);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
348	[BUG]  [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString)+  1;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString)+  1;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNextSlot(rawJsString)+  1;	  int    nextSlot    =    getNextSlot(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
349	[BUG]  [BUGGY]  int  nextSlot  =  getNextNumberValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNextNumberValue(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNextNumberValue(rawJsString);	  int    nextSlot    =    getNextSlot(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
350	[BUG]  [BUGGY]  if(s.length()  <  2  &&  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  &&  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  &&  s.charAt(0)  ==  '-')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
351	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
352	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)!=  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)!=  '-')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
353	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(2)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
354	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  childValue  ==  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  childValue  ==  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  childValue  ==  null  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
355	[BUG]  [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
356	[BUG]  [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
357	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
358	[BUG]  [BUGGY]  if(s.length()  >  0  &&  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  &&  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  &&  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
359	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
360	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  2)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  rawJsString.length()  ==  2)  {	  if(rawJsString.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
361	[BUG]  [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()!=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()!=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    <=    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
362	[BUG]  [BUGGY]  if(s.length()  <  2  &&  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  2  &&  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  &&  s.charAt(0)  ==  '+')  {	  if(s.length()    <    2    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
363	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  rawJsString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('-',  rawJsString);	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
364	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-'    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
365	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-'    ||    s.charAt(1)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
366	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
367	[BUG]  [BUGGY]  if(s.length()  >  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
368	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  rawJsString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('.',  rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('.',  rawJsString);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
369	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'x')  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
370	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
371	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(9)  ==  '-'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(9)  ==  '-'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'a'  &&  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(9)  ==  '-'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  2)  ==  'a'  &&	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
372	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  s.indexOf('.')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString  ==  null  ||  s.indexOf('.')  <  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  s.indexOf('.')  <  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
373	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf(JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf(JSC_PROPERTY_NAME_FN);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf(JSC_PROPERTY_NAME_FN);	  int    nextSlot    =    s.indexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
374	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
375	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
376	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
377	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString  +  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsWhiteSpace(rawJsString  +  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsWhiteSpace(rawJsString  +  1);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
378	[BUG]  [BUGGY]  s  =  trimJsString(rawJsString);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsString(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsString(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
379	[BUG]  [BUGGY]  int  value  =  s.indexOf('.');  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  value  =  s.indexOf('.');  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  s.indexOf('.');	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
380	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf(':');  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf(':');  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf(':');	  int    nextSlot    =    s.lastIndexOf(':');    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
381	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
382	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(0)  ==  '-')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
383	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(0)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
384	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  s!=  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString  ==  null  ||  s!=  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  s!=  null  ||  s.length()  ==  0)  {	  if(s!=    null    &&    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
385	[BUG]  [BUGGY]  if(rawJsString!=  null  &&  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString!=  null  &&  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString!=  null  &&  s.length()  ==  0)  {	  if(s!=    null    &&    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
386	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  s.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString  ==  null  ||  s.length()  ==  1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  s.length()  ==  1)  {	  if(rawJsString    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
387	[BUG]  [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  >=  -1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  >=  -1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.indexOf('.')  >=  -1)  {	  if(s    ==    null    ||    s.indexOf('.')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
388	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    >    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
389	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  rawJsString.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  rawJsString.equals( " "))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  1  ||  rawJsString.equals( " "))  {	  if(s    ==    null    ||    s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
390	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(9)  ==  '-'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(9)  ==  '-'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'a'  &&  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(9)  ==  '-'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'a'  &&  s.charAt(  1)  ==  'a'  &&	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
391	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(2)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(2)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(2)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
392	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(9)  ==  '-'  &&  s.charAt(  1)  ==  '+')||(s.charAt(  1)  ==  '-'  &&  s.charAt(  1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||(s.charAt(9)  ==  '-'  &&  s.charAt(  1)  ==  '+')||(s.charAt(  1)  ==  '-'  &&  s.charAt(  1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(9)  ==  '-'  &&  s.charAt(  1)  ==  '+')||(s.charAt(  1)  ==  '-'  &&  s.charAt(  1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
393	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(0)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(0)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(0)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
394	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(2)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(2)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(1)  ==  '-'  &&  s.charAt(2)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
395	[BUG]  [BUGGY]  String  value  =  trimJsString(rawJsString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsString(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsString(rawJsString);	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
396	[BUG]  [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString  +  1);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString  +  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsWhiteSpace(rawJsString  +  1);	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
397	[BUG]  [BUGGY]  String  value  =  trimJsStringValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsStringValue(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsStringValue(rawJsString);	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
398	[BUG]  [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString)+  1;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString)+  1;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsWhiteSpace(rawJsString)+  1;	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
399	[BUG]  [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString  +  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString  +  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNumberValue(rawJsString  +  1);	  int    nextSlot    =    getNumberValue(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
400	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(3)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(3)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(3)  ==  '0')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
401	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  3  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
402	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FLOAT  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FLOAT  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FLOAT  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
403	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(3)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(3)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(3)  ==  '-')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
404	[BUG]  [BUGGY]  if(s!=  null  ||  s.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.length()  ==  2)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.length()  ==  2)  {	  if(s!=    null    ||    s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
405	[BUG]  [BUGGY]  if(rawJsString!=  null  ||  s.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(rawJsString!=  null  ||  s.length()  ==  1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString!=  null  ||  s.length()  ==  1)  {	  if(s!=    null    ||    s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
406	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(0)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
407	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(2)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
408	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(3)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(3)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(3)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
409	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
410	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(0)  ==  'x')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
411	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(3)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(3)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(3)  ==  'x')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
412	[BUG]  [BUGGY]  String  value  =  trimJsStringNumber(rawJsString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsStringNumber(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsStringNumber(rawJsString);	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
413	[BUG]  [BUGGY]  String  value  =  trimJsString(rawJsString.trim());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsString(rawJsString.trim());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsString(rawJsString.trim());	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
414	[BUG]  [BUGGY]  String  value  =  trimJsStringNumberValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  String  value  =  trimJsStringNumberValue(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsStringNumberValue(rawJsString);	  String    value    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
415	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  0);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  0);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('.',  0);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
416	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('-',  s.length());  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('-',  s.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('-',  s.length());	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
417	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('-');  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('-');  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('-');	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
418	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  0);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  0);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('-',  0);	  int    nextSlot    =    s.lastIndexOf('-');    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
419	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  s.length());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('.',  s.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('.',  s.length());	  int    nextSlot    =    s.indexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
420	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  0);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf(':',  0);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf(':',  0);	  int    nextSlot    =    s.lastIndexOf(':');    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
421	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
422	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    <    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
423	[BUG]  [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  4  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
424	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
425	[BUG]  [BUGGY]  if(s.length()  >=  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  <identifier>  expected	52	None	replace
426	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a  [CE]  unclosed  character  literal  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(2)    ==    'a'    &&    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
427	[BUG]  [BUGGY]  s  =  trimJsStringNumber(rawJsString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsStringNumber(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsStringNumber(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
428	[BUG]  [BUGGY]  s  =  trimJsString(rawJsString.trim());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsString(rawJsString.trim());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsString(rawJsString.trim());	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
429	[BUG]  [BUGGY]  s  =  trimJsStringValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  s  =  trimJsStringValue(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsStringValue(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
430	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  >=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  >=  0)  {	  if(s    ==    null    ||    s.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
431	[BUG]  [BUGGY]  if(s!=  null  ||  s.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.length()  >=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.length()  >=  0)  {	  if(s    ==    null    ||    s.length()    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
432	[BUG]  [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  4  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
433	[BUG]  [BUGGY]  if(s.length()  <=  1  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  1  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  1  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
434	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.char  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.char  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.char	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    	non-compiled	[CE]  <identifier>  expected	54	None	replace
435	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a  [CE]  unclosed  character  literal  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
436	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charA  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charA  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charA	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    	non-compiled	[CE]  	54	None	replace
437	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  3  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
438	[BUG]  [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  4  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
439	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  3  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(2)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
440	[BUG]  [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  4  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(2)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
441	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
442	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  ':')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  ':')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  ':')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
443	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
444	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  3  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  3  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  3  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
445	[BUG]  [BUGGY]  Integer  s  =  trimJsString(rawJsString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsString(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsString(rawJsString);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
446	[BUG]  [BUGGY]  Integer  s  =  trimJsString(rawJsString.substring(0,  rawJsString.length()));  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  Integer  s  =  trimJsString(rawJsString.substring(0,  rawJsString.length()));  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsString(rawJsString.substring(0,  rawJsString.length()));	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
447	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  <  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  <  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  <  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
448	[BUG]  [BUGGY]  if(s!=  null  ||  s.indexOf('.')  <  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  ||  s.indexOf('.')  <  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.indexOf('.')  <  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
449	[BUG]  [BUGGY]  if(s  ==  null  ||  s.indexOf('.',  s.length())  <  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.indexOf('.',  s.length())  <  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.indexOf('.',  s.length())  <  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
450	[BUG]  [BUGGY]  if(s  ==  null  ||  s.indexOf( ".s.IF ")  <  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.indexOf( ".s.IF ")  <  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.indexOf( ".s.IF ")  <  0)  {	  if(s    ==    null    ||    s.indexOf('.')    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
451	[BUG]  [BUGGY]  int  value  =  s.lastIndexOf('.',  0);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  value  =  s.lastIndexOf('.',  0);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  s.lastIndexOf('.',  0);	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
452	[BUG]  [BUGGY]  int  value  =  s.indexOf('.',  s.length());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  value  =  s.indexOf('.',  s.length());  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  s.indexOf('.',  s.length());	  int    value    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
453	[BUG]  [BUGGY]  if(s  ==  null  ||  s!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s!=  null)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s!=  null)  {	  if(rawJsString!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
454	[BUG]  [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
455	[BUG]  [BUGGY]  if(s.length()  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
456	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
457	[BUG]  [BUGGY]  int  nextSlot  =  vars.get(s);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  vars.get(s);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  vars.get(s);	  int    nextSlot    =    vars.size();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
458	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
459	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  s.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.indexOf('.',  s.length()  -  1);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('.',  s.length()  -  1);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
460	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
461	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  1  ||  s.charAt(0)  ==  '0')  {	  if(s!=    null    ||    s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
462	[BUG]  [BUGGY]  if(s!=  null  &&  s.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  &&  s.length()  ==  1)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  &&  s.length()  ==  1)  {	  if(s!=    null    ||    s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
463	[BUG]  [BUGGY]  if(s.length()  <=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
464	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
465	[BUG]  [BUGGY]  if(s.length()  <  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
466	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(2)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(2)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(2)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
467	[BUG]  [BUGGY]  if(s.length()  <=  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    '+')||(s.charAt(1)    ==    '-'    &&    s.charAt(1)    ==    '-'))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
468	[BUG]  [BUGGY]  int  nextSlot  =  getStringNumberValue(s);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getStringNumberValue(s);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getStringNumberValue(s);	  int    nextSlot    =    getNumberValue(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
469	[BUG]  [BUGGY]  int  nextSlot  =  getStringValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getStringValue(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getStringValue(rawJsString);	  int    nextSlot    =    getNumberValue(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
470	[BUG]  [BUGGY]  if(s.length()  >  0  &&  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  &&  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  &&  s.charAt(0)  ==  '-')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
471	[BUG]  [BUGGY]  if(s.length()  <=  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt    	non-compiled	[CE]  	51	None	replace
472	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(0)    ==    'f')    {    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
473	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    >    2    ||    s.charAt(1)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
474	[BUG]  [BUGGY]  int  nextSlot  =  getNextValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNextValue(rawJsString);  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNextValue(rawJsString);	  int    nextSlot    =    getNextSlot(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
475	[BUG]  [BUGGY]  int  nextSlot  =  getNextSlot(s.substring(0,  s.length()  -  1));  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  getNextSlot(s.substring(0,  s.length()  -  1));  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNextSlot(s.substring(0,  s.length()  -  1));	  int    nextSlot    =    getNextSlot(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
476	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
477	[BUG]  [BUGGY]  if(s.length()  <=  3  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  3  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  3  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
478	[BUG]  [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  <identifier>  expected	53	None	replace
479	[BUG]  [BUGGY]  if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.	  if(s.length()    ==    2    ||(s.charAt(0)    ==    '-'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s.charAt(1)    ==    'a'    &&    s    	non-compiled	[CE]  <identifier>  expected	53	None	replace
480	[BUG]  [BUGGY]  if(s  ==  null  ||  s!=  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s!=  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s!=  null  ||  s.length()  ==  0)  {	  if(s!=    null    &&    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
481	[BUG]  [BUGGY]  if(s!=  null  &&  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  &&  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  &&  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {	  if(s!=    null    &&    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
482	[BUG]  [BUGGY]  if(s!=  null  &&  s.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s!=  null  &&  s.length()  >  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  &&  s.length()  >  0)  {	  if(s!=    null    &&    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
483	[BUG]  [BUGGY]  if(s  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null)  {	  if(s!=    null    &&    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
484	[BUG]  [BUGGY]  if(s.length()  <=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
485	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '+')  {	  if(s    ==    null    ||    s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
486	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
487	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  4  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s    ==    null    ||    s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
488	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.')+  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.lastIndexOf('.')+  1;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('.')+  1;	  int    nextSlot    =    s.length();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
489	[BUG]  [BUGGY]  int  nextSlot  =  s.length()  -  2;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  int  nextSlot  =  s.length()  -  2;  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.length()  -  2;	  int    nextSlot    =    s.length();    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
490	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
491	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
492	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)!=  '-')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)!=  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)!=  '-')  {	  if(s    ==    null    ||    s.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
493	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)!=  '0')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)!=  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)!=  '0')  {	  if(s    ==    null    ||    s.length()!=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
494	[BUG]  [BUGGY]  if(s.length()  <=  3  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  <=  3  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  3  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    <=    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
495	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(0)  ==  '0')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
496	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  3  ||  s.charAt(0)  ==  '0')  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
497	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >=  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(2)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
498	[BUG]  [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  2  &&  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  &&  s.charAt(0)  ==  '+')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
499	[BUG]  [BUGGY]  if(s.length()  >  0  &&  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  >  0  &&  s.charAt(0)  ==  '+')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  &&  s.charAt(0)  ==  '+')  {	  if(s.length()    >    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
500	[BUG]  [BUGGY]  if(s.length()  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s.length()  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
501	[BUG]  [BUGGY]  if(s  ==  null  ||  s!=  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s!=  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s!=  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
502	[BUG]  [BUGGY]  if(s  >=  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  >=  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  >=  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {	  if(s    ==    JSC_PROPERTY_NAME_FN    ||    s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
503	[BUG]  [BUGGY]  if(s  ==  null  ||  s.indexOf( ".s.IF ")  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.indexOf( ".s.IF ")  >=  0)  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.indexOf( ".s.IF ")  >=  0)  {	  if(s    ==    null    ||    s.indexOf('.')    >=    0)    {    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
504	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)!=  '.')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);        [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)!=  '.')  {  [BUGGY]      return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)!=  '.')  {	  if(s    ==    null    ||    s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
