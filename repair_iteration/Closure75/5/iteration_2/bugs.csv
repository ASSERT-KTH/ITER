bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  String  value  =  trimJsWhiteSpace(rawJsString);  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	String  value  =  trimJsWhiteSpace(rawJsString);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString);  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  s  =  trimJsWhiteSpace(rawJsString);  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	s  =  trimJsWhiteSpace(rawJsString);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  nextSlot  =  s.lastIndexOf('.');  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('.');	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString);  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf(rawJsString);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  nextSlot  =  getNextSlot(rawJsString);  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNextSlot(rawJsString);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  nextSlot  =  getNumberValue(rawJsString);  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  getNumberValue(rawJsString);	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
8	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()!=  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()!=  0)  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
15	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s!=  null  ||  s.length()  ==  0)  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.length()  ==  0)  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
17	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()  ==  2)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2)  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()  ==  1)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  1)  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'f')  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
23	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(1)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  0  ||  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s  ==  null  ||  s.length()  ==  0)  {	  if(s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
39	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
41	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(1)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  0  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  0  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  >  0  ||  s.charAt(0)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >  0  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <  2  ||  s.charAt(0)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <  2  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  1  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')||(s.charAt(1)  ==  '-'  &&  s.charAt(1)  ==  '-'))  {	  if(s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
51	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt	  if(s.length()    ==    2)    {    	non-compiled	[CE]  	4	None	replace
52	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&	  if(s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [CE]  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s	  if(s.length()    ==    2)    {    	non-compiled	[CE]  	4	None	replace
54	[BUG]  [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&  s.charAt(1)  ==  'a'  &&	  if(s.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  if(s!=  null  ||  s.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s!=  null  ||  s.length()  ==  1)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  ||  s.length()  ==  1)  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  if(rawJsString.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(rawJsString.length()  ==  1)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString.length()  ==  1)  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-');  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  nextSlot  =  s.lastIndexOf('-');  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf('-');	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(':');  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  nextSlot  =  s.lastIndexOf(':');  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.lastIndexOf(':');	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
59	[BUG]  [BUGGY]  int  value  =  s.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  value  =  s.lastIndexOf('.');  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  value  =  s.lastIndexOf('.');	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
60	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
64	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  0  ||  s.charAt(1)  ==  'e'  ||  s.charAt(2)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(1)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(rawJsString  ==  null  ||  s.length()  ==  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString  ==  null  ||  s.length()  ==  0)  {	  if(s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
66	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  0  ||  s.charAt(2)  ==  'e'  ||  s.charAt(1)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
67	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(2)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(2)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  0  ||  s.charAt(2)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
69	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(2)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(2)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  0  ||  s.charAt(2)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  if(rawJsString!=  null  ||  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(rawJsString!=  null  ||  s.length()  ==  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(rawJsString!=  null  ||  s.length()  ==  0)  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
71	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
72	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
73	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
74	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.');  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  nextSlot  =  s.indexOf('.');  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.indexOf('.');	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
75	[BUG]  [BUGGY]  int  nextSlot  =  s.length();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  nextSlot  =  s.length();  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  s.length();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
76	[BUG]  [BUGGY]  int  nextSlot  =  vars.size();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  int  nextSlot  =  vars.size();  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	int  nextSlot  =  vars.size();	      	non-compiled	[CE]  illegal  start  of  type	7	None	replace
77	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '-')  {	  if(s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
78	[BUG]  [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '0')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  JSC_PROPERTY_NAME_FN  ||  s.charAt(0)  ==  '0')  {	  if(s    ==    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
79	[BUG]  [BUGGY]  if(s.length()  <=  0  ||  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <=  0  ||  s.charAt(0)  ==  '+')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  0  ||  s.charAt(0)  ==  '+')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
80	[BUG]  [BUGGY]  if(s!=  null  &&  s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s!=  null  &&  s.length()  ==  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s!=  null  &&  s.length()  ==  0)  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
81	[BUG]  [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  <  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  <  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.indexOf('.')  <  0)  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  >=  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.indexOf('.')  >=  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.indexOf('.')  >=  0)  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  if(s  ==  null  ||  s.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s  ==  null  ||  s.length()  >=  0)  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s  ==  null  ||  s.length()  >=  0)  {	  if(s!=    null    ||    s.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
84	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
85	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'f')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'f')  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
86	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'X')  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
87	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
88	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
89	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
90	[BUG]  [BUGGY]  if(s.length()  <=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  0  ||  s.charAt(0)  ==  'e'  ||  s.charAt(0)  ==  'E')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    'e'    ||    s.charAt(0)    ==    'E')    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
91	[BUG]  [BUGGY]  if(s.length()  <=  0  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <=  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  0  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
92	[BUG]  [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  >=  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  >=  2  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    0    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
93	[BUG]  [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  <=  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
94	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {  [BUGGY]    return  0.0;  }  if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	317	317	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
