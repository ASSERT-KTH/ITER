bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  <=  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  <=  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  <=  0);	  return    TernaryValue.forBoolean(n.getDouble()    >=    0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
2	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  -  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  -  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  -  0);	  return    TernaryValue.forBoolean(n.getDouble()    >=    0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
3	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  {  0);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  {  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  {  0);	  return    TernaryValue.forBoolean(n.getDouble()    >=    0);    	non-compiled	[CE]  	6	None	replace
4	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  ==  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  ==  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString().length()  ==  0);	  return    TernaryValue.forBoolean(n.getDouble()    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
5	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  >  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  >  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getInt()  >  0);	  return    TernaryValue.forBoolean(n.getInt()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  +  1);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getInt()  +  1);	  return    TernaryValue.forBoolean(n.getInt()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString()  >>  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString()  >>  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString()  >>  0);	  return    TernaryValue.forBoolean(n.getInt()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  <  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  <  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getInt()  <  0);	  return    TernaryValue.forBoolean(n.getInt()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getLong()  >>  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getLong()  >>  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getLong()  >>  0);	  return    TernaryValue.forBoolean(n.getInt()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  >=  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  >=  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getInt()  >=  0);	  return    TernaryValue.forBoolean(n.getInt()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble());  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble());	  return    TernaryValue.forBoolean(n.getDouble()    +    0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  0);  [CE]  [FE]          AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  0);	  return    TernaryValue.forBoolean(n.getDouble()    +    0);    	non-compiled	[CE]  	8	None	replace
13	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  /  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  /  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  /  0);	  return    TernaryValue.forBoolean(n.getDouble()    +    0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  +  2);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  +  2);	  return    TernaryValue.forBoolean(n.getDouble()    +    0);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  >=  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  >=  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString().length()  >=  0);	  return    TernaryValue.forBoolean(n.getString()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  >>  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  >>  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString().length()  >>  0);	  return    TernaryValue.forBoolean(n.getString()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()!=  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()!=  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString().length()!=  0);	  return    TernaryValue.forBoolean(n.getString()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  >  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  >  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString().length()  >  0);	  return    TernaryValue.forBoolean(n.getString()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  [Delete]  0);  [CE]  [FE]                      AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  [Delete]  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString().length()  [Delete]  0);	  return    TernaryValue.forBoolean(n.getString()!=    0);    	non-compiled	[CE]  	4	None	replace
20	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  [BUGGY]  0);  [CE]  [FE]                        AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  [BUGGY]  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString().length()  [BUGGY]  0);	  return    TernaryValue.forBoolean(n.getString()!=    0);    	non-compiled	[CE]  	4	None	replace
21	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  <  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  <  1);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  <  1);	  return    TernaryValue.forBoolean(n.getDouble()    <    0);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  /  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  /  1);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  /  1);	  return    TernaryValue.forBoolean(n.getDouble()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  -  1);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  -  1);	  return    TernaryValue.forBoolean(n.getDouble()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()).not();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()).not();  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()).not();	  return    TernaryValue.forBoolean(n.getDouble()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()));  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()));  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()));	  return    TernaryValue.forBoolean(n.getDouble()    +    1);    	non-compiled	[CE]  	2	None	replace
26	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString()  +  1);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString()  +  1);	  return    TernaryValue.forBoolean(n.getDouble()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  Node  n  =  n.getFirstChild();  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	Node  n  =  n.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getLastChild()).not();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getLastChild()).not();  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getLastChild()).not();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
29	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getString());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getString());  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getString());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getLastChild());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getLastChild());  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getLastChild());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  break;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  Node  n  =  n.getFirstChild();  break;  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	Node  n  =  n.getFirstChild();  break;	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getString()).not();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getString()).not();  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	Node  n  =  n.getFirstChild();  return  getPureBooleanValue(n.getString()).not();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
33	[BUG]  [BUGGY]  Node  n  =  n.getLastChild();  return  getPureBooleanValue(n.getString());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  Node  n  =  n.getLastChild();  return  getPureBooleanValue(n.getString());  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	Node  n  =  n.getLastChild();  return  getPureBooleanValue(n.getString());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
34	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble().length()  >  0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble().length()  >  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble().length()  >  0);	  return    TernaryValue.forBoolean(n.getDouble()    >    0);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString()  >  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString()  >  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString()  >  0);	  return    TernaryValue.forBoolean(n.getString()!=    0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  return  getPureBooleanValue(n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  getPureBooleanValue(n.getFirstChild());  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  getPureBooleanValue(n.getFirstChild());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
37	[BUG]  [BUGGY]  return  getPureBooleanValue(n.getLastChild());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  getPureBooleanValue(n.getLastChild());  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  getPureBooleanValue(n.getLastChild());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  return  getPureBooleanValue(n.getFirstChild()).not();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  getPureBooleanValue(n.getFirstChild()).not();  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  getPureBooleanValue(n.getFirstChild()).not();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  return  getPureBooleanValue(n.getLastChild()).not();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  getPureBooleanValue(n.getLastChild()).not();  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  getPureBooleanValue(n.getLastChild()).not();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString()  +  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString()  +  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString()  +  0);	  return    TernaryValue.forBoolean(n.getDouble()    >=    0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
41	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString()  {  0);  [CE]  [FE]                AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString()  {  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString()  {  0);	  return    TernaryValue.forBoolean(n.getDouble()    ==    0);    	non-compiled	[CE]  	5	None	replace
42	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  ==  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getInt()  ==  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getInt()  ==  0);	  return    TernaryValue.forBoolean(n.getDouble()    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getNumber()  ==  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getNumber()  ==  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getNumber()  ==  0);	  return    TernaryValue.forBoolean(n.getDouble()    ==    0);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getNumber()  +  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getNumber()  +  1);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getNumber()  +  1);	  return    TernaryValue.forBoolean(n.getDouble()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
45	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  <  0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getString().length()  <  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getString().length()  <  0);	  return    TernaryValue.forBoolean(n.getDouble()    <    0);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  *  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  *  0);  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  *  0);	  return    TernaryValue.forBoolean(n.getDouble()    >=    0);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  return  getPureNumberValue(n.getFirstChild());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  getPureNumberValue(n.getFirstChild());  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  getPureNumberValue(n.getFirstChild());	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  return  getPureBooleanValue(n.getFirstChild()).booleanValue();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  getPureBooleanValue(n.getFirstChild()).booleanValue();  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  getPureBooleanValue(n.getFirstChild()).booleanValue();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()).booleanValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()).booleanValue();  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()).booleanValue();	  return    TernaryValue.forBoolean(n.getDouble()    +    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  }  );  [CE]  [FE]        AssertionFailedError    [CONTEXT]    static  TernaryValue  getPureBooleanValue(Node  n)  {  switch  (n.getType())  {  case  Token.STRING:  return  TernaryValue.forBoolean(n.getString().length()  >  0);  case  Token.NUMBER:    [BUGGY]  return  TernaryValue.forBoolean(n.getDouble()  }  );  [BUGGY]      case  Token.NOT:  return  getPureBooleanValue(n.getLastChild()).not();  case  Token.NULL:  case  Token.FALSE:  case  Token.VOID:  return  TernaryValue.FALSE;  case  Token.NAME:  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getPureBooleanValue  [RETURN_TYPE]  TernaryValue  Node  n  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  Node  n  String  JSC_PROPERTY_NAME_FN  name  Map  vars  int  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.35355339059327373	123	123	1	replace	return  TernaryValue.forBoolean(n.getDouble()  }  );	  return    TernaryValue.forBoolean(n.getDouble()    >    0);    	non-compiled	[CE]  	1	None	replace
