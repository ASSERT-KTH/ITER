bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-');  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf('-');  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf('-');	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
2	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf( ".s.IFJDCS ");  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf( ".s.IFJDCS ");  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf( ".s.IFJDCS ");	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
3	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf( "- "  +  s.length());  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf( "- "  +  s.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf( "- "  +  s.length());	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
4	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  s.length());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf('-',  s.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf('-',  s.length());	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
5	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf( "- ");  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.indexOf( "- ");  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.indexOf( "- ");	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
6	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf( "- ",  16);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf( "- ",  16);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf( "- ",  16);	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
7	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
13	[BUG]  [BUGGY]  if(s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
14	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
15	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
16	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  1  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  1  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
17	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
18	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(2)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
19	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(3)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(3)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(3)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(2)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
21	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
22	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
23	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
24	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '-'  &&  s.charAt(1)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
25	[BUG]  [BUGGY]  if(s.charAt(2)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(2)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(2)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
26	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '-'  ||  s.charAt(2)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '-'  ||  s.charAt(2)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '-'  ||  s.charAt(2)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
27	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(3)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
28	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(3)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
29	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(3)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
30	[BUG]  [BUGGY]  if(s.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  0)  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  0)  {	  if(s.length()    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
31	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString,  16);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString,  16);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf(rawJsString,  16);	  int    nextSlot    =    s.lastIndexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString,  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString,  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf(rawJsString,  1);	  int    nextSlot    =    s.lastIndexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString)+  1;  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString)+  1;  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf(rawJsString)+  1;	  int    nextSlot    =    s.lastIndexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.indexOf(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.indexOf(rawJsString);	  int    nextSlot    =    s.lastIndexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
35	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString).doubleValue();  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString).doubleValue();  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf(rawJsString).doubleValue();	  int    nextSlot    =    s.lastIndexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
36	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString,  2);  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString,  2);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf(rawJsString,  2);	  int    nextSlot    =    s.lastIndexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
38	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
39	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
40	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(3)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(3)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(3)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
41	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  value);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  value);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  value);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
44	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  16);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  16);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  16);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
45	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  1);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  1);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
46	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    &&    (s.charAt(0)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  16);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  16);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.lastIndexOf('.',  16);	  int    nextSlot    =    rawJsString.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
49	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  0);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  0);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.lastIndexOf('.',  0);	  int    nextSlot    =    rawJsString.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  1);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.lastIndexOf('.',  1);	  int    nextSlot    =    rawJsString.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  4);  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  4);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.lastIndexOf('.',  4);	  int    nextSlot    =    rawJsString.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  2);  [CE]  illegal  start  of  expression  [FE]                                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  2);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.lastIndexOf('.',  2);	  int    nextSlot    =    rawJsString.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  12);  [CE]  illegal  start  of  expression  [FE]                                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  12);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.lastIndexOf('.',  12);	  int    nextSlot    =    rawJsString.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  1  ||  s.charAt(2)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
55	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(3)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  1  ||  s.charAt(3)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  1  ||  s.charAt(3)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
56	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
57	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  rawJsString.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  rawJsString.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  rawJsString.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(rawJsString.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
58	[BUG]  [BUGGY]  if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(rawJsString.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
59	[BUG]  [BUGGY]  int  nextSlot  =  s.length();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.length();  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.length();	  int    nextSlot    =    rawJsString.length();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
60	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.length()  -  1;  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.length()  -  1;	  int    nextSlot    =    rawJsString.length();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
61	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.length()  +  1;  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.length()  +  1;	  int    nextSlot    =    rawJsString.length();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
62	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.length()  -  2;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.length()  -  2;  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.length()  -  2;	  int    nextSlot    =    rawJsString.length();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
63	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.length()  *  2;  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.length()  *  2;  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.length()  *  2;	  int    nextSlot    =    rawJsString.length();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
64	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
65	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
66	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
67	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
68	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(3)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(3)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(3)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
69	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  3  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
70	[BUG]  [BUGGY]  if(s.length()!=  1  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()!=  1  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()!=  1  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
71	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  1  ||  s.charAt(1)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  1  ||  s.charAt(1)  ==  '0')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
72	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  1  ||  s.charAt(2)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  1  ||  s.charAt(2)  ==  '0')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
73	[BUG]  [BUGGY]  if(s.length()  ==  1  ||  s.charAt(3)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  1  ||  s.charAt(3)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  1  ||  s.charAt(3)  ==  '0')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
74	[BUG]  [BUGGY]  if(s.length()!=  1  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()!=  1  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()!=  1  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
75	[BUG]  [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString,  value);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString,  value);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsWhiteSpace(rawJsString,  value);	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
76	[BUG]  [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
77	[BUG]  [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
78	[BUG]  [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
79	[BUG]  [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString.trim());  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString.trim());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsWhiteSpace(rawJsString.trim());	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
80	[BUG]  [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
81	[BUG]  [BUGGY]  if(s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
82	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
83	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  	39	None	replace
84	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
85	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
86	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
87	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  16);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.indexOf('.',  16);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.indexOf('.',  16);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
88	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  1);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.indexOf('.',  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.indexOf('.',  1);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
89	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  4);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.indexOf('.',  4);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.indexOf('.',  4);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
90	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  0);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.indexOf('.',  0);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.indexOf('.',  0);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
91	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  2);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.indexOf('.',  2);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.indexOf('.',  2);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
92	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  12);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.indexOf('.',  12);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.indexOf('.',  12);	  int    nextSlot    =    s.indexOf('.');    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
93	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
94	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
95	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
96	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
97	[BUG]  [BUGGY]  int  s  =  s.lastIndexOf('.',  16);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  s.lastIndexOf('.',  16);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  s.lastIndexOf('.',  16);	  int    s    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
98	[BUG]  [BUGGY]  int  s  =  rawJsString.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  rawJsString.lastIndexOf('.');  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  rawJsString.lastIndexOf('.');	  int    s    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
99	[BUG]  [BUGGY]  char  s  =  s.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  char  s  =  s.lastIndexOf('.');  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	char  s  =  s.lastIndexOf('.');	  int    s    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
100	[BUG]  [BUGGY]  int  s  =  s.indexOf('.');  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  s.indexOf('.');  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  s.indexOf('.');	  int    s    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
101	[BUG]  [BUGGY]  int  s  =  s.lastIndexOf('.',  12);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  s.lastIndexOf('.',  12);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  s.lastIndexOf('.',  12);	  int    s    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
102	[BUG]  [BUGGY]  int  s  =  s.lastIndexOf('.',  4);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  s.lastIndexOf('.',  4);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  s.lastIndexOf('.',  4);	  int    s    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
103	[BUG]  [BUGGY]  int  s  =  s.lastIndexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  s.lastIndexOf('.',  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  s.lastIndexOf('.',  1);	  int    s    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
104	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(2)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
105	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(2)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
106	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
107	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
108	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
109	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
110	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
111	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  16);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  16);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf('.',  16);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
112	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf('.',  1);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
113	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  4);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  4);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf('.',  4);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
114	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  12);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  12);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf('.',  12);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
115	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  2);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf('.',  2);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf('.',  2);	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
116	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
117	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
118	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  value);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  value);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsWhiteSpace(rawJsString,  value);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
119	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.trim());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.trim());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsWhiteSpace(rawJsString.trim());	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
120	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  1));	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
121	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()));  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()));  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()));	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
122	[BUG]  [BUGGY]  s  =  trimStringNumberValue(rawJsString);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimStringNumberValue(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimStringNumberValue(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
123	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  2));  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  2));  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()  -  2));	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
124	[BUG]  [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  s.length());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  s.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsWhiteSpace(rawJsString,  s.length());	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
125	[BUG]  [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  s);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  s);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsWhiteSpace(rawJsString,  s);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
126	[BUG]  [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString.length());  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsWhiteSpace(rawJsString.length());	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
127	[BUG]  [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  value);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  value);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsWhiteSpace(rawJsString,  value);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
128	[BUG]  [BUGGY]  int  nextSlot  =  getStringNumberValue(rawJsString);  [CE]  illegal  start  of  expression  [FE]                                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  getStringNumberValue(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  getStringNumberValue(rawJsString);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
129	[BUG]  [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [CE]  illegal  start  of  expression  [FE]                                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
130	[BUG]  [BUGGY]  if(rawJsString.length()  ==  1)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString.length()  ==  1)  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString.length()  ==  1)  {	  if(rawJsString.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
131	[BUG]  [BUGGY]  if(rawJsString!=  null  ||  rawJsString.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString!=  null  ||  rawJsString.length()  ==  2)  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString!=  null  ||  rawJsString.length()  ==  2)  {	  if(rawJsString.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
132	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  2)  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString  ==  null  ||  rawJsString.length()  ==  2)  {	  if(rawJsString.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
133	[BUG]  [BUGGY]  if(rawJsString.length()  ==  2  ||  rawJsString.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString.length()  ==  2  ||  rawJsString.charAt(0)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString.length()  ==  2  ||  rawJsString.charAt(0)  ==  '-')  {	  if(rawJsString.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
134	[BUG]  [BUGGY]  if(rawJsString.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString.length()  ==  0)  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString.length()  ==  0)  {	  if(rawJsString.length()    ==    2)    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
135	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
136	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
137	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
138	[BUG]  [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  value);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  value);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  trimJsWhiteSpace(rawJsString,  value);	  int    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
139	[BUG]  [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString.length());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  trimJsWhiteSpace(rawJsString.length());	  int    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
140	[BUG]  [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  trimJsWhiteSpace(rawJsString,  rawJsString.length());	  int    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
141	[BUG]  [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  trimJsWhiteSpace(rawJsString,  JSC_PROPERTY_NAME_FN);	  int    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
142	[BUG]  [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);	  int    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
143	[BUG]  [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  s.length());  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  s.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  trimJsWhiteSpace(rawJsString,  s.length());	  int    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
144	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
145	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
146	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
147	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(3)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(3)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(3)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
148	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(2)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(2)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(2)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
149	[BUG]  [BUGGY]  if(rawJsString.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString.length()  ==  2  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString.length()  ==  2  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
150	[BUG]  [BUGGY]  if(rawJsString!=  null  ||  rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString!=  null  ||  rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString!=  null  ||  rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(rawJsString.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
151	[BUG]  [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString  ==  null  ||  rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString  ==  null  ||  rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(rawJsString.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
152	[BUG]  [BUGGY]  if(rawJsString!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString!=  null)  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString!=  null)  {	  if(rawJsString.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
153	[BUG]  [BUGGY]  if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(rawJsString.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
154	[BUG]  [BUGGY]  if(rawJsString  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString  ==  null)  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString  ==  null)  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
155	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(0)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(0)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '0'  &&  s.charAt(0)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
156	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
157	[BUG]  [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString  +  1);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString  +  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  trimJsWhiteSpace(rawJsString  +  1);	  int    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	34	None	replace
158	[BUG]  [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString)+  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString)+  1;  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  trimJsWhiteSpace(rawJsString)+  1;	  int    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
159	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  orphaned  case	44	None	replace
160	[BUG]  [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '0')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  4  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  orphaned  case	44	None	replace
161	[BUG]  [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '0')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  3  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  3  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  orphaned  case	44	None	replace
162	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    &&    s.charAt(0)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  orphaned  case	4	None	replace
163	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    &&    s.charAt(0)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  orphaned  case	4	None	replace
164	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
165	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
166	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
167	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
168	[BUG]  [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '-')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  4  ||  s.charAt(0)  ==  '-')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  orphaned  case	20	None	replace
169	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0')  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  orphaned  case	23	None	replace
170	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '-'  ||  s.charAt(1)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  orphaned  case	27	None	replace
171	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.indexOf('.');  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.indexOf('.');  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.indexOf('.');	  int    nextSlot    =    rawJsString.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	13	None	replace
172	[BUG]  [BUGGY]  String  s  =  trimJsString(rawJsString);  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsString(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsString(rawJsString);	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	8	None	replace
173	[BUG]  [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString  +  1);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsWhiteSpace(rawJsString  +  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsWhiteSpace(rawJsString  +  1);	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	8	None	replace
174	[BUG]  [BUGGY]  if(rawJsString.length()!=  2)  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString.length()!=  2)  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString.length()!=  2)  {	  if(rawJsString.length()    ==    2)    {    	non-compiled	[CE]  orphaned  case	30	None	replace
175	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	33	None	replace
176	[BUG]  [BUGGY]  if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	40	None	replace
177	[BUG]  [BUGGY]  int  s  =  rawJsString.indexOf('.');  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  rawJsString.indexOf('.');  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  rawJsString.indexOf('.');	  int    s    =    s.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	38	None	replace
178	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  orphaned  case  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(3)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	26	None	replace
179	[BUG]  [BUGGY]  if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(rawJsString.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(3)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	26	None	replace
180	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(3)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	26	None	replace
181	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf( ".- ");  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf( ".- ");  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf( ".- ");	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  orphaned  case	37	None	replace
182	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf( "- "+rawJsString);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf( "- "+rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf( "- "+rawJsString);	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  orphaned  case	37	None	replace
183	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	39	None	replace
184	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(0)  ==  'X')  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(0)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(0)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	39	None	replace
185	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(9)  ==  '0'  &&  (s.charAt(  1)  ==  'x'  ||  s.charAt(  1)  ==  'X'))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(9)  ==  '0'  &&  (s.charAt(  1)  ==  'x'  ||  s.charAt(  1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(9)  ==  '0'  &&  (s.charAt(  1)  ==  'x'  ||  s.charAt(  1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(2)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	2	None	replace
186	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString  +  1);  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsWhiteSpace(rawJsString  +  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsWhiteSpace(rawJsString  +  1);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	10	None	replace
187	[BUG]  [BUGGY]  s  =  trimJsString(rawJsString);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsString(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsString(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	10	None	replace
188	[BUG]  [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsWhiteSpace(rawJsString,  rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	10	None	replace
189	[BUG]  [BUGGY]  s  =  trimJsWordValue(rawJsString);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsWordValue(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsWordValue(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	10	None	replace
190	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString  +  1);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf(rawJsString  +  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf(rawJsString  +  1);	  int    nextSlot    =    s.lastIndexOf(rawJsString);    	non-compiled	[CE]  orphaned  case	12	None	replace
191	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  orphaned  case	3	None	replace
192	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  orphaned  case  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    &&    (s.charAt(0)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	5	None	replace
193	[BUG]  [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString  +  1);  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString  +  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsWhiteSpace(rawJsString  +  1);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	11	None	replace
194	[BUG]  [BUGGY]  int  nextSlot  =  trimJsNumber(rawJsString);  [CE]  orphaned  case  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsNumber(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsNumber(rawJsString);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	11	None	replace
195	[BUG]  [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [CE]  orphaned  case  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsWhiteSpace(rawJsString,  rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsWhiteSpace(rawJsString,  rawJsString);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	11	None	replace
196	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(3)  ==  'X'))  {  [CE]  orphaned  case  [FE]            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(3)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(3)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	43	None	replace
197	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString  +  1);  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString  +  1);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString  +  1);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	7	None	replace
198	[BUG]  [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()));  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  Integer  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()));  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	Integer  s  =  trimJsWhiteSpace(rawJsString.substring(0,  rawJsString.length()));	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  case	7	None	replace
199	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	41	None	replace
200	[BUG]  [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	40	None	replace
201	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(0)    ==    'x')    {    	non-compiled	[CE]  orphaned  case	28	None	replace
202	[BUG]  [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  s.charAt(0)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(0)    ==    'x')    {    	non-compiled	[CE]  orphaned  case	28	None	replace
203	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(0)    ==    'x')    {    	non-compiled	[CE]  orphaned  case	28	None	replace
204	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [CE]  orphaned  case  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  ||  s.charAt(0)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(0)    ==    'x')    {    	non-compiled	[CE]  orphaned  case	28	None	replace
205	[BUG]  [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(0)    ==    'x')    {    	non-compiled	[CE]  orphaned  case	28	None	replace
206	[BUG]  [BUGGY]  int  s  =  s.lastIndexOf('.',  2);  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  s.lastIndexOf('.',  2);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  s.lastIndexOf('.',  2);	  int    s    =    s.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	38	None	replace
207	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  orphaned  case  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(1)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	6	None	replace
208	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [CE]  orphaned  case  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(2)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(2)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	33	None	replace
209	[BUG]  [BUGGY]  if(s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(2)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
210	[BUG]  [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  4  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  4  ||  s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
211	[BUG]  [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(1)  ==  '0'  &&  s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
212	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '-')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '-')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '-')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '-')    {    	non-compiled	[CE]  orphaned  case	21	None	replace
213	[BUG]  [BUGGY]  if(s.charAt(2)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  orphaned  case  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(2)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(2)  ==  '0'  &&  s.charAt(0)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.length()    ==    2    ||    s.charAt(0)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  orphaned  case	31	None	replace
214	[BUG]  [BUGGY]  int  nextSlot  =  s.indexOf('.',  s.length());  [CE]  orphaned  case  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.indexOf('.',  s.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.indexOf('.',  s.length());	  int    nextSlot    =    s.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	9	None	replace
215	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [CE]  orphaned  case  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  ||  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X')    {    	non-compiled	[CE]  orphaned  case	42	None	replace
216	[BUG]  [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  s);  [CE]  orphaned  default  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  s  =  trimJsWhiteSpace(rawJsString,  s);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  s  =  trimJsWhiteSpace(rawJsString,  s);	  int    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  orphaned  default	34	None	replace
217	[BUG]  [BUGGY]  int  nextSlot  =(rawJsString  ==  null)?  0  :  rawJsString.length();  [CE]  orphaned  default  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =(rawJsString  ==  null)?  0  :  rawJsString.length();  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =(rawJsString  ==  null)?  0  :  rawJsString.length();	  int    nextSlot    =    rawJsString.length();    	non-compiled	[CE]  orphaned  default	35	None	replace
218	[BUG]  [BUGGY]  int  nextSlot  =(rawJsString!=  null)?  0  :  rawJsString.length();  [CE]  orphaned  default  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =(rawJsString!=  null)?  0  :  rawJsString.length();  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =(rawJsString!=  null)?  0  :  rawJsString.length();	  int    nextSlot    =    rawJsString.length();    	non-compiled	[CE]  orphaned  default	35	None	replace
219	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  {  [CE]  orphaned  default  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '-'  ||  s.charAt(0)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  orphaned  default	27	None	replace
220	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '-'  &&  s.charAt(0)  ==  '+')  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '-'  &&  s.charAt(0)  ==  '+')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '-'  &&  s.charAt(0)  ==  '+')  {	  if(s.charAt(0)    ==    '-'    ||    s.charAt(0)    ==    '+')    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
221	[BUG]  [BUGGY]  String  s  =  trimJsStringValue(rawJsString);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsStringValue(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsStringValue(rawJsString);	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
222	[BUG]  [BUGGY]  String  s  =  trimJsString(rawJsString.trim());  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsString(rawJsString.trim());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsString(rawJsString.trim());	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
223	[BUG]  [BUGGY]  String  s  =  trimJsStringNumber(rawJsString);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  String  s  =  trimJsStringNumber(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	String  s  =  trimJsStringNumber(rawJsString);	  String    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
224	[BUG]  [BUGGY]  s  =  trimJsStringValue(rawJsString);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsStringValue(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsStringValue(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
225	[BUG]  [BUGGY]  s  =  trimJsStringNumber(rawJsString);  [CE]  class,  interface,  or  enum  expected  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsStringNumber(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsStringNumber(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
226	[BUG]  [BUGGY]  s  =  trimJsStringNumberValue(rawJsString);  [CE]  class,  interface,  or  enum  expected  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsStringNumberValue(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsStringNumberValue(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
227	[BUG]  [BUGGY]  s  =  trimJsString(rawJsString.trim());  [CE]  class,  interface,  or  enum  expected  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsString(rawJsString.trim());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsString(rawJsString.trim());	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
228	[BUG]  [BUGGY]  s  =  trimJsNumber(rawJsString);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  s  =  trimJsNumber(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	s  =  trimJsNumber(rawJsString);	  s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
229	[BUG]  [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  s.length());  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  rawJsString.lastIndexOf('.',  s.length());  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  rawJsString.lastIndexOf('.',  s.length());	  int    nextSlot    =    rawJsString.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
230	[BUG]  [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  0  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    ||    s.charAt(1)    ==    '0'    &&    (s.charAt(1)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
231	[BUG]  [BUGGY]  if(s.length()  ==  16  ||  s.charAt(0)  ==  '0')  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  16  ||  s.charAt(0)  ==  '0')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  16  ||  s.charAt(0)  ==  '0')  {	  if(s.length()    ==    1    ||    s.charAt(0)    ==    '0')    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
232	[BUG]  [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(2)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(2)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
233	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf(JSC_PROPERTY_NAME_FN);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf(JSC_PROPERTY_NAME_FN);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf(JSC_PROPERTY_NAME_FN);	  int    nextSlot    =    s.lastIndexOf(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
234	[BUG]  [BUGGY]  Integer  s  =  trimJsString(rawJsString);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  Integer  s  =  trimJsString(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	Integer  s  =  trimJsString(rawJsString);	  Integer    s    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
235	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(1)  ==  '0'  &&  s.charAt(1)  ==  'x')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
236	[BUG]  [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s.charAt(2)  ==  'f')  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s.charAt(2)  ==  'f')  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.charAt(0)  ==  '0'  &&  s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'a'  &&  s.charAt(2)  ==  'a'  &&  s.charAt(2)  ==  'f')  {	  if(s.charAt(0)    ==    '0'    &&    s.charAt(1)    ==    'x')    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
237	[BUG]  [BUGGY]  if(s.length()  ==  3  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  3  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  3  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(3)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
238	[BUG]  [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  4  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(3)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	  if(s.length()    ==    2    &&    s.charAt(0)    ==    '0'    &&    (s.charAt(3)    ==    'x'    ||    s.charAt(1)    ==    'X'))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
239	[BUG]  [BUGGY]  int  nextSlot  =  trimJsString(s);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsString(s);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsString(s);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
240	[BUG]  [BUGGY]  int  nextSlot  =  trimJsBoolean(rawJsString);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsBoolean(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsBoolean(rawJsString);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
241	[BUG]  [BUGGY]  int  nextSlot  =  trimJsStringNumber(s);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsStringNumber(s);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsStringNumber(s);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
242	[BUG]  [BUGGY]  int  nextSlot  =  trimJsStringValue(rawJsString);  [CE]  illegal  start  of  expression  [FE]                                  AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  trimJsStringValue(rawJsString);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  trimJsStringValue(rawJsString);	  int    nextSlot    =    trimJsWhiteSpace(rawJsString);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
243	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf( "... ");  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf( "... ");  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf( "... ");	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
244	[BUG]  [BUGGY]  int  nextSlot  =  s.lastIndexOf( "- "  +  s);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }      [BUGGY]  int  nextSlot  =  s.lastIndexOf( "- "  +  s);  [BUGGY]      &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	int  nextSlot  =  s.lastIndexOf( "- "  +  s);	  int    nextSlot    =    s.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
