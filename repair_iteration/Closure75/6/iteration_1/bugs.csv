bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  if(s.length()!=  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }  [BUGGY]  if(s.length()!=  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()!=  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }  [BUGGY]  if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  ||  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }  [BUGGY]  if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2  &&  s.charAt(1)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]            AssertionFailedError  [CONTEXT]  static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }  [BUGGY]    [BUGGY]  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	  	if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  	non-compiled	[CE]  illegal  start  of  type	11	None	replace
6	[BUG]  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [CE]  [FE]    AssertionFailedError  [CONTEXT]  static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }  [BUGGY]  if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  [BUGGY]  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  >=  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {	if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  	non-compiled	[CE]  	11	None	replace
7	[BUG]  [BUGGY]  if(s.length()  ==  2)  {  [CE]  illegal  start  of  type  [FE]      AssertionFailedError  [CONTEXT]  static  Double  getStringNumberValue(String  rawJsString)  {  String  s  =  trimJsWhiteSpace(rawJsString);  if  (s.length()  ==  0)  {  return  0.0;  }  [BUGGY]  if(s.length()  ==  2)  {  [BUGGY]  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  try  {  return  Double.valueOf(Integer.parseInt(s.substring(2),  16));  }  catch  (NumberFormatException  e)  {  return  Double.NaN;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  getStringNumberValue  [RETURN_TYPE]  Double  String  rawJsString  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  NumberFormatException  e  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  nextSkipSlot  nextSlot  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	321	323	1	replace	if(s.length()  ==  2)  {	if  (s.length()  >  2  &&  s.charAt(0)  ==  '0'  &&  (s.charAt(1)  ==  'x'  ||  s.charAt(1)  ==  'X'))  {  	non-compiled	[CE]  illegal  start  of  type	11	None	replace
