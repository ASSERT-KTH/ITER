bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  (TernaryValue.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (TernaryValue.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (TernaryValue.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
2	[BUG]  [BUGGY]  return  (TreeValue.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (TreeValue.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (TreeValue.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
3	[BUG]  [BUGGY]  return  (StringValue.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (StringValue.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (StringValue.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
4	[BUG]  [BUGGY]  return  (Character.getType(c)  ==  Character.FALSE)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (Character.getType(c)  ==  Character.FALSE)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (Character.getType(c)  ==  Character.FALSE)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
5	[BUG]  [BUGGY]  return  (Character.getType(c)  ==  Character.FIELD_NAME)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (Character.getType(c)  ==  Character.FIELD_NAME)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (Character.getType(c)  ==  Character.FIELD_NAME)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
6	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]              AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]    [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	  	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
7	[BUG]  [BUGGY]  return  (Tree.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (Tree.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (Tree.getType(c)  ==  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
8	[BUG]  [BUGGY]  return  (Character.getType(c)  ==  Character.BLOCK)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (Character.getType(c)  ==  Character.BLOCK)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (Character.getType(c)  ==  Character.BLOCK)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
9	[BUG]  [BUGGY]  return  (Character.getType(c)  ==  Character.BOM)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (Character.getType(c)  ==  Character.BOM)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (Character.getType(c)  ==  Character.BOM)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
10	[BUG]  [BUGGY]  return  (Character.getType(c)!=  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (Character.getType(c)!=  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (Character.getType(c)!=  Character.SPACE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
11	[BUG]  [BUGGY]  return  (Character.getType(c)  ==  Character.VALUE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (Character.getType(c)  ==  Character.VALUE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (Character.getType(c)  ==  Character.VALUE_SEPARATOR)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
12	[BUG]  [BUGGY]  return  (Character.getType(c)  ==  Character.VALUE_STRING)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  case  '\n':  //  <LF>  case  '\r':  //  <CR>  case  '\t':  //  <TAB>  case  '\u00A0':  //  <NBSP>  case  '\u000C':  //  <FF>  case  '\u2028':  //  <LS>  case  '\u2029':  //  <PS>  case  '\uFEFF':  //  <BOM>  return  TernaryValue.TRUE;  default:  [BUGGY]  return  (Character.getType(c)  ==  Character.VALUE_STRING)?  TernaryValue.TRUE  :  TernaryValue.FALSE;  [BUGGY]  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  }  }  [CLASS]  NodeUtil  NumbericResultPredicate  BooleanResultPredicate  MayBeStringResultPredicate  VarCollector  MatchNameNode  MatchNodeType  MatchDeclaration  MatchNotFunction  MatchShallowStatement  [METHOD]  isStrWhiteSpaceChar  [RETURN_TYPE]  TernaryValue  int  c  [VARIABLES]  BooleanResultPredicate  BOOLEAN_RESULT_PREDICATE  Set  BUILTIN_FUNCTIONS_WITHOUT_SIDEEFFECTS  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  OBJECT_METHODS_WITHOUT_SIDEEFFECTS  REGEXP_METHODS  STRING_REGEXP_METHODS  NumbericResultPredicate  NUMBERIC_RESULT_PREDICATE  boolean  MayBeStringResultPredicate  MAY_BE_STRING_PREDICATE  String  JSC_PROPERTY_NAME_FN  childValue  name  rawJsString  s  value  Map  vars  int  c  end  nextSkipSlot  nextSlot  start  type  	projects/Closure75/src/com/google/javascript/jscomp/NodeUtil.java	0.5	387	388	1	replace	return  (Character.getType(c)  ==  Character.VALUE_STRING)?  TernaryValue.TRUE  :  TernaryValue.FALSE;	return  (Character.getType(c)  ==  Character.SPACE_SEPARATOR)  ?  TernaryValue.TRUE  :  TernaryValue.FALSE;  	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
