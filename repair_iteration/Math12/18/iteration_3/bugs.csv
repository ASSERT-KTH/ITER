bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian        =        Double.NEGATIVE_INFINITY;        this.nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	22	3	add
2	[BUG]  [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.NEGATIVE_INFINITY;        this.nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	22	3	add
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian        =        Double.NEGATIVE_INFINITY;        this.nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	22	3	add
4	[BUG]  [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.NEGATIVE_INFINITY;        this.nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	22	3	add
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian        =        Double.NEGATIVE_INFINITY;        this.nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	22	3	add
6	[BUG]  [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.NEGATIVE_INFINITY;        this.nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	22	3	add
7	[BUG]  [BUGGY]  scan.clear();  [CE]  cannot  find  symbol  scan  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  scan.clear();  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	scan.clear();	  random.clear();    	non-compiled	[CE]  cannot  find  symbol  scan	5	None	replace
8	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  getRange();  [CE]  cannot  find  symbol  [FE]        AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  getRange();  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  getRange();	  nextGaussian    =    Double.POSITIVE_INFINITY;    r    =    getRange();    nextGaussian    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol	19	None	replace
9	[BUG]  [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  variable  nextGaussian  is  already  defined  in  method  clear()  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.NEGATIVE_INFINITY;        double    nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  variable  nextGaussian  is  already  defined  in  method  clear()	9	None	add
10	[BUG]  [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  variable  nextGaussian  is  already  defined  in  method  clear()  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.NEGATIVE_INFINITY;        double    nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  variable  nextGaussian  is  already  defined  in  method  clear()	9	None	add
11	[BUG]  [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NaN;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  variable  nextGaussian  is  already  defined  in  method  clear()  [FE]        AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NaN;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.NEGATIVE_INFINITY;        double    nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NaN;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  variable  nextGaussian  is  already  defined  in  method  clear()	9	None	add
12	[BUG]  [BUGGY]  r  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  r  [FE]        AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  r  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	r  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    r    =    getRange();    nextGaussian    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  r	21	None	replace
13	[BUG]  [BUGGY]  y  =  getRandom();  [CE]  cannot  find  symbol  y  [FE]              AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  y  =  getRandom();  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	y  =  getRandom();	  x    =    getRandom();    	non-compiled	[CE]  cannot  find  symbol  y	20	None	replace
14	[BUG]  [BUGGY]  nextGaussian  =  getRandom()  +  1;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  getRandom()  +  1;  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  getRandom()  +  1;	  nextGaussian    =    getRandom();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
15	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.alpha  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  alpha  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.alpha  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.NEGATIVE_INFINITY;  this.alpha  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian    =    Double.NEGATIVE_INFINITY;    this.alpha    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  alpha	11	None	replace
16	[BUG]  [BUGGY]  this.alpha  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  alpha  [FE]              AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  this.alpha  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	this.alpha  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian    =    Double.NEGATIVE_INFINITY;    this.alpha    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  alpha	11	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian        =        Double.NEGATIVE_INFINITY;        nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	7	3	add
18	[BUG]  [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.NEGATIVE_INFINITY;        nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	7	3	add
19	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian        =        Double.NEGATIVE_INFINITY;        nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	7	3	add
20	[BUG]  [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.NEGATIVE_INFINITY;        nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	7	3	add
21	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian        =        Double.POSITIVE_INFINITY;        nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	2	3	add
22	[BUG]  [BUGGY]  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.POSITIVE_INFINITY;        nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	2	3	add
23	[BUG]  [BUGGY]  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  }  [CE]  <identifier>  expected  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  }  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.POSITIVE_INFINITY;        nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  }	  	non-compiled	[CE]  <identifier>  expected	2	None	add
24	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.NEGATIVE_INFINITY    +    1;    nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	16	3	add
25	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY    +    1;    nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	16	3	add
26	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  double  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.NEGATIVE_INFINITY    +    1;    double  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	16	1	add
27	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  double  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  double  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY    +    1;    double  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	16	1	add
28	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  nextGaussian  =  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.NEGATIVE_INFINITY    +    1;    nextGaussian  =  Double.NEGATIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	16	3	add
29	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  nextGaussian  =  Double.NEGATIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  nextGaussian  =  Double.NEGATIVE_INFINITY  +  2;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY    +    1;    nextGaussian  =  Double.NEGATIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	16	3	add
30	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	23	1	replace
31	[BUG]  [BUGGY]  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	23	1	replace
32	[BUG]  [BUGGY]  this.nextGaussian  =  new  BitsStreamGenerator(this.alpha);  [CE]  cannot  find  symbol  alpha  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  this.nextGaussian  =  new  BitsStreamGenerator(this.alpha);  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	this.nextGaussian  =  new  BitsStreamGenerator(this.alpha);	  this.nextGaussian    =    new    BitsStreamGenerator();    	non-compiled	[CE]  cannot  find  symbol  alpha	26	None	replace
33	[BUG]  [BUGGY]  nextGaussian  =  new  BitsStreamGenerator(nextGaussian);  [CE]  BitsStreamGenerator  is  abstract;  cannot  be  instantiated  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  new  BitsStreamGenerator(nextGaussian);  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  new  BitsStreamGenerator(nextGaussian);	  r    =    new    BitsStreamGenerator(nextGaussian);    	non-compiled	[CE]  BitsStreamGenerator  is  abstract;  cannot  be  instantiated	15	None	replace
34	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.POSITIVE_INFINITY    +    1;    nextGaussian  =  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	13	3	add
35	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.POSITIVE_INFINITY    +    1;    nextGaussian  =  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	13	3	add
36	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  double  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.POSITIVE_INFINITY    +    1;    double  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	13	1	add
37	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  double  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  double  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.POSITIVE_INFINITY    +    1;    double  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;	  	compilable	  [FE]  AssertionError  	13	1	add
38	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  nextGaussian  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.POSITIVE_INFINITY    +    1;    nextGaussian  =  Double.POSITIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	13	3	add
39	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  nextGaussian  =  Double.POSITIVE_INFINITY  +  2;  [FE]  AssertionError  [FE]        AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  nextGaussian  =  Double.POSITIVE_INFINITY  +  2;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.POSITIVE_INFINITY    +    1;    nextGaussian  =  Double.POSITIVE_INFINITY  +  2;	  	compilable	  [FE]  AssertionError  	13	3	add
40	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  alpha  [FE]          AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;	  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian    =    Double.POSITIVE_INFINITY;    this.alpha    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  alpha	4	None	replace
41	[BUG]  [BUGGY]  this.alpha  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  alpha  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  this.alpha  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	this.alpha  =  Double.POSITIVE_INFINITY;	  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian    =    Double.POSITIVE_INFINITY;    this.alpha    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  alpha	4	None	replace
42	[BUG]  [BUGGY]  r  =  getRawSlope();  nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  r  [FE]        AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  r  =  getRawSlope();  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	r  =  getRawSlope();  nextGaussian  =  Double.POSITIVE_INFINITY;	  nextGaussian    =    Double.POSITIVE_INFINITY;    r    =    getRawSlope();    nextGaussian    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  r	25	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian  =  Double.POSITIVE_INFINITY  /  1;	  nextGaussian    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	14	1	replace
44	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  /  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.POSITIVE_INFINITY  /  1;	  nextGaussian    =    Double.POSITIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	14	1	replace
45	[BUG]  [BUGGY]  nextGaussian  =  alpha;  [CE]  cannot  find  symbol  alpha  [FE]                AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  alpha;  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  alpha;	  nextGaussian    =    null;    	non-compiled	[CE]  cannot  find  symbol  alpha	1	None	replace
46	[BUG]  [BUGGY]  nextGaussian  =  new  BitsStreamGenerator(this.random);  [CE]  cannot  find  symbol  random  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  new  BitsStreamGenerator(this.random);  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  new  BitsStreamGenerator(this.random);	  nextGaussian    =    new    BitsStreamGenerator();    	non-compiled	[CE]  cannot  find  symbol  random	6	None	replace
47	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  random  =  getRawSlope();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  random  [FE]          AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  random  =  getRawSlope();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.NEGATIVE_INFINITY;  random  =  getRawSlope();  nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    r    =    getRawSlope();    nextGaussian    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  random	24	None	replace
48	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  r  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  r  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  r  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.POSITIVE_INFINITY    +    1;    r  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  r	13	None	add
49	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  /  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian  =  Double.NEGATIVE_INFINITY  /  1;	  nextGaussian    =    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	17	1	replace
50	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  /  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  /  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.NEGATIVE_INFINITY  /  1;	  nextGaussian    =    Double.NEGATIVE_INFINITY    +    1;    	compilable	  [FE]  AssertionError  	17	1	replace
51	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  random  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  random  [FE]        AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  random  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.POSITIVE_INFINITY;  random  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY;	  nextGaussian    =    Double.POSITIVE_INFINITY;    r    =    getRange();    nextGaussian    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  random	19	None	replace
52	[BUG]  [BUGGY]  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  secondGaussian  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  secondGaussian  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  secondGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.POSITIVE_INFINITY;        nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  secondGaussian  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  secondGaussian	2	None	add
53	[BUG]  [BUGGY]  r  =  new  BitsStreamGenerator(alpha);  [CE]  cannot  find  symbol  r  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  r  =  new  BitsStreamGenerator(alpha);  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	r  =  new  BitsStreamGenerator(alpha);	  r    =    new    BitsStreamGenerator(nextGaussian);    	non-compiled	[CE]  cannot  find  symbol  r	15	None	replace
54	[BUG]  [BUGGY]  nextGaussian  =  new  BitsStreamGenerator(alpha);  [CE]  cannot  find  symbol  alpha  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  new  BitsStreamGenerator(alpha);  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  new  BitsStreamGenerator(alpha);	  nextGaussian    =    new    BitsStreamGenerator();    	non-compiled	[CE]  cannot  find  symbol  alpha	6	None	replace
55	[BUG]  [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  variable  nextGaussian  is  already  defined  in  method  clear()  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian        =        Double.NEGATIVE_INFINITY;        double    nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  variable  nextGaussian  is  already  defined  in  method  clear()	9	None	add
56	[BUG]  [BUGGY]  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  alpha  [FE]          AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;	  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian    =    Double.POSITIVE_INFINITY;    this.alpha    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  alpha	4	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	double  nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    double    nextGaussian    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	10	3	replace
58	[BUG]  [BUGGY]  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	double  nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    double    nextGaussian    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	10	3	replace
59	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  random  =  getRawSlope();  nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  random  [FE]        AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  random  =  getRawSlope();  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.POSITIVE_INFINITY;  random  =  getRawSlope();  nextGaussian  =  Double.POSITIVE_INFINITY;	  nextGaussian    =    Double.POSITIVE_INFINITY;    r    =    getRawSlope();    nextGaussian    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  random	25	None	replace
60	[BUG]  [BUGGY]  nextGaussian  =  getRandom().nextGaussian;  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  getRandom().nextGaussian;  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  getRandom().nextGaussian;	  nextGaussian    =    getRandom();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
61	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  r  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  cannot  find  symbol  r  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  r  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY    +    1;    r  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;	  	non-compiled	[CE]  cannot  find  symbol  r	16	None	add
62	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian    =    Double.NEGATIVE_INFINITY;    this.alpha    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	11	1	replace
63	[BUG]  [BUGGY]  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	this.nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian    =    Double.NEGATIVE_INFINITY;    this.alpha    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	11	1	replace
64	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  random  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  random  [FE]        AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  random  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.NEGATIVE_INFINITY;  random  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    r    =    getRange();    nextGaussian    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  random	21	None	replace
65	[BUG]  [BUGGY]  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  alpha  [FE]          AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;	  nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian    =    Double.POSITIVE_INFINITY;    this.alpha    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  alpha	4	None	replace
66	[BUG]  [BUGGY]  nextGaussian  =  getRandom().nextGaussian();  [CE]  cannot  find  symbol  [FE]              AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  nextGaussian  =  getRandom().nextGaussian();  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  getRandom().nextGaussian();	  nextGaussian    =    getRandom();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
67	[BUG]  [BUGGY]  if(this.nextGaussian!=  null)  {  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  }  [CE]  incomparable  types:  double  and  <null>  [FE]    AssertionError    [CONTEXT]      public  void  clear()  {      [BUGGY]  if(this.nextGaussian!=  null)  {  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  }  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	if(this.nextGaussian!=  null)  {  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  }	  nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  incomparable  types:  double  and  <null>	23	None	replace
68	[BUG]  [BUGGY]  r  =  getRawSlope();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  r  [FE]          AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  r  =  getRawSlope();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	r  =  getRawSlope();  nextGaussian  =  Double.NEGATIVE_INFINITY;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    r    =    getRawSlope();    nextGaussian    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  r	24	None	replace
69	[BUG]  [BUGGY]  this.nextGaussian  =  new  BitsStreamGenerator(this.random);  [CE]  cannot  find  symbol  random  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  this.nextGaussian  =  new  BitsStreamGenerator(this.random);  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	this.nextGaussian  =  new  BitsStreamGenerator(this.random);	  this.nextGaussian    =    new    BitsStreamGenerator();    	non-compiled	[CE]  cannot  find  symbol  random	26	None	replace
70	[BUG]  [BUGGY]  r  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  r  [FE]        AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  r  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	r  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY;	  nextGaussian    =    Double.POSITIVE_INFINITY;    r    =    getRange();    nextGaussian    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  cannot  find  symbol  r	19	None	replace
71	[BUG]  [BUGGY]  r  =  new  BitsStreamGenerator(lastGaussian);  [CE]  cannot  find  symbol  r  [FE]            AssertionError      [CONTEXT]      public  void  clear()  {      [BUGGY]  r  =  new  BitsStreamGenerator(lastGaussian);  [BUGGY]      nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	r  =  new  BitsStreamGenerator(lastGaussian);	  r    =    new    BitsStreamGenerator(nextGaussian);    	non-compiled	[CE]  cannot  find  symbol  r	15	None	replace
