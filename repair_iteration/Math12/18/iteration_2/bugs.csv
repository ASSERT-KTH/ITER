bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  nextGaussian  =  null;  [CE]  incompatible  types  [FE]            AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  null;  [BUGGY]    nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  null;	      r.clear();    nextGaussian    =    null;    	non-compiled	[CE]  incompatible  types	3	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	4	3	add
3	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	4	3	add
4	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  alpha  [FE]      AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.POSITIVE_INFINITY;    nextGaussian  =  Double.POSITIVE_INFINITY;  this.alpha  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  alpha	4	None	add
5	[BUG]  [BUGGY]  random.clear();  [CE]  cannot  find  symbol  random  [FE]        AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  random.clear();  [BUGGY]    nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	random.clear();	      r.clear();    	non-compiled	[CE]  cannot  find  symbol  random	1	None	replace
6	[BUG]  [BUGGY]  nextGaussian  =  new  BitsStreamGenerator();  [CE]  BitsStreamGenerator  is  abstract;  cannot  be  instantiated  [FE]        AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  new  BitsStreamGenerator();  [BUGGY]    nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  new  BitsStreamGenerator();	      r    =    new    BitsStreamGenerator();    	non-compiled	[CE]  BitsStreamGenerator  is  abstract;  cannot  be  instantiated	6	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
8	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
9	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	1	add
10	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  double  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY;    double  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	1	add
11	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.alpha  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  alpha  [FE]        AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.alpha  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY;    nextGaussian  =  Double.NEGATIVE_INFINITY;  this.alpha  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  alpha	8	None	add
12	[BUG]  [BUGGY]  nextGaussian  =  getRandom();  [CE]  cannot  find  symbol  [FE]          AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  getRandom();  [BUGGY]    nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  getRandom();	      r    =    getRandom();    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian  =  Double.POSITIVE_INFINITY  +  1;	  nextGaussian    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	5	1	replace
14	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.POSITIVE_INFINITY  +  1;	  nextGaussian    =    Double.POSITIVE_INFINITY;    	compilable	  [FE]  AssertionError  	5	1	replace
15	[BUG]  [BUGGY]  r  =  new  BitsStreamGenerator(nextGaussian);  [CE]  cannot  find  symbol  r  [FE]        AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  r  =  new  BitsStreamGenerator(nextGaussian);  [BUGGY]    nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	r  =  new  BitsStreamGenerator(nextGaussian);	      r    =    new    BitsStreamGenerator();    	non-compiled	[CE]  cannot  find  symbol  r	6	None	replace
16	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	9	1	replace
17	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    	compilable	  [FE]  AssertionError  	9	1	replace
18	[BUG]  [BUGGY]  alpha.clear();  nextGaussian  =  Double.NaN;  [CE]  cannot  find  symbol  alpha  [FE]          AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  alpha.clear();  nextGaussian  =  Double.NaN;  [BUGGY]    nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	alpha.clear();  nextGaussian  =  Double.NaN;	      r.clear();    nextGaussian    =    Double.NaN;    	non-compiled	[CE]  cannot  find  symbol  alpha	2	None	replace
19	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  r  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  r  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  r  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.POSITIVE_INFINITY;    r  =  getRange();  nextGaussian  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  r	4	None	add
20	[BUG]  [BUGGY]  x  =  getRandom();  [CE]  cannot  find  symbol  x  [FE]          AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  x  =  getRandom();  [BUGGY]    nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	x  =  getRandom();	      r    =    getRandom();    	non-compiled	[CE]  cannot  find  symbol  x	7	None	replace
21	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  r  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  r  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  r  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY;    r  =  getRange();  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  r	8	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	add	nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
23	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  this.nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY;    this.nextGaussian  =  Double.NEGATIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
24	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  r  =  getRawSlope();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [CE]  cannot  find  symbol  r  [FE]      AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY;  r  =  getRawSlope();  nextGaussian  =  Double.NEGATIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.NEGATIVE_INFINITY;    r  =  getRawSlope();  nextGaussian  =  Double.NEGATIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  r	8	None	add
25	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  r  =  getRawSlope();  nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  cannot  find  symbol  r  [FE]    AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY;  r  =  getRawSlope();  nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]    }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	nextGaussian    =    Double.POSITIVE_INFINITY;    r  =  getRawSlope();  nextGaussian  =  Double.POSITIVE_INFINITY;	  	non-compiled	[CE]  cannot  find  symbol  r	4	None	add
26	[BUG]  [BUGGY]  this.nextGaussian  =  new  BitsStreamGenerator();  [CE]  BitsStreamGenerator  is  abstract;  cannot  be  instantiated  [FE]        AssertionError    [CONTEXT]    public  void  clear()  {    [BUGGY]  this.nextGaussian  =  new  BitsStreamGenerator();  [BUGGY]    nextGaussian  =  Double.NaN;  }  [CLASS]  BitsStreamGenerator  [METHOD]  clear  [RETURN_TYPE]  void  [VARIABLES]  double  alpha  nextGaussian  r  random  x  y  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	167	167	3	replace	this.nextGaussian  =  new  BitsStreamGenerator();	      r    =    new    BitsStreamGenerator();    	non-compiled	[CE]  BitsStreamGenerator  is  abstract;  cannot  be  instantiated	6	None	replace
