projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111if(nextGaussian!=null){if(Double.isNaN(x)||Double.isNaN(y)){random=Math.pow(2*FastMath.PI);}
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111if(nextGaussian!=null){if(Double.isNaN(x)||Double.isNaN(y)){random=Math.pow(0,alpha);}
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111random=FastMath.cos(x);nextGaussian=Double.NaN;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111random=nextGaussian;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111random=x;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111random=Double.NaN;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111doublerandom=nextGaussian*FastMath.cos(x);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111doublerandom=nextGaussian*FastMath.sin(x);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111doublerandom=nextGaussian*FastMath.cos(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111doublenextGaussian=nextGaussian*FastMath.sin(x);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111doublenextGaussian=nextGaussian*FastMath.cos(x);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111doublenextGaussian=nextGaussian*FastMath.log(y);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java111random=nextGaussian+1;
