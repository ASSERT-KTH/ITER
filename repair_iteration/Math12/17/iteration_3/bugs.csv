bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  super(nextGaussian,  Double.NaN);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  super(nextGaussian,  Double.NaN);  [BUGGY]        [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	super(nextGaussian,  Double.NaN);	  super(nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  super(nextGaussian,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  super(nextGaussian,  Double.POSITIVE_INFINITY);  [BUGGY]        [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	super(nextGaussian,  Double.POSITIVE_INFINITY);	  super(nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  this(Double.NaN,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(Double.NaN,  Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(Double.NaN,  Double.POSITIVE_INFINITY);	  this(Double.NaN,    nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  this(Double.NaN,  nextGaussian,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(Double.NaN,  nextGaussian,  1);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(Double.NaN,  nextGaussian,  1);	  this(Double.NaN,    nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]          nextGaussian    =    Double.NaN;    nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	add	                nextGaussian        =        Double.NaN;        nextGaussian    =    Double.NaN;    nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	3	add
6	[BUG]  [BUGGY]          nextGaussian    =    Double.NaN;    nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]          nextGaussian    =    Double.NaN;    nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	                nextGaussian        =        Double.NaN;        nextGaussian    =    Double.NaN;    nextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;	  	compilable	  [FE]  AssertionError  	5	3	add
7	[BUG]  [BUGGY]          nextGaussian    =    Double.NaN;    nextGaussian  =  Double.NaN;  NextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  [CE]  cannot  find  symbol  NextGaussian  [FE]      AssertionError    [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]          nextGaussian    =    Double.NaN;    nextGaussian  =  Double.NaN;  NextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	                nextGaussian        =        Double.NaN;        nextGaussian    =    Double.NaN;    NextGaussian  =  Double.NaN;  nextGaussian  =  Double.NaN;	  	non-compiled	[CE]  cannot  find  symbol  NextGaussian	5	None	add
8	[BUG]  [BUGGY]  super().nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  super().nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]        [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	super().nextGaussian  =  Double.POSITIVE_INFINITY  +  1;	  super().nextGaussian    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  this(nextGaussian,  Double.NaN,  2);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(nextGaussian,  Double.NaN,  2);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(nextGaussian,  Double.NaN,  2);	  this(nextGaussian,    Double.NaN,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  this(Double.NaN,  Double.NaN,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(Double.NaN,  Double.NaN,  1);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(Double.NaN,  Double.NaN,  1);	  this(nextGaussian,    Double.NaN,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]          this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	add	                this.nextGaussian        =        Double.POSITIVE_INFINITY;        this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
12	[BUG]  [BUGGY]          this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]    AssertionError    [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]          this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	                this.nextGaussian        =        Double.POSITIVE_INFINITY;        this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
13	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]          this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.NaN;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	add	                this.nextGaussian        =        Double.POSITIVE_INFINITY;        this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.NaN;  this.nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
14	[BUG]  [BUGGY]          this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.NaN;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [FE]  AssertionError  [FE]      AssertionError    [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]          this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.POSITIVE_INFINITY;  this.nextGaussian  =  Double.NaN;  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	                this.nextGaussian        =        Double.POSITIVE_INFINITY;        this.nextGaussian    =    Double.POSITIVE_INFINITY;    this.nextGaussian  =  Double.NaN;  this.nextGaussian  =  Double.POSITIVE_INFINITY;	  	compilable	  [FE]  AssertionError  	8	3	add
15	[BUG]  [BUGGY]  this(Double.POSITIVE_INFINITY,  nextGaussian);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(Double.POSITIVE_INFINITY,  nextGaussian);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(Double.POSITIVE_INFINITY,  nextGaussian);	  this(nextGaussian,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  this(nextGaussian,  Double.POSITIVE_INFINITY,  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(nextGaussian,  Double.POSITIVE_INFINITY,  1);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(nextGaussian,  Double.POSITIVE_INFINITY,  1);	  this(nextGaussian,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	nextGaussian  =  Double.NEGATIVE_INFINITY  +  1;	  nextGaussian    =    Double.NEGATIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
18	[BUG]  [BUGGY]  this(nextGaussian,  Double.NEGATIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(nextGaussian,  Double.NEGATIVE_INFINITY);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(nextGaussian,  Double.NEGATIVE_INFINITY);	  this(nextGaussian,    nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  this(nextGaussian,  Double.POSITIVE_INFINITY,  Double.NaN);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(nextGaussian,  Double.POSITIVE_INFINITY,  Double.NaN);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(nextGaussian,  Double.POSITIVE_INFINITY,  Double.NaN);	  this(nextGaussian,    Double.POSITIVE_INFINITY);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  this(nextGaussian,  Double.NaN,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(nextGaussian,  Double.NaN,  0);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(nextGaussian,  Double.NaN,  0);	  this(nextGaussian,    Double.NaN,    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	super();  this.nextGaussian  =  Double.POSITIVE_INFINITY;	          this.nextGaussian    =    Double.POSITIVE_INFINITY;    super();    this.nextGaussian    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  nextGaussian  =  Double.POSITIVE_INFINITY  +  1;  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	nextGaussian  =  Double.POSITIVE_INFINITY  +  1;	  nextGaussian    =    Double.POSITIVE_INFINITY;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  super(nextGaussian,  nextGaussian);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  super(nextGaussian,  nextGaussian);  [BUGGY]        [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	super(nextGaussian,  nextGaussian);	  super(nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
24	[BUG]  [BUGGY]  this(Double.NaN,  nextGaussian,  Double.POSITIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(Double.NaN,  nextGaussian,  Double.POSITIVE_INFINITY);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(Double.NaN,  nextGaussian,  Double.POSITIVE_INFINITY);	  this(Double.NaN,    nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  this(Double.NaN,  nextGaussian,  Double.NEGATIVE_INFINITY);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      public  BitsStreamGenerator()  {  nextGaussian  =  Double.NaN;      [BUGGY]  this(Double.NaN,  nextGaussian,  Double.NEGATIVE_INFINITY);  [BUGGY]      }  [CLASS]  BitsStreamGenerator  [METHOD]  <init>  [RETURN_TYPE]  BitsStreamGenerator()  [VARIABLES]  double  nextGaussian  boolean  	projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java	0.22360679774997896	39	39	3	replace	this(Double.NaN,  nextGaussian,  Double.NEGATIVE_INFINITY);	  this(Double.NaN,    nextGaussian);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
