projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}else{
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian!=Double.NaN){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian==Double.NaN){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(Double.isNaN(nextGaussian)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian!=null){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);r=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=FastMath.sin(x);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);random=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.sin(r);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);r=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian==Double.PI){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian==null){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(x);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(Double.isNaN(x)||Double.isNaN(nextGaussian)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(Double.isNaN(x)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(Double.isNaN(nextGaussian)||Double.isNaN(nextGaussian)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);random=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);random=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);random=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=nextGaussian*FastMath.sin(x);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=nextGaussian*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian!=null&&nextGaussian.equals(r)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);random=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=x*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.sin(nextGaussian);r=random*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109random=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(x);random=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);random=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);r=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(x);random=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109random=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=nextGaussian*FastMath.sin(r);random=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.cos(alpha);random=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.cos(alpha);r=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=random*FastMath.sin(x);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=x*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=x*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);r=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=FastMath.sin(r);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.sin(alpha);r=r*FastMath.sin(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(random);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(Double.isNaN(y)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);r=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=random*FastMath.sin(r);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=r*FastMath.sin(x);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=random*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109doublenextGaussian=x*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(Double.isNaN(random)||Double.isNaN(nextGaussian)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(y);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.sin(alpha);r=random*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=x*FastMath.sin(alpha);r=y*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=nextGaussian*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109random=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(x);random=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.sin(alpha);nextGaussian=random*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.cos(alpha);nextGaussian=random*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(r!=null&&nextGaussian.equals(nextGaussian)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);random=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);r=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.sin(alpha);nextGaussian=random*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian==Double.NaN||nextGaussian==Double.PI){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(x);random=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(Double.isNaN(nextGaussian)&&Double.isNaN(nextGaussian)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);random=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=x*FastMath.sin(r);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian==Double.NEGATIVE){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian!=null&&random.equals(r)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);random=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=FastMath.sin(y);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(Double.isNaN(y)||Double.isNaN(nextGaussian)){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);nextGaussian=r*FastMath.cos(nextGaussian);nextGaussian=r*FastMath.sin(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109}elseif(nextGaussian==Double.NEGATIVE_INFINITY){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109random=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.cos(alpha);nextGaussian=r*FastMath.sin(alpha);nextGaussian=r*FastMath.cos(alpha);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java109nextGaussian=random*FastMath.sin(nextGaussian);r=r*FastMath.sin(nextGaussian);
