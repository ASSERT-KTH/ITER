projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37this(nextGaussian,Double.NaN);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37this(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37DoublenextGaussian=Double.NaN;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37publicBitsStreamGenerator(){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37super();
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37publicBitsStreamGenerator(doublenextGaussian){
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37super();this.nextGaussian=Double.NaN;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37super();nextGaussian=Double.NaN;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37publicBitsStreamGenerator(doublenextGaussian){timeout
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37this(nextGaussian,null);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37super(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37nextGaussian=Double.NaN;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37timeout
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37publicBitsStreamGenerator(doublenextGaussian){this(nextGaussian,Double.NaN);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37publicBitsStreamGenerator(doublenextGaussian){this(nextGaussian,null);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37publicBitsStreamGenerator(doublenextGaussian){super();
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37this.nextGaussian=Double.NaN;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37this(Double.NaN,nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37this(nextGaussian,Double.NaN,1);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37DoublenextGaussian=Double.POSITIVE_INFINITY;
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37if(Double.isNaN(nextGaussian)){super();this.nextGaussian=Double.NaN;}
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37this(Double.NaN);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37if(nextGaussian==Double.NaN){super();nextGaussian=Double.NaN;}
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37publicBitsStreamGenerator(doublenextGaussian){super(nextGaussian);
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37if(nextGaussian==Double.NaN){super();this.nextGaussian=Double.NaN;}
projects/Math12/src/main/java/org/apache/commons/math3/random/BitsStreamGenerator.java37publicBitsStreamGenerator(doublenextGaussian){this.nextGaussian=Double.NaN;
