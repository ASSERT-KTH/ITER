bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getTree();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getTree();  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getTree();	  Strategy    strategy=    strategies[i].cloneTree();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
2	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].cloneTree(cal);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].cloneTree(cal);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].cloneTree(cal);	  Strategy    strategy=    strategies[i].cloneTree();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
3	[BUG]  [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i]);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i]);	  int    i    =    parsePattern.matcher(source.substring(0,    i    +    1));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
4	[BUG]  [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i++]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i++]);	  int    i    =    parsePattern.matcher(source.substring(0,    i    +    1));    	non-compiled	[CE]  <identifier>  expected	6	None	replace
5	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1)+  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1)+  1);	  int    i    =    parsePattern.getIndex(source.substring(pos.index    +    1));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
6	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1),  offset);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1),  offset);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1),  offset);	  int    i    =    parsePattern.getIndex(source.substring(pos.index    +    1));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
7	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1),  strategies[i]);  [CE]  <identifier>  expected  [FE]                          AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1),  strategies[i]);	  int    i    =    parsePattern.getIndex(source.substring(pos.index    +    1));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
8	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getTime();  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getTime();  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getTime();	  Strategy    strategy=    strategies[i].getValue();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
9	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].setValue(cal.getTime());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].setValue(cal.getTime());  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].setValue(cal.getTime());	  Strategy    strategy=    strategies[i].getValue();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
10	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getShortValue();  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getShortValue();  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getShortValue();	  Strategy    strategy=    strategies[i].getValue();    	non-compiled	[CE]  <identifier>  expected	26	None	replace
11	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i  +  1),  offset);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i  +  1),  offset);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(i  +  1),  offset);	  int    i    =    parsePattern.parseIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
12	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos  +  1));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos  +  1));	  int    i    =    parsePattern.parseIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
13	[BUG]  [BUGGY]  int  i  =  matcher.matcher(source.substring(0,  i  +  1));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  matcher.matcher(source.substring(0,  i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  matcher.matcher(source.substring(0,  i  +  1));	  int    i    =    matcher.matcher(source.substring(0,    i));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
14	[BUG]  [BUGGY]  int  i  =  matcher.matcher(source.substring(0,  i)+  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  matcher.matcher(source.substring(0,  i)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  matcher.matcher(source.substring(0,  i)+  1);	  int    i    =    matcher.matcher(source.substring(0,    i));    	non-compiled	[CE]  <identifier>  expected	62	None	replace
15	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  -  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  -  1;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  -  1;	  Strategy    strategy=    strategies[i++]    <    <    1;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
16	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  <  <  4;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  <  <  4;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  <  <  4;	  Strategy    strategy=    strategies[i++]    <    <    1;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
17	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  <  <  2;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  <  <  2;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  <  <  2;	  Strategy    strategy=    strategies[i++]    <    <    1;    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
18	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  |  0xff  +  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  |  0xff  +  1;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  |  0xff  +  1;	  Strategy    strategy=    strategies[i++]    &    0xff    +    1;    	non-compiled	[CE]  <identifier>  expected	46	None	replace
19	[BUG]  [BUGGY]  int  i  =  matcher.matcher(source.substring(0,  i),  strategy);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  matcher.matcher(source.substring(0,  i),  strategy);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  matcher.matcher(source.substring(0,  i),  strategy);	  int    i    =    parsePattern.matcher(source.substring(0,    i),    strategy);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
20	[BUG]  [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategy);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategy);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategy);	  int    i    =    parsePattern.matcher(source.substring(0,    i),    strategy);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
21	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  strategies[i]));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  strategies[i]));  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  strategies[i]));	  Matcher    matcher    =    parsePattern.matcher(source.substring(i,    strategies[i]));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
22	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i,  strategies[0]));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i,  strategies[0]));  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i,  strategies[0]));	  Matcher    matcher    =    parsePattern.matcher(source.substring(i,    strategies[i]));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
23	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i  +  1),  strategies[i]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(i  +  1),  strategies[i]);	  int    i    =    parsePattern.getIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
24	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i  +  1)+  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i  +  1)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(i  +  1)+  1);	  int    i    =    parsePattern.getIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
25	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i  +  1),  strategies[i++]);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(i  +  1),  strategies[i++]);	  int    i    =    parsePattern.getIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
26	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.length()));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.length()));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.length()));	  int    i    =    parsePattern.getIndex(source.substring(pos.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
27	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.length()  +  1));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.length()  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.length()  +  1));	  int    i    =    parsePattern.getIndex(source.substring(pos.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
28	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  pos.length()));  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  pos.length()));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(0,  pos.length()));	  int    i    =    parsePattern.getIndex(source.substring(pos.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
29	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  pos));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  pos));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(0,  pos));	  int    i    =    parsePattern.parseIndex(source.substring(i,    pos));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
30	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos,  i));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos,  i));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos,  i));	  int    i    =    parsePattern.parseIndex(source.substring(i,    pos));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
31	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos,  i  +  1));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos,  i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos,  i  +  1));	  int    i    =    parsePattern.parseIndex(source.substring(i,    pos));    	non-compiled	[CE]  <identifier>  expected	47	None	replace
32	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i  +  1),  parsePattern);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i  +  1),  parsePattern);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(i  +  1),  parsePattern);	  Tag    tz    =    matcher.matcher(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	33	None	replace
33	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i  +  1),  locale);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i  +  1),  locale);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(i  +  1),  locale);	  Tag    tz    =    matcher.matcher(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	33	None	replace
34	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  |  2;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  |  2;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  |  2;	  Strategy    strategy=    strategies[i++]    &    2;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
35	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  i  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(0,  i  +  1));	  int    i    =    parsePattern.getIndex(source.substring(0,    i));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
36	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  i)+  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  i)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(0,  i)+  1);	  int    i    =    parsePattern.getIndex(source.substring(0,    i));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
37	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(0,  i));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(0,  i));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(0,  i));	  Tag    tz    =    parsePattern.matcher(source.substring(0,    i));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
38	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i),  strategies[i]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(0,  i),  strategies[i]);	  Tag    tz    =    parsePattern.matcher(source.substring(0,    i));    	non-compiled	[CE]  <identifier>  expected	23	None	replace
39	[BUG]  [BUGGY]  pos.setIndex(i  +  2);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  pos.setIndex(i  +  2);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	pos.setIndex(i  +  2);	  pos.setIndex(i    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
40	[BUG]  [BUGGY]  Strategy  strategy=  strategies[pos  +  i];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[pos  +  i];  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[pos  +  i];	  Strategy    strategy=    strategies[pos    +    1];    	non-compiled	[CE]  <identifier>  expected	67	None	replace
41	[BUG]  [BUGGY]  Strategy  strategy=  strategies[pos  +  1]  &  0xFFFF;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[pos  +  1]  &  0xFFFF;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[pos  +  1]  &  0xFFFF;	  Strategy    strategy=    strategies[pos    +    1];    	non-compiled	[CE]  <identifier>  expected	67	None	replace
42	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(timeZone,  locale,  strategies[i]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(timeZone,  locale,  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(timeZone,  locale,  strategies[i]);	  cal    =    Calendar.getInstance(timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
43	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategies[i++]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(timeZone,  strategies[i++]);	  cal    =    Calendar.getInstance(timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
44	[BUG]  [BUGGY]  cal.setIndex(i++,  strategies[i]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal.setIndex(i++,  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal.setIndex(i++,  strategies[i]);	  cal.setIndex(i++);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
45	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  +  1]  |  0xFFFF;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  +  1]  |  0xFFFF;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  +  1]  |  0xFFFF;	  Strategy    strategy=    strategies[i    +    1]    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
46	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  +  1]  &  0xFFF;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  +  1]  &  0xFFF;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  +  1]  &  0xFFF;	  Strategy    strategy=    strategies[i    +    1]    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
47	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  *  1]  &  0xFFFF;  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  *  1]  &  0xFFFF;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  *  1]  &  0xFFFF;	  Strategy    strategy=    strategies[i    +    1]    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
48	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(i  +  1),  strategy);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(i  +  1),  strategy);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(i  +  1),  strategy);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    locale);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
49	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos  +  1),  locale);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos  +  1),  locale);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(pos  +  1),  locale);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    locale);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
50	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(pos  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(pos  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(pos  +  1));	  Tag    tz    =    parsePattern.matcher(source.substring(pos    +    1));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
51	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i]);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i]);	  Tag    tz    =    parsePattern.matcher(source.substring(pos    +    1));    	non-compiled	[CE]  ';'  expected	65	None	replace
52	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(i  +  1),  strategies[0]);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(i  +  1),  strategies[0]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(i  +  1),  strategies[0]);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i]);    	non-compiled	[CE]  ';'  expected	34	None	replace
53	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i  +  1),  strategies[i]);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(i  +  1),  strategies[i]);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i]);    	non-compiled	[CE]  ';'  expected	34	None	replace
54	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getStrategy(cal);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getStrategy(cal);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getStrategy(cal);	  Strategy    strategy=    strategies[i].getStrategy();    	non-compiled	[CE]  ';'  expected	54	None	replace
55	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getStrategy(cal.getTime());  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getStrategy(cal.getTime());  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getStrategy(cal.getTime());	  Strategy    strategy=    strategies[i].getStrategy();    	non-compiled	[CE]  ';'  expected	54	None	replace
56	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getStrategy(tzNames[i]);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getStrategy(tzNames[i]);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getStrategy(tzNames[i]);	  Strategy    strategy=    strategies[i].getStrategy();    	non-compiled	[CE]  ';'  expected	54	None	replace
57	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getStandardValue();  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getStandardValue();  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getStandardValue();	  Strategy    strategy=    strategies[i].clone();    	non-compiled	[CE]  ';'  expected	25	None	replace
58	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getStandardStrategy();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getStandardStrategy();  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getStandardStrategy();	  Strategy    strategy=    strategies[i].clone();    	non-compiled	[CE]  ';'  expected	25	None	replace
59	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i)+  2);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i)+  2);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(i)+  2);	  int    i    =    parsePattern.getIndex(source.substring(i)+    1);    	non-compiled	[CE]  ';'  expected	38	None	replace
60	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos.lastIndexOf(i)));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos.lastIndexOf(i)));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos.lastIndexOf(i)));	  Matcher    matcher    =    parsePattern.matcher(source.substring(pos.indexOf(i)));    	non-compiled	[CE]  ';'  expected	74	None	replace
61	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos.indexOf(i  +  1)));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos.indexOf(i  +  1)));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos.indexOf(i  +  1)));	  Matcher    matcher    =    parsePattern.matcher(source.substring(pos.indexOf(i)));    	non-compiled	[CE]  ';'  expected	74	None	replace
62	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  pos.indexOf(i)));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  pos.indexOf(i)));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  pos.indexOf(i)));	  Matcher    matcher    =    parsePattern.matcher(source.substring(pos.indexOf(i)));    	non-compiled	[CE]  ';'  expected	74	None	replace
63	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  1xf;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  &  1xf;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  1xf;	  Strategy    strategy=    strategies[i++]    &    1xff;    	non-compiled	[CE]  ';'  expected	12	None	replace
64	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  2xff;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  &  2xff;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  2xff;	  Strategy    strategy=    strategies[i++]    &    1xff;    	non-compiled	[CE]  ';'  expected	12	None	replace
65	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  3xff;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  &  3xff;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  3xff;	  Strategy    strategy=    strategies[i++]    &    1xff;    	non-compiled	[CE]  ';'  expected	12	None	replace
66	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i  +  1),  strategies[i++]);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(i  +  1),  strategies[i++]);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i++]);    	non-compiled	[CE]  ';'  expected	51	None	replace
67	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  pos).trim());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  pos).trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  pos).trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1)).trim());    	non-compiled	[CE]  ';'  expected	18	None	replace
68	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  offset).trim());  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  offset).trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  offset).trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1)).trim());    	non-compiled	[CE]  ';'  expected	18	None	replace
69	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1)).trim();  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1)).trim();  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1)).trim();	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1)).trim());    	non-compiled	[CE]  ';'  expected	18	None	replace
70	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  i);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  i);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  i);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    pos);    	non-compiled	[CE]  ';'  expected	9	None	replace
71	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  pos  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  pos  +  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  pos  +  1);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    pos);    	non-compiled	[CE]  ';'  expected	9	None	replace
72	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  offset);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  offset);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  offset);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    pos);    	non-compiled	[CE]  ';'  expected	9	None	replace
73	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  pos  +  1));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  pos  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  pos  +  1));	  Matcher    matcher    =    parsePattern.matcher(source.substring(pos    +    1));    	non-compiled	[CE]  ';'  expected	59	None	replace
74	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1)+  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1)+  1);	  Matcher    matcher    =    parsePattern.matcher(source.substring(pos    +    1));    	non-compiled	[CE]  ';'  expected	59	None	replace
75	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategies[i]);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategies[i]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i));    	non-compiled	[CE]  ';'  expected	43	None	replace
76	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i)+  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i)+  1);	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i));    	non-compiled	[CE]  ';'  expected	43	None	replace
77	[BUG]  [BUGGY]  pos.setIndex(i++  +  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  pos.setIndex(i++  +  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	pos.setIndex(i++  +  1);	  pos.setIndex(i++);    	non-compiled	[CE]  ';'  expected	20	None	replace
78	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(0,  i  +  1));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(0,  i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(0,  i  +  1));	  Tag    tz    =    parsePattern.matcher(source.substring(0,    i    +    1));    	non-compiled	[CE]  ';'  expected	66	None	replace
79	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i]);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i]);	  Tag    tz    =    parsePattern.matcher(source.substring(0,    i    +    1));    	non-compiled	[CE]  ';'  expected	66	None	replace
80	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(timeZone,  locale  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(timeZone,  locale  +  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(timeZone,  locale  +  1);	  cal    =    Calendar.getInstance(timeZone,    i    +    1);    	non-compiled	[CE]  ';'  expected	45	None	replace
81	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(timeZone,  i  +  1,  strategies[i]);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(timeZone,  i  +  1,  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(timeZone,  i  +  1,  strategies[i]);	  cal    =    Calendar.getInstance(timeZone,    i    +    1);    	non-compiled	[CE]  ';'  expected	45	None	replace
82	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.group(i  +  1));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  pos.setIndex(offset+matcher.group(i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	pos.setIndex(offset+matcher.group(i  +  1));	  pos.setIndex(offset+matcher.group(i));    	non-compiled	[CE]  ';'  expected	21	None	replace
83	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.group(i)-  1);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  pos.setIndex(offset+matcher.group(i)-  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	pos.setIndex(offset+matcher.group(i)-  1);	  pos.setIndex(offset+matcher.group(i));    	non-compiled	[CE]  ';'  expected	21	None	replace
84	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.group(i++));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  pos.setIndex(offset+matcher.group(i++));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	pos.setIndex(offset+matcher.group(i++));	  pos.setIndex(offset+matcher.group(i));    	non-compiled	[CE]  ';'  expected	21	None	replace
85	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  false);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  false);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  false);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    true);    	non-compiled	[CE]  ';'  expected	10	None	replace
86	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  true);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  true);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  true);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    true);    	non-compiled	[CE]  ';'  expected	10	None	replace
87	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i++),  true);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i++),  true);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i++),  true);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    true);    	non-compiled	[CE]  ';'  expected	10	None	replace
88	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i).toLowerCase());  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i).toLowerCase());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i).toLowerCase());	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i).trim());    	non-compiled	[CE]  ';'  expected	61	None	replace
89	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  locale.trim());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  locale.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  locale.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i).trim());    	non-compiled	[CE]  ';'  expected	61	None	replace
90	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[0]);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[0]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[0]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i]);    	non-compiled	[CE]  ';'  expected	11	None	replace
91	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i]);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i]);    	non-compiled	[CE]  ';'  expected	11	None	replace
92	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[1]);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[1]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[1]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i]);    	non-compiled	[CE]  ';'  expected	11	None	replace
93	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  *  2];  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  *  2];  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  *  2];	  Strategy    strategy=    strategies[i    *    1];    	non-compiled	[CE]  ';'  expected	53	None	replace
94	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  *  3];  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  *  3];  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  *  3];	  Strategy    strategy=    strategies[i    *    1];    	non-compiled	[CE]  ';'  expected	53	None	replace
95	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  *  4];  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  *  4];  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  *  4];	  Strategy    strategy=    strategies[i    *    1];    	non-compiled	[CE]  ';'  expected	53	None	replace
96	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  i  +  1));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(0,  i  +  1));	  int    i    =    parsePattern.parseIndex(source.substring(0,    i));    	non-compiled	[CE]  ';'  expected	15	None	replace
97	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  i)+  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  i)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(0,  i)+  1);	  int    i    =    parsePattern.parseIndex(source.substring(0,    i));    	non-compiled	[CE]  ';'  expected	15	None	replace
98	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  i),  strategies[i]);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  i),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(0,  i),  strategies[i]);	  int    i    =    parsePattern.parseIndex(source.substring(0,    i));    	non-compiled	[CE]  ';'  expected	15	None	replace
99	[BUG]  [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i),  strategies[i++]);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.matcher(source.substring(0,  i),  strategies[i++]);	  int    i    =    parsePattern.matcher(source.substring(0,    i),    strategies[i]);    	non-compiled	[CE]  ';'  expected	8	None	replace
100	[BUG]  [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i)+  1,  strategies[i]);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i)+  1,  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.matcher(source.substring(0,  i)+  1,  strategies[i]);	  int    i    =    parsePattern.matcher(source.substring(0,    i),    strategies[i]);    	non-compiled	[CE]  ';'  expected	8	None	replace
101	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i]);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i    +    1));    	non-compiled	[CE]  ';'  expected	60	None	replace
102	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i,  pos  +  1));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i,  pos  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i,  pos  +  1));	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i    +    1));    	non-compiled	[CE]  ';'  expected	60	None	replace
103	[BUG]  [BUGGY]  Tag  tz  =(Tag)cal.get(i++  +  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =(Tag)cal.get(i++  +  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =(Tag)cal.get(i++  +  1);	  Tag    tz    =(Tag)cal.get(i++);    	non-compiled	[CE]  ';'  expected	4	None	replace
104	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  +  1]  |  0xff;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  +  1]  |  0xff;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  +  1]  |  0xff;	  Strategy    strategy=    strategies[i    +    1]    &    0xff;    	non-compiled	[CE]  ';'  expected	40	None	replace
105	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  *  1]  &  0xff;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  *  1]  &  0xff;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  *  1]  &  0xff;	  Strategy    strategy=    strategies[i    +    1]    &    0xff;    	non-compiled	[CE]  ';'  expected	40	None	replace
106	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  +  1]  &  2;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  +  1]  &  2;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  +  1]  &  2;	  Strategy    strategy=    strategies[i    +    1]    &    0xff;    	non-compiled	[CE]  ';'  expected	40	None	replace
107	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategies[i]  +  1);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategies[i]  +  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(timeZone,  strategies[i]  +  1);	  cal    =    Calendar.getInstance(timeZone,    strategies[i]);    	non-compiled	[CE]  ';'  expected	30	None	replace
108	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategies[i]  -  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategies[i]  -  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(timeZone,  strategies[i]  -  1);	  cal    =    Calendar.getInstance(timeZone,    strategies[i]);    	non-compiled	[CE]  ';'  expected	30	None	replace
109	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  pos.trim());  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  pos.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  pos.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    source.trim());    	non-compiled	[CE]  ';'  expected	17	None	replace
110	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  locale.trim());  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  locale.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  locale.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    source.trim());    	non-compiled	[CE]  ';'  expected	17	None	replace
111	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(i  +  1)+  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(i  +  1)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(i  +  1)+  1);	  Tag    tz    =    parsePattern.matcher(source.substring(i)+    1);    	non-compiled	[CE]  ';'  expected	56	None	replace
112	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i)+  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(i)+  1);	  Tag    tz    =    parsePattern.matcher(source.substring(i)+    1);    	non-compiled	[CE]  ';'  expected	56	None	replace
113	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(i)+  2);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(i)+  2);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(i)+  2);	  Tag    tz    =    parsePattern.matcher(source.substring(i)+    1);    	non-compiled	[CE]  ';'  expected	56	None	replace
114	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.getIndex()  +  1));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.getIndex()  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos.getIndex()  +  1));	  int    i    =    parsePattern.parseIndex(source.substring(pos.getIndex()));    	non-compiled	[CE]  ';'  expected	71	None	replace
115	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.getIndex()  -  1));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.getIndex()  -  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos.getIndex()  -  1));	  int    i    =    parsePattern.parseIndex(source.substring(pos.getIndex()));    	non-compiled	[CE]  ';'  expected	71	None	replace
116	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  pos.getIndex()));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  pos.getIndex()));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(0,  pos.getIndex()));	  int    i    =    parsePattern.parseIndex(source.substring(pos.getIndex()));    	non-compiled	[CE]  ';'  expected	71	None	replace
117	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.getLength()));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.getLength()));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos.getLength()));	  int    i    =    parsePattern.parseIndex(source.substring(pos.getIndex()));    	non-compiled	[CE]  ';'  expected	71	None	replace
118	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i++]);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i++]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i++]);    	non-compiled	[CE]  ';'  expected	52	None	replace
119	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i,  strategies[i]));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(i,  strategies[i]));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(i,  strategies[i]));	  Tag    tz    =    matcher.matcher(source.substring(i));    	non-compiled	[CE]  ';'  expected	22	None	replace
120	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  {  0;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  {  0;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  {  0;	  Strategy    strategy=    strategies[i++]    {    1;    	non-compiled	[CE]  ';'  expected	58	None	replace
121	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  {  1  }  ;  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  {  1  }  ;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  {  1  }  ;	  Strategy    strategy=    strategies[i++]    {    1;    	non-compiled	[CE]  ';'  expected	58	None	replace
122	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategy,  locale);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategy,  locale);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(timeZone,  strategy,  locale);	  cal    =    Calendar.getInstance(timeZone,    strategy);    	non-compiled	[CE]  ';'  expected	31	None	replace
123	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategy,  strategies[i]);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategy,  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(timeZone,  strategy,  strategies[i]);	  cal    =    Calendar.getInstance(timeZone,    strategy);    	non-compiled	[CE]  ';'  expected	31	None	replace
124	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  10.0;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  &  10.0;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  10.0;	  Strategy    strategy=    strategies[i++]    &    1L;    	non-compiled	[CE]  ';'  expected	2	None	replace
125	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.lastIndexOf('.',  i)));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.lastIndexOf('.',  i)));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.lastIndexOf('.',  i)));	  int    i    =    parsePattern.getIndex(source.substring(pos.lastIndexOf('.')));    	non-compiled	[CE]  ';'  expected	68	None	replace
126	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.indexOf('.',  i)));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.indexOf('.',  i)));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.indexOf('.',  i)));	  int    i    =    parsePattern.getIndex(source.substring(pos.lastIndexOf('.')));    	non-compiled	[CE]  ';'  expected	68	None	replace
127	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  pos.lastIndexOf('.')));  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  pos.lastIndexOf('.')));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(0,  pos.lastIndexOf('.')));	  int    i    =    parsePattern.getIndex(source.substring(pos.lastIndexOf('.')));    	non-compiled	[CE]  ';'  expected	68	None	replace
128	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.lastIndexOf('.')+  1));  [CE]  ';'  expected  [FE]                        AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.lastIndexOf('.')+  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.lastIndexOf('.')+  1));	  int    i    =    parsePattern.getIndex(source.substring(pos.lastIndexOf('.')));    	non-compiled	[CE]  ';'  expected	68	None	replace
129	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1)+  1);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1)+  1);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i)+    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
130	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i)+  2);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i)+  2);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i)+  2);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i)+    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
131	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i,  pos)+  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i,  pos)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i,  pos)+  1);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i)+    1);    	non-compiled	[CE]  ';'  expected	48	None	replace
132	[BUG]  [BUGGY]  cal.setIndex(i  +  1,  strategies[i]);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal.setIndex(i  +  1,  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal.setIndex(i  +  1,  strategies[i]);	  cal.setIndex(i    +    1);    	non-compiled	[CE]  ';'  expected	27	None	replace
133	[BUG]  [BUGGY]  cal.setTime(i  +  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal.setTime(i  +  1);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal.setTime(i  +  1);	  cal.setTime(i);    	non-compiled	[CE]  ';'  expected	64	None	replace
134	[BUG]  [BUGGY]  cal.setTime(i,  strategies[i]);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal.setTime(i,  strategies[i]);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal.setTime(i,  strategies[i]);	  cal.setTime(i);    	non-compiled	[CE]  ';'  expected	64	None	replace
135	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i  +  1)+  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i  +  1)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(i  +  1)+  1);	  int    i    =    parsePattern.parseIndex(source.substring(i)+    1);    	non-compiled	[CE]  ';'  expected	16	None	replace
136	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i)+  2);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i)+  2);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(i)+  2);	  int    i    =    parsePattern.parseIndex(source.substring(i)+    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
137	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i,  pos)+  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i,  pos)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(i,  pos)+  1);	  int    i    =    parsePattern.parseIndex(source.substring(i)+    1);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
138	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos,  i));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos,  i));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos,  i));	  int    i    =    parsePattern.getIndex(source.substring(i,    pos));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
139	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  pos));  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  pos));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(0,  pos));	  int    i    =    parsePattern.getIndex(source.substring(i,    pos));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
140	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i,  pos  +  1));  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i,  pos  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(i,  pos  +  1));	  int    i    =    parsePattern.getIndex(source.substring(i,    pos));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
141	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].setCalendar(cal,  matcher.group(i));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].setCalendar(cal,  matcher.group(i));  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].setCalendar(cal,  matcher.group(i));	  Strategy    strategy=    strategies[i].setCalendar(cal);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
142	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].setTime(cal);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].setTime(cal);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].setTime(cal);	  Strategy    strategy=    strategies[i].setCalendar(cal);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
143	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].setCalendar(this,  cal);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].setCalendar(this,  cal);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].setCalendar(this,  cal);	  Strategy    strategy=    strategies[i].setCalendar(cal);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
144	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].setCalendar(cal,  matcher);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].setCalendar(cal,  matcher);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].setCalendar(cal,  matcher);	  Strategy    strategy=    strategies[i].setCalendar(cal);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
145	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategy.trim());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategy.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategy.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    cal.trim());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
146	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[cal.length()  -  1]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[cal.length()  -  1]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[cal.length()  -  1]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    cal.trim());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
147	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]?  0xff  :  strategies[i++];  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]?  0xff  :  strategies[i++];  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]?  0xff  :  strategies[i++];	  Strategy    strategy=    strategies[i++]    |    0xff;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
148	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  /  0xff;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  /  0xff;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  /  0xff;	  Strategy    strategy=    strategies[i++]    |    0xff;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
149	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(locale,  i  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(locale,  i  +  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(locale,  i  +  1);	  cal    =    Calendar.getInstance(locale,    i);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
150	[BUG]  [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i)+  2);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i)+  2);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.matcher(source.substring(0,  i)+  2);	  int    i    =    parsePattern.matcher(source.substring(0,    i)+    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
151	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.index  +  1));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.index  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos.index  +  1));	  int    i    =    parsePattern.parseIndex(source.substring(pos.lastIndex));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
152	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.lastIndex  +  1));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.lastIndex  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos.lastIndex  +  1));	  int    i    =    parsePattern.parseIndex(source.substring(pos.lastIndex));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
153	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  pos.lastIndex));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  pos.lastIndex));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(0,  pos.lastIndex));	  int    i    =    parsePattern.parseIndex(source.substring(pos.lastIndex));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
154	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  |  0;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  |  0;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  |  0;	  Strategy    strategy=    strategies[i++]    |    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
155	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]?  strategies[0]  :  1;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]?  strategies[0]  :  1;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]?  strategies[0]  :  1;	  Strategy    strategy=    strategies[i++]    |    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
156	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]?  strategies[i++]  :  1;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]?  strategies[i++]  :  1;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]?  strategies[i++]  :  1;	  Strategy    strategy=    strategies[i++]    |    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
157	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos  +  i));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos  +  i));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(pos  +  i));	  Tag    tz    =    parsePattern.matcher(source.substring(pos    +    1));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
158	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.length()  -  1));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.length()  -  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos.length()  -  1));	  int    i    =    parsePattern.parseIndex(source.substring(pos.lastIndex));    	non-compiled	[CE]  <identifier>  expected	72	None	replace
159	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.indexOf(i)));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.indexOf(i)));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos.indexOf(i)));	  int    i    =    parsePattern.parseIndex(source.substring(pos.getIndex()));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
160	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  {  1L  }  ;  [CE]  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  {  1L  }  ;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  {  1L  }  ;	  Strategy    strategy=    strategies[i++]    {    1;    	non-compiled	[CE]  	58	None	replace
161	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategies[i++]);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategies[i++]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i++]);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
162	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[pos.length()  ]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[pos.length()  ]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[pos.length()  ]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i++]);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
163	[BUG]  [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i)+  1,  strategy);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i)+  1,  strategy);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.matcher(source.substring(0,  i)+  1,  strategy);	  int    i    =    parsePattern.matcher(source.substring(0,    i),    strategy);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
164	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.length()  -  1),  strategies[i]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.length()  -  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.length()  -  1),  strategies[i]);	  int    i    =    parsePattern.getIndex(source.substring(pos.length()    -    1));    	non-compiled	[CE]  <identifier>  expected	69	None	replace
165	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  true);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  true);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    true);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
166	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  +  1]  &  0xFFFFL;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  +  1]  &  0xFFFFL;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  +  1]  &  0xFFFFL;	  Strategy    strategy=    strategies[i    +    1]    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
167	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  *  0]  &  0xFFFF;  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  *  0]  &  0xFFFF;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  *  0]  &  0xFFFF;	  Strategy    strategy=    strategies[i    +    1]    &    0xFFFF;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
168	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  pos);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  pos);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  pos);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    pos);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
169	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i  +  1),  strategies[i]);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(i  +  1),  strategies[i]);	  int    i    =    parsePattern.parseIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
170	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i  +  1),  strategies[pos.length()  -  1]);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(i  +  1),  strategies[pos.length()  -  1]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(i  +  1),  strategies[pos.length()  -  1]);	  int    i    =    parsePattern.parseIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
171	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  1xf0;  [CE]  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  &  1xf0;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  1xf0;	  Strategy    strategy=    strategies[i++]    &    1xff;    	non-compiled	[CE]  	12	None	replace
172	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[pos]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[pos]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[pos]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i]);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
173	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i),  strategies[i++]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(0,  i),  strategies[i++]);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i++]);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
174	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i++]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(pos  +  1),  strategies[i++]);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i++]);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
175	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  source.trim());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  source.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  source.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    source.trim());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
176	[BUG]  [BUGGY]  cal.setTime(timeZone);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal.setTime(timeZone);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal.setTime(timeZone);	  cal.setTime(i);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
177	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  +  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  +  1;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  +  1;	  Strategy    strategy=    strategies[i++]    <    <    1;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
178	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[i]).trim());  [CE]  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[i]).trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[i]).trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1)).trim());    	non-compiled	[CE]  	18	None	replace
179	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i)).trim());  [CE]  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i)).trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i)).trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1)).trim());    	non-compiled	[CE]  	18	None	replace
180	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i  +  1),  strategies[pos.length()  -  1]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(i  +  1),  strategies[pos.length()  -  1]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(i  +  1),  strategies[pos.length()  -  1]);	  int    i    =    parsePattern.getIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
181	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  1xff  +  1;  [CE]  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  &  1xff  +  1;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  1xff  +  1;	  Strategy    strategy=    strategies[i++]    &    0xff    +    1;    	non-compiled	[CE]  	46	None	replace
182	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]?  1  :  1;  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]?  1  :  1;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]?  1  :  1;	  Strategy    strategy=    strategies[i++]    |    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
183	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(dateZone,  i);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(dateZone,  i);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(dateZone,  i);	  cal    =    Calendar.getInstance(locale,    i);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
184	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategies[i].trim());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategies[i].trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategies[i].trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i).trim());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
185	[BUG]  [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i),  strategies[1]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i),  strategies[1]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.matcher(source.substring(0,  i),  strategies[1]);	  int    i    =    parsePattern.matcher(source.substring(0,    i),    strategies[i]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
186	[BUG]  [BUGGY]  int  i  =  matcher.matcher(source.substring(0,  i),  strategies[i]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  matcher.matcher(source.substring(0,  i),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  matcher.matcher(source.substring(0,  i),  strategies[i]);	  int    i    =    parsePattern.matcher(source.substring(0,    i),    strategies[i]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
187	[BUG]  [BUGGY]  Tag  tz  =(Tag)cal.get(i  +  1L);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =(Tag)cal.get(i  +  1L);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =(Tag)cal.get(i  +  1L);	  Tag    tz    =(Tag)cal.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
188	[BUG]  [BUGGY]  Tag  tz  =(Tag)cal.get(i  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =(Tag)cal.get(i  +  2);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =(Tag)cal.get(i  +  2);	  Tag    tz    =(Tag)cal.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
189	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1),  strategies[i++]);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.index  +  1),  strategies[i++]);	  int    i    =    parsePattern.getIndex(source.substring(pos.index    +    1));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
190	[BUG]  [BUGGY]  Tag  tz  =(Tag)cal.get(i-2);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =(Tag)cal.get(i-2);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =(Tag)cal.get(i-2);	  Tag    tz    =(Tag)cal.get(i-1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
191	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  i));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  i));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  i));	  Matcher    matcher    =    parsePattern.matcher(source.substring(pos    +    1));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
192	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  *  10];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  *  10];  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  *  10];	  Strategy    strategy=    strategies[i    *    1];    	non-compiled	[CE]  <identifier>  expected	53	None	replace
193	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(locale,  timeZone);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(locale,  timeZone);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(locale,  timeZone);	  cal    =    Calendar.getInstance(timeZone,    locale);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
194	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[cal.length()  -  1);  [CE]  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[cal.length()  -  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[cal.length()  -  1);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    cal.trim());    	non-compiled	[CE]  	50	None	replace
195	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[cal.length()  ]);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[cal.length()  ]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[cal.length()  ]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    cal.trim());    	non-compiled	[CE]  ';'  expected	50	None	replace
196	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(dateZone,  i  +  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(dateZone,  i  +  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(dateZone,  i  +  1);	  cal    =    Calendar.getInstance(timeZone,    i    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
197	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.group(i)+  1);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  pos.setIndex(offset+matcher.group(i)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	pos.setIndex(offset+matcher.group(i)+  1);	  pos.setIndex(offset+matcher.group(i));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
198	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i++]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i++]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i    +    1));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
199	[BUG]  [BUGGY]  pos.setIndex(i  *  1);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  pos.setIndex(i  *  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	pos.setIndex(i  *  1);	  pos.setIndex(i    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
200	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].setCalendar(cal,  tzNames);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].setCalendar(cal,  tzNames);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].setCalendar(cal,  tzNames);	  Strategy    strategy=    strategies[i].setCalendar(cal);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
201	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  cal.getIndex());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  cal.getIndex());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  cal.getIndex());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1)).trim());    	non-compiled	[CE]  <identifier>  expected	18	None	replace
202	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1)).trim());  [CE]  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1)).trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1)).trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1)).trim());    	non-compiled	[CE]  	18	None	replace
203	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1)).trim());  [CE]  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1)).trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1)).trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1)).trim());    	non-compiled	[CE]  	18	None	replace
204	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(pos  +  1),  strategies[i]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(pos  +  1),  strategies[i]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(pos  +  1),  strategies[i]);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i]);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
205	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i)+  1);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i)+  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(0,  i)+  1);	  Tag    tz    =    parsePattern.matcher(source.substring(i)+    1);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
206	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.charAt(i));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  pos.setIndex(offset+matcher.charAt(i));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	pos.setIndex(offset+matcher.charAt(i));	  pos.setIndex(offset+matcher.group(i));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
207	[BUG]  [BUGGY]  pos.setIndex(offset+matcher.start());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  pos.setIndex(offset+matcher.start());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	pos.setIndex(offset+matcher.start());	  pos.setIndex(offset+matcher.group(i));    	non-compiled	[CE]  <identifier>  expected	21	None	replace
208	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  i),  strategy);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(0,  i),  strategy);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(0,  i),  strategy);	  int    i    =    parsePattern.parseIndex(source.substring(0,    i));    	non-compiled	[CE]  <identifier>  expected	15	None	replace
209	[BUG]  [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategies[i],  locale);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  cal  =  Calendar.getInstance(timeZone,  strategies[i],  locale);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	cal  =  Calendar.getInstance(timeZone,  strategies[i],  locale);	  cal    =    Calendar.getInstance(timeZone,    strategies[i]);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
210	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.getIndex(),  i));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.getIndex(),  i));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos.getIndex(),  i));	  int    i    =    parsePattern.parseIndex(source.substring(pos.getIndex()));    	non-compiled	[CE]  <identifier>  expected	71	None	replace
211	[BUG]  [BUGGY]  Tag  tz  =(Tag)cal.get(i  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =(Tag)cal.get(i  *  1);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =(Tag)cal.get(i  *  1);	  Tag    tz    =(Tag)cal.get(i    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
212	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  }  ;  [CE]  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  }  ;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  }  ;	  Strategy    strategy=    strategies[i++]    &    2;    	non-compiled	[CE]  	55	None	replace
213	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos,  i  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos,  i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos,  i  +  1));	  int    i    =    parsePattern.getIndex(source.substring(i,    pos));    	non-compiled	[CE]  <identifier>  expected	49	None	replace
214	[BUG]  [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.i  +  1));  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.parseIndex(source.substring(pos.i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.parseIndex(source.substring(pos.i  +  1));	  int    i    =    parsePattern.parseIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
215	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  2L;  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  &  2L;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  2L;	  Strategy    strategy=    strategies[i++]    &    1L;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
216	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  &  3;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  &  3;  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  &  3;	  Strategy    strategy=    strategies[i++]    &    1L;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
217	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].set(cal,  matcher.group(i));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].set(cal,  matcher.group(i));  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].set(cal,  matcher.group(i));	  Strategy    strategy=    strategies[i].clone();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
218	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  cal.trim());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  cal.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  cal.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    cal.trim());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
219	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  cal.trim());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  cal.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  cal.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    cal.trim());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
220	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  cal.trim());  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  cal.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  cal.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    cal.trim());    	non-compiled	[CE]  <identifier>  expected	50	None	replace
221	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  source.trim());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  source.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  source.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    source.trim());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
222	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1),  source.trim());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1),  source.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1),  source.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    source.trim());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
223	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(pos  +  1),  strategies[i++]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(pos  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(pos  +  1),  strategies[i++]);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i++]);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
224	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getStrategy(tzNames);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getStrategy(tzNames);  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getStrategy(tzNames);	  Strategy    strategy=    strategies[i].getStrategy();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
225	[BUG]  [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(pos  +  1),  locale);  [CE]  <identifier>  expected  [FE]                      AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  matcher.matcher(source.substring(pos  +  1),  locale);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  matcher.matcher(source.substring(pos  +  1),  locale);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    locale);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
226	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i  +  1),  locale);  [CE]  <identifier>  expected  [FE]                        AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i  +  1),  locale);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(0,  i  +  1),  locale);	  Tag    tz    =    parsePattern.matcher(source.substring(i    +    1),    locale);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
227	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategy);  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategy);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  strategy);	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i));    	non-compiled	[CE]  <identifier>  expected	43	None	replace
228	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1));  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1));	  Matcher    matcher    =    parsePattern.matcher(source.substring(pos    +    1));    	non-compiled	[CE]  <identifier>  expected	59	None	replace
229	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos,  i  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(pos,  i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(pos,  i  +  1));	  Tag    tz    =    parsePattern.matcher(source.substring(pos    +    1));    	non-compiled	[CE]  <identifier>  expected	65	None	replace
230	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  strategies[i]));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  strategies[i]));  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  strategies[i]));	  Matcher    matcher    =    parsePattern.matcher(source.substring(i,    strategies[i]));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
231	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.i  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(pos.i  +  1));  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(pos.i  +  1));	  int    i    =    parsePattern.getIndex(source.substring(i    +    1));    	non-compiled	[CE]  <identifier>  expected	36	None	replace
232	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  pos);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  pos);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos  +  1),  pos);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    pos);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
233	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  pos);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  pos);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  pos);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    pos);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
234	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  cal);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  cal);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  cal);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    pos);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
235	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  formatPattern.trim());  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  formatPattern.trim());  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i),  formatPattern.trim());	  Matcher    matcher    =    parsePattern.matcher(source.substring(0,    i).trim());    	non-compiled	[CE]  <identifier>  expected	61	None	replace
236	[BUG]  [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i++]);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Tag  tz  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Tag  tz  =  parsePattern.matcher(source.substring(0,  i  +  1),  strategies[i++]);	  Tag    tz    =    parsePattern.matcher(source.substring(0,    i    +    1));    	non-compiled	[CE]  <identifier>  expected	66	None	replace
237	[BUG]  [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i),  strategies[pos]);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.matcher(source.substring(0,  i),  strategies[pos]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.matcher(source.substring(0,  i),  strategies[pos]);	  int    i    =    parsePattern.matcher(source.substring(0,    i),    strategies[i]);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
238	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i++]  |  cal.getTime();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i++]  |  cal.getTime();  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i++]  |  cal.getTime();	  Strategy    strategy=    strategies[i++]    |    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
239	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i].getStandardTree();  [CE]  <identifier>  expected  [FE]            AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i].getStandardTree();  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i].getStandardTree();	  Strategy    strategy=    strategies[i].cloneTree();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
240	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1),  strategies[i++]);  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1),  strategies[i++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1),  strategies[i++]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i++]);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
241	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[pos++]);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[pos++]);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(i  +  1),  strategies[pos++]);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    strategies[i++]);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
242	[BUG]  [BUGGY]  Strategy  strategy=  strategies[i  *  i  -  1];  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Strategy  strategy=  strategies[i  *  i  -  1];  [BUGGY]      strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Strategy  strategy=  strategies[i  *  i  -  1];	  Strategy    strategy=    strategies[i    -    1];    	non-compiled	[CE]  <identifier>  expected	39	None	replace
243	[BUG]  [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  i),  strategy);  [CE]  <identifier>  expected  [FE]                    AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  int  i  =  parsePattern.getIndex(source.substring(0,  i),  strategy);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	int  i  =  parsePattern.getIndex(source.substring(0,  i),  strategy);	  int    i    =    parsePattern.getIndex(source.substring(0,    i));    	non-compiled	[CE]  <identifier>  expected	37	None	replace
244	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  true);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  true);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(0,  i  +  1),  true);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    true);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
245	[BUG]  [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1),  true);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      int  offset=  pos.getIndex();  Matcher  matcher=  parsePattern.matcher(source.substring(offset));  if(!matcher.lookingAt())  {  return  null;  }  Calendar  cal=  Calendar.getInstance(timeZone,  locale);  cal.clear();  for(int  i=0;  i<strategies.length;)  {      [BUGGY]  Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1),  true);  [BUGGY]      Strategy  strategy=  strategies[i++];  strategy.setCalendar(this,  cal,  matcher.group(i));  }  pos.setIndex(offset+matcher.end());  return  cal.getTime();  }  [CLASS]  FastDateParser  KeyValue  1  CopyQuotedStrategy  TextStrategy  NumberStrategy  2  TimeZoneStrategy  3  4  5  [METHOD]  parse  [RETURN_TYPE]  Date  String  source  ParsePosition  pos  [VARIABLES]  Locale  JAPANESE_IMPERIAL  locale  Pattern  formatPattern  parsePattern  Matcher  matcher  Calendar  cal  ConcurrentMap  nameValues  tzsCache  String  currentFormatField  formatField  id  key  nextFormatField  pattern  source  validTimeZoneChars  long  serialVersionUID  int  $anonymous0  field  i  offset  thisYear  value  Comparator  IGNORE_CASE_COMPARATOR  TimeZone  timeZone  tz  Strategy[]  strategies  boolean  SortedMap  tzNames  Strategy  ABBREVIATED_YEAR_STRATEGY  AM_PM_STRATEGY  DAY_OF_MONTH_STRATEGY  DAY_OF_WEEK_IN_MONTH_STRATEGY  DAY_OF_WEEK_STRATEGY  DAY_OF_YEAR_STRATEGY  ERA_STRATEGY  HOUR_OF_DAY_STRATEGY  HOUR_STRATEGY  LITERAL_YEAR_STRATEGY  MILLISECOND_STRATEGY  MINUTE_STRATEGY  MODULO_HOUR_OF_DAY_STRATEGY  MODULO_HOUR_STRATEGY  NUMBER_MONTH_STRATEGY  SECOND_STRATEGY  TEXT_MONTH_STRATEGY  WEEK_OF_MONTH_STRATEGY  WEEK_OF_YEAR_STRATEGY  currentStrategy  nextStrategy  strategy  ParsePosition  pos  	projects/Lang9/src/main/java/org/apache/commons/lang3/time/FastDateParser.java	0.24253562503633297	286	286	2	replace	Matcher  matcher  =  parsePattern.matcher(source.substring(pos,  i  +  1),  true);	  Matcher    matcher    =    parsePattern.matcher(source.substring(i    +    1),    true);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
